

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Jul 17 21:20:17 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F15345
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,inline,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.05
    45                           ; Generated 20/12/2018 GMT
    46                           ; 
    47                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F15345 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  009B                     	;# 
   100  009B                     	;# 
   101  009C                     	;# 
   102  009D                     	;# 
   103  009E                     	;# 
   104  009F                     	;# 
   105  0119                     	;# 
   106  0119                     	;# 
   107  0119                     	;# 
   108  011A                     	;# 
   109  011A                     	;# 
   110  011A                     	;# 
   111  011B                     	;# 
   112  011B                     	;# 
   113  011B                     	;# 
   114  011B                     	;# 
   115  011B                     	;# 
   116  011C                     	;# 
   117  011C                     	;# 
   118  011C                     	;# 
   119  011D                     	;# 
   120  011D                     	;# 
   121  011D                     	;# 
   122  011E                     	;# 
   123  011E                     	;# 
   124  011E                     	;# 
   125  011F                     	;# 
   126  011F                     	;# 
   127  011F                     	;# 
   128  011F                     	;# 
   129  011F                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  018E                     	;# 
   133  018F                     	;# 
   134  0190                     	;# 
   135  0191                     	;# 
   136  0192                     	;# 
   137  020C                     	;# 
   138  020C                     	;# 
   139  020D                     	;# 
   140  020E                     	;# 
   141  020F                     	;# 
   142  020F                     	;# 
   143  0210                     	;# 
   144  0210                     	;# 
   145  0211                     	;# 
   146  0211                     	;# 
   147  028C                     	;# 
   148  028C                     	;# 
   149  028D                     	;# 
   150  028D                     	;# 
   151  028E                     	;# 
   152  028F                     	;# 
   153  0290                     	;# 
   154  0291                     	;# 
   155  030C                     	;# 
   156  030C                     	;# 
   157  030D                     	;# 
   158  030E                     	;# 
   159  030F                     	;# 
   160  0310                     	;# 
   161  0310                     	;# 
   162  0311                     	;# 
   163  0312                     	;# 
   164  0313                     	;# 
   165  0314                     	;# 
   166  0314                     	;# 
   167  0315                     	;# 
   168  0316                     	;# 
   169  0318                     	;# 
   170  0318                     	;# 
   171  0319                     	;# 
   172  031A                     	;# 
   173  031C                     	;# 
   174  031C                     	;# 
   175  031D                     	;# 
   176  031E                     	;# 
   177  038C                     	;# 
   178  038C                     	;# 
   179  038D                     	;# 
   180  038E                     	;# 
   181  058C                     	;# 
   182  058C                     	;# 
   183  058D                     	;# 
   184  058E                     	;# 
   185  058F                     	;# 
   186  058F                     	;# 
   187  0590                     	;# 
   188  0591                     	;# 
   189  0592                     	;# 
   190  0593                     	;# 
   191  059C                     	;# 
   192  059C                     	;# 
   193  059D                     	;# 
   194  059D                     	;# 
   195  059E                     	;# 
   196  059F                     	;# 
   197  060C                     	;# 
   198  060D                     	;# 
   199  060E                     	;# 
   200  060F                     	;# 
   201  0610                     	;# 
   202  0611                     	;# 
   203  0612                     	;# 
   204  0613                     	;# 
   205  0614                     	;# 
   206  070C                     	;# 
   207  070D                     	;# 
   208  070E                     	;# 
   209  070F                     	;# 
   210  0710                     	;# 
   211  0711                     	;# 
   212  0712                     	;# 
   213  0713                     	;# 
   214  0716                     	;# 
   215  0717                     	;# 
   216  0718                     	;# 
   217  0719                     	;# 
   218  071A                     	;# 
   219  071B                     	;# 
   220  071C                     	;# 
   221  071D                     	;# 
   222  0796                     	;# 
   223  0797                     	;# 
   224  0798                     	;# 
   225  0799                     	;# 
   226  079A                     	;# 
   227  079B                     	;# 
   228  080C                     	;# 
   229  080D                     	;# 
   230  080E                     	;# 
   231  080F                     	;# 
   232  0810                     	;# 
   233  0811                     	;# 
   234  0812                     	;# 
   235  0813                     	;# 
   236  0814                     	;# 
   237  081A                     	;# 
   238  081A                     	;# 
   239  081B                     	;# 
   240  081C                     	;# 
   241  081C                     	;# 
   242  081D                     	;# 
   243  081E                     	;# 
   244  081F                     	;# 
   245  088C                     	;# 
   246  088D                     	;# 
   247  088E                     	;# 
   248  088F                     	;# 
   249  0890                     	;# 
   250  0891                     	;# 
   251  0892                     	;# 
   252  0893                     	;# 
   253  0895                     	;# 
   254  0896                     	;# 
   255  090C                     	;# 
   256  090E                     	;# 
   257  090F                     	;# 
   258  091F                     	;# 
   259  098F                     	;# 
   260  098F                     	;# 
   261  0990                     	;# 
   262  0991                     	;# 
   263  0992                     	;# 
   264  0993                     	;# 
   265  0994                     	;# 
   266  0995                     	;# 
   267  0996                     	;# 
   268  0997                     	;# 
   269  0A19                     	;# 
   270  0A19                     	;# 
   271  0A1A                     	;# 
   272  0A1A                     	;# 
   273  0A1B                     	;# 
   274  0A1B                     	;# 
   275  0A1B                     	;# 
   276  0A1C                     	;# 
   277  0A1C                     	;# 
   278  0A1D                     	;# 
   279  0A1D                     	;# 
   280  0A1E                     	;# 
   281  0A1E                     	;# 
   282  0A1F                     	;# 
   283  0A1F                     	;# 
   284  0A1F                     	;# 
   285  1E0F                     	;# 
   286  1E10                     	;# 
   287  1E11                     	;# 
   288  1E12                     	;# 
   289  1E13                     	;# 
   290  1E14                     	;# 
   291  1E15                     	;# 
   292  1E16                     	;# 
   293  1E17                     	;# 
   294  1E18                     	;# 
   295  1E19                     	;# 
   296  1E1A                     	;# 
   297  1E1B                     	;# 
   298  1E1C                     	;# 
   299  1E1D                     	;# 
   300  1E1E                     	;# 
   301  1E1F                     	;# 
   302  1E20                     	;# 
   303  1E21                     	;# 
   304  1E22                     	;# 
   305  1E23                     	;# 
   306  1E24                     	;# 
   307  1E25                     	;# 
   308  1E26                     	;# 
   309  1E27                     	;# 
   310  1E28                     	;# 
   311  1E29                     	;# 
   312  1E2A                     	;# 
   313  1E2B                     	;# 
   314  1E2C                     	;# 
   315  1E2D                     	;# 
   316  1E2E                     	;# 
   317  1E2F                     	;# 
   318  1E30                     	;# 
   319  1E31                     	;# 
   320  1E32                     	;# 
   321  1E33                     	;# 
   322  1E34                     	;# 
   323  1E35                     	;# 
   324  1E36                     	;# 
   325  1E37                     	;# 
   326  1E8F                     	;# 
   327  1E90                     	;# 
   328  1E91                     	;# 
   329  1E92                     	;# 
   330  1E93                     	;# 
   331  1E9C                     	;# 
   332  1EA1                     	;# 
   333  1EA2                     	;# 
   334  1EB1                     	;# 
   335  1EBB                     	;# 
   336  1EBC                     	;# 
   337  1EBD                     	;# 
   338  1EBE                     	;# 
   339  1EC3                     	;# 
   340  1EC5                     	;# 
   341  1EC6                     	;# 
   342  1EC7                     	;# 
   343  1ECB                     	;# 
   344  1ECC                     	;# 
   345  1ECD                     	;# 
   346  1ECE                     	;# 
   347  1F10                     	;# 
   348  1F11                     	;# 
   349  1F12                     	;# 
   350  1F13                     	;# 
   351  1F14                     	;# 
   352  1F15                     	;# 
   353  1F1C                     	;# 
   354  1F1D                     	;# 
   355  1F1E                     	;# 
   356  1F1F                     	;# 
   357  1F20                     	;# 
   358  1F21                     	;# 
   359  1F22                     	;# 
   360  1F23                     	;# 
   361  1F24                     	;# 
   362  1F25                     	;# 
   363  1F26                     	;# 
   364  1F27                     	;# 
   365  1F38                     	;# 
   366  1F39                     	;# 
   367  1F3A                     	;# 
   368  1F3B                     	;# 
   369  1F3C                     	;# 
   370  1F3D                     	;# 
   371  1F3E                     	;# 
   372  1F3F                     	;# 
   373  1F43                     	;# 
   374  1F44                     	;# 
   375  1F45                     	;# 
   376  1F46                     	;# 
   377  1F47                     	;# 
   378  1F48                     	;# 
   379  1F49                     	;# 
   380  1F4A                     	;# 
   381  1F4E                     	;# 
   382  1F4F                     	;# 
   383  1F50                     	;# 
   384  1F51                     	;# 
   385  1F52                     	;# 
   386  1F53                     	;# 
   387  1F54                     	;# 
   388  1F55                     	;# 
   389  1FE4                     	;# 
   390  1FE5                     	;# 
   391  1FE6                     	;# 
   392  1FE7                     	;# 
   393  1FE8                     	;# 
   394  1FE8                     	;# 
   395  1FE9                     	;# 
   396  1FEA                     	;# 
   397  1FEA                     	;# 
   398  1FEB                     	;# 
   399  1FED                     	;# 
   400  1FEE                     	;# 
   401  1FEF                     	;# 
   402  0000                     	;# 
   403  0001                     	;# 
   404  0002                     	;# 
   405  0003                     	;# 
   406  0004                     	;# 
   407  0005                     	;# 
   408  0006                     	;# 
   409  0007                     	;# 
   410  0008                     	;# 
   411  0009                     	;# 
   412  000A                     	;# 
   413  000B                     	;# 
   414  000C                     	;# 
   415  000D                     	;# 
   416  000E                     	;# 
   417  0012                     	;# 
   418  0013                     	;# 
   419  0014                     	;# 
   420  0018                     	;# 
   421  0019                     	;# 
   422  001A                     	;# 
   423  009B                     	;# 
   424  009B                     	;# 
   425  009C                     	;# 
   426  009D                     	;# 
   427  009E                     	;# 
   428  009F                     	;# 
   429  0119                     	;# 
   430  0119                     	;# 
   431  0119                     	;# 
   432  011A                     	;# 
   433  011A                     	;# 
   434  011A                     	;# 
   435  011B                     	;# 
   436  011B                     	;# 
   437  011B                     	;# 
   438  011B                     	;# 
   439  011B                     	;# 
   440  011C                     	;# 
   441  011C                     	;# 
   442  011C                     	;# 
   443  011D                     	;# 
   444  011D                     	;# 
   445  011D                     	;# 
   446  011E                     	;# 
   447  011E                     	;# 
   448  011E                     	;# 
   449  011F                     	;# 
   450  011F                     	;# 
   451  011F                     	;# 
   452  011F                     	;# 
   453  011F                     	;# 
   454  018C                     	;# 
   455  018D                     	;# 
   456  018E                     	;# 
   457  018F                     	;# 
   458  0190                     	;# 
   459  0191                     	;# 
   460  0192                     	;# 
   461  020C                     	;# 
   462  020C                     	;# 
   463  020D                     	;# 
   464  020E                     	;# 
   465  020F                     	;# 
   466  020F                     	;# 
   467  0210                     	;# 
   468  0210                     	;# 
   469  0211                     	;# 
   470  0211                     	;# 
   471  028C                     	;# 
   472  028C                     	;# 
   473  028D                     	;# 
   474  028D                     	;# 
   475  028E                     	;# 
   476  028F                     	;# 
   477  0290                     	;# 
   478  0291                     	;# 
   479  030C                     	;# 
   480  030C                     	;# 
   481  030D                     	;# 
   482  030E                     	;# 
   483  030F                     	;# 
   484  0310                     	;# 
   485  0310                     	;# 
   486  0311                     	;# 
   487  0312                     	;# 
   488  0313                     	;# 
   489  0314                     	;# 
   490  0314                     	;# 
   491  0315                     	;# 
   492  0316                     	;# 
   493  0318                     	;# 
   494  0318                     	;# 
   495  0319                     	;# 
   496  031A                     	;# 
   497  031C                     	;# 
   498  031C                     	;# 
   499  031D                     	;# 
   500  031E                     	;# 
   501  038C                     	;# 
   502  038C                     	;# 
   503  038D                     	;# 
   504  038E                     	;# 
   505  058C                     	;# 
   506  058C                     	;# 
   507  058D                     	;# 
   508  058E                     	;# 
   509  058F                     	;# 
   510  058F                     	;# 
   511  0590                     	;# 
   512  0591                     	;# 
   513  0592                     	;# 
   514  0593                     	;# 
   515  059C                     	;# 
   516  059C                     	;# 
   517  059D                     	;# 
   518  059D                     	;# 
   519  059E                     	;# 
   520  059F                     	;# 
   521  060C                     	;# 
   522  060D                     	;# 
   523  060E                     	;# 
   524  060F                     	;# 
   525  0610                     	;# 
   526  0611                     	;# 
   527  0612                     	;# 
   528  0613                     	;# 
   529  0614                     	;# 
   530  070C                     	;# 
   531  070D                     	;# 
   532  070E                     	;# 
   533  070F                     	;# 
   534  0710                     	;# 
   535  0711                     	;# 
   536  0712                     	;# 
   537  0713                     	;# 
   538  0716                     	;# 
   539  0717                     	;# 
   540  0718                     	;# 
   541  0719                     	;# 
   542  071A                     	;# 
   543  071B                     	;# 
   544  071C                     	;# 
   545  071D                     	;# 
   546  0796                     	;# 
   547  0797                     	;# 
   548  0798                     	;# 
   549  0799                     	;# 
   550  079A                     	;# 
   551  079B                     	;# 
   552  080C                     	;# 
   553  080D                     	;# 
   554  080E                     	;# 
   555  080F                     	;# 
   556  0810                     	;# 
   557  0811                     	;# 
   558  0812                     	;# 
   559  0813                     	;# 
   560  0814                     	;# 
   561  081A                     	;# 
   562  081A                     	;# 
   563  081B                     	;# 
   564  081C                     	;# 
   565  081C                     	;# 
   566  081D                     	;# 
   567  081E                     	;# 
   568  081F                     	;# 
   569  088C                     	;# 
   570  088D                     	;# 
   571  088E                     	;# 
   572  088F                     	;# 
   573  0890                     	;# 
   574  0891                     	;# 
   575  0892                     	;# 
   576  0893                     	;# 
   577  0895                     	;# 
   578  0896                     	;# 
   579  090C                     	;# 
   580  090E                     	;# 
   581  090F                     	;# 
   582  091F                     	;# 
   583  098F                     	;# 
   584  098F                     	;# 
   585  0990                     	;# 
   586  0991                     	;# 
   587  0992                     	;# 
   588  0993                     	;# 
   589  0994                     	;# 
   590  0995                     	;# 
   591  0996                     	;# 
   592  0997                     	;# 
   593  0A19                     	;# 
   594  0A19                     	;# 
   595  0A1A                     	;# 
   596  0A1A                     	;# 
   597  0A1B                     	;# 
   598  0A1B                     	;# 
   599  0A1B                     	;# 
   600  0A1C                     	;# 
   601  0A1C                     	;# 
   602  0A1D                     	;# 
   603  0A1D                     	;# 
   604  0A1E                     	;# 
   605  0A1E                     	;# 
   606  0A1F                     	;# 
   607  0A1F                     	;# 
   608  0A1F                     	;# 
   609  1E0F                     	;# 
   610  1E10                     	;# 
   611  1E11                     	;# 
   612  1E12                     	;# 
   613  1E13                     	;# 
   614  1E14                     	;# 
   615  1E15                     	;# 
   616  1E16                     	;# 
   617  1E17                     	;# 
   618  1E18                     	;# 
   619  1E19                     	;# 
   620  1E1A                     	;# 
   621  1E1B                     	;# 
   622  1E1C                     	;# 
   623  1E1D                     	;# 
   624  1E1E                     	;# 
   625  1E1F                     	;# 
   626  1E20                     	;# 
   627  1E21                     	;# 
   628  1E22                     	;# 
   629  1E23                     	;# 
   630  1E24                     	;# 
   631  1E25                     	;# 
   632  1E26                     	;# 
   633  1E27                     	;# 
   634  1E28                     	;# 
   635  1E29                     	;# 
   636  1E2A                     	;# 
   637  1E2B                     	;# 
   638  1E2C                     	;# 
   639  1E2D                     	;# 
   640  1E2E                     	;# 
   641  1E2F                     	;# 
   642  1E30                     	;# 
   643  1E31                     	;# 
   644  1E32                     	;# 
   645  1E33                     	;# 
   646  1E34                     	;# 
   647  1E35                     	;# 
   648  1E36                     	;# 
   649  1E37                     	;# 
   650  1E8F                     	;# 
   651  1E90                     	;# 
   652  1E91                     	;# 
   653  1E92                     	;# 
   654  1E93                     	;# 
   655  1E9C                     	;# 
   656  1EA1                     	;# 
   657  1EA2                     	;# 
   658  1EB1                     	;# 
   659  1EBB                     	;# 
   660  1EBC                     	;# 
   661  1EBD                     	;# 
   662  1EBE                     	;# 
   663  1EC3                     	;# 
   664  1EC5                     	;# 
   665  1EC6                     	;# 
   666  1EC7                     	;# 
   667  1ECB                     	;# 
   668  1ECC                     	;# 
   669  1ECD                     	;# 
   670  1ECE                     	;# 
   671  1F10                     	;# 
   672  1F11                     	;# 
   673  1F12                     	;# 
   674  1F13                     	;# 
   675  1F14                     	;# 
   676  1F15                     	;# 
   677  1F1C                     	;# 
   678  1F1D                     	;# 
   679  1F1E                     	;# 
   680  1F1F                     	;# 
   681  1F20                     	;# 
   682  1F21                     	;# 
   683  1F22                     	;# 
   684  1F23                     	;# 
   685  1F24                     	;# 
   686  1F25                     	;# 
   687  1F26                     	;# 
   688  1F27                     	;# 
   689  1F38                     	;# 
   690  1F39                     	;# 
   691  1F3A                     	;# 
   692  1F3B                     	;# 
   693  1F3C                     	;# 
   694  1F3D                     	;# 
   695  1F3E                     	;# 
   696  1F3F                     	;# 
   697  1F43                     	;# 
   698  1F44                     	;# 
   699  1F45                     	;# 
   700  1F46                     	;# 
   701  1F47                     	;# 
   702  1F48                     	;# 
   703  1F49                     	;# 
   704  1F4A                     	;# 
   705  1F4E                     	;# 
   706  1F4F                     	;# 
   707  1F50                     	;# 
   708  1F51                     	;# 
   709  1F52                     	;# 
   710  1F53                     	;# 
   711  1F54                     	;# 
   712  1F55                     	;# 
   713  1FE4                     	;# 
   714  1FE5                     	;# 
   715  1FE6                     	;# 
   716  1FE7                     	;# 
   717  1FE8                     	;# 
   718  1FE8                     	;# 
   719  1FE9                     	;# 
   720  1FEA                     	;# 
   721  1FEA                     	;# 
   722  1FEB                     	;# 
   723  1FED                     	;# 
   724  1FEE                     	;# 
   725  1FEF                     	;# 
   726  0000                     	;# 
   727  0001                     	;# 
   728  0002                     	;# 
   729  0003                     	;# 
   730  0004                     	;# 
   731  0005                     	;# 
   732  0006                     	;# 
   733  0007                     	;# 
   734  0008                     	;# 
   735  0009                     	;# 
   736  000A                     	;# 
   737  000B                     	;# 
   738  000C                     	;# 
   739  000D                     	;# 
   740  000E                     	;# 
   741  0012                     	;# 
   742  0013                     	;# 
   743  0014                     	;# 
   744  0018                     	;# 
   745  0019                     	;# 
   746  001A                     	;# 
   747  009B                     	;# 
   748  009B                     	;# 
   749  009C                     	;# 
   750  009D                     	;# 
   751  009E                     	;# 
   752  009F                     	;# 
   753  0119                     	;# 
   754  0119                     	;# 
   755  0119                     	;# 
   756  011A                     	;# 
   757  011A                     	;# 
   758  011A                     	;# 
   759  011B                     	;# 
   760  011B                     	;# 
   761  011B                     	;# 
   762  011B                     	;# 
   763  011B                     	;# 
   764  011C                     	;# 
   765  011C                     	;# 
   766  011C                     	;# 
   767  011D                     	;# 
   768  011D                     	;# 
   769  011D                     	;# 
   770  011E                     	;# 
   771  011E                     	;# 
   772  011E                     	;# 
   773  011F                     	;# 
   774  011F                     	;# 
   775  011F                     	;# 
   776  011F                     	;# 
   777  011F                     	;# 
   778  018C                     	;# 
   779  018D                     	;# 
   780  018E                     	;# 
   781  018F                     	;# 
   782  0190                     	;# 
   783  0191                     	;# 
   784  0192                     	;# 
   785  020C                     	;# 
   786  020C                     	;# 
   787  020D                     	;# 
   788  020E                     	;# 
   789  020F                     	;# 
   790  020F                     	;# 
   791  0210                     	;# 
   792  0210                     	;# 
   793  0211                     	;# 
   794  0211                     	;# 
   795  028C                     	;# 
   796  028C                     	;# 
   797  028D                     	;# 
   798  028D                     	;# 
   799  028E                     	;# 
   800  028F                     	;# 
   801  0290                     	;# 
   802  0291                     	;# 
   803  030C                     	;# 
   804  030C                     	;# 
   805  030D                     	;# 
   806  030E                     	;# 
   807  030F                     	;# 
   808  0310                     	;# 
   809  0310                     	;# 
   810  0311                     	;# 
   811  0312                     	;# 
   812  0313                     	;# 
   813  0314                     	;# 
   814  0314                     	;# 
   815  0315                     	;# 
   816  0316                     	;# 
   817  0318                     	;# 
   818  0318                     	;# 
   819  0319                     	;# 
   820  031A                     	;# 
   821  031C                     	;# 
   822  031C                     	;# 
   823  031D                     	;# 
   824  031E                     	;# 
   825  038C                     	;# 
   826  038C                     	;# 
   827  038D                     	;# 
   828  038E                     	;# 
   829  058C                     	;# 
   830  058C                     	;# 
   831  058D                     	;# 
   832  058E                     	;# 
   833  058F                     	;# 
   834  058F                     	;# 
   835  0590                     	;# 
   836  0591                     	;# 
   837  0592                     	;# 
   838  0593                     	;# 
   839  059C                     	;# 
   840  059C                     	;# 
   841  059D                     	;# 
   842  059D                     	;# 
   843  059E                     	;# 
   844  059F                     	;# 
   845  060C                     	;# 
   846  060D                     	;# 
   847  060E                     	;# 
   848  060F                     	;# 
   849  0610                     	;# 
   850  0611                     	;# 
   851  0612                     	;# 
   852  0613                     	;# 
   853  0614                     	;# 
   854  070C                     	;# 
   855  070D                     	;# 
   856  070E                     	;# 
   857  070F                     	;# 
   858  0710                     	;# 
   859  0711                     	;# 
   860  0712                     	;# 
   861  0713                     	;# 
   862  0716                     	;# 
   863  0717                     	;# 
   864  0718                     	;# 
   865  0719                     	;# 
   866  071A                     	;# 
   867  071B                     	;# 
   868  071C                     	;# 
   869  071D                     	;# 
   870  0796                     	;# 
   871  0797                     	;# 
   872  0798                     	;# 
   873  0799                     	;# 
   874  079A                     	;# 
   875  079B                     	;# 
   876  080C                     	;# 
   877  080D                     	;# 
   878  080E                     	;# 
   879  080F                     	;# 
   880  0810                     	;# 
   881  0811                     	;# 
   882  0812                     	;# 
   883  0813                     	;# 
   884  0814                     	;# 
   885  081A                     	;# 
   886  081A                     	;# 
   887  081B                     	;# 
   888  081C                     	;# 
   889  081C                     	;# 
   890  081D                     	;# 
   891  081E                     	;# 
   892  081F                     	;# 
   893  088C                     	;# 
   894  088D                     	;# 
   895  088E                     	;# 
   896  088F                     	;# 
   897  0890                     	;# 
   898  0891                     	;# 
   899  0892                     	;# 
   900  0893                     	;# 
   901  0895                     	;# 
   902  0896                     	;# 
   903  090C                     	;# 
   904  090E                     	;# 
   905  090F                     	;# 
   906  091F                     	;# 
   907  098F                     	;# 
   908  098F                     	;# 
   909  0990                     	;# 
   910  0991                     	;# 
   911  0992                     	;# 
   912  0993                     	;# 
   913  0994                     	;# 
   914  0995                     	;# 
   915  0996                     	;# 
   916  0997                     	;# 
   917  0A19                     	;# 
   918  0A19                     	;# 
   919  0A1A                     	;# 
   920  0A1A                     	;# 
   921  0A1B                     	;# 
   922  0A1B                     	;# 
   923  0A1B                     	;# 
   924  0A1C                     	;# 
   925  0A1C                     	;# 
   926  0A1D                     	;# 
   927  0A1D                     	;# 
   928  0A1E                     	;# 
   929  0A1E                     	;# 
   930  0A1F                     	;# 
   931  0A1F                     	;# 
   932  0A1F                     	;# 
   933  1E0F                     	;# 
   934  1E10                     	;# 
   935  1E11                     	;# 
   936  1E12                     	;# 
   937  1E13                     	;# 
   938  1E14                     	;# 
   939  1E15                     	;# 
   940  1E16                     	;# 
   941  1E17                     	;# 
   942  1E18                     	;# 
   943  1E19                     	;# 
   944  1E1A                     	;# 
   945  1E1B                     	;# 
   946  1E1C                     	;# 
   947  1E1D                     	;# 
   948  1E1E                     	;# 
   949  1E1F                     	;# 
   950  1E20                     	;# 
   951  1E21                     	;# 
   952  1E22                     	;# 
   953  1E23                     	;# 
   954  1E24                     	;# 
   955  1E25                     	;# 
   956  1E26                     	;# 
   957  1E27                     	;# 
   958  1E28                     	;# 
   959  1E29                     	;# 
   960  1E2A                     	;# 
   961  1E2B                     	;# 
   962  1E2C                     	;# 
   963  1E2D                     	;# 
   964  1E2E                     	;# 
   965  1E2F                     	;# 
   966  1E30                     	;# 
   967  1E31                     	;# 
   968  1E32                     	;# 
   969  1E33                     	;# 
   970  1E34                     	;# 
   971  1E35                     	;# 
   972  1E36                     	;# 
   973  1E37                     	;# 
   974  1E8F                     	;# 
   975  1E90                     	;# 
   976  1E91                     	;# 
   977  1E92                     	;# 
   978  1E93                     	;# 
   979  1E9C                     	;# 
   980  1EA1                     	;# 
   981  1EA2                     	;# 
   982  1EB1                     	;# 
   983  1EBB                     	;# 
   984  1EBC                     	;# 
   985  1EBD                     	;# 
   986  1EBE                     	;# 
   987  1EC3                     	;# 
   988  1EC5                     	;# 
   989  1EC6                     	;# 
   990  1EC7                     	;# 
   991  1ECB                     	;# 
   992  1ECC                     	;# 
   993  1ECD                     	;# 
   994  1ECE                     	;# 
   995  1F10                     	;# 
   996  1F11                     	;# 
   997  1F12                     	;# 
   998  1F13                     	;# 
   999  1F14                     	;# 
  1000  1F15                     	;# 
  1001  1F1C                     	;# 
  1002  1F1D                     	;# 
  1003  1F1E                     	;# 
  1004  1F1F                     	;# 
  1005  1F20                     	;# 
  1006  1F21                     	;# 
  1007  1F22                     	;# 
  1008  1F23                     	;# 
  1009  1F24                     	;# 
  1010  1F25                     	;# 
  1011  1F26                     	;# 
  1012  1F27                     	;# 
  1013  1F38                     	;# 
  1014  1F39                     	;# 
  1015  1F3A                     	;# 
  1016  1F3B                     	;# 
  1017  1F3C                     	;# 
  1018  1F3D                     	;# 
  1019  1F3E                     	;# 
  1020  1F3F                     	;# 
  1021  1F43                     	;# 
  1022  1F44                     	;# 
  1023  1F45                     	;# 
  1024  1F46                     	;# 
  1025  1F47                     	;# 
  1026  1F48                     	;# 
  1027  1F49                     	;# 
  1028  1F4A                     	;# 
  1029  1F4E                     	;# 
  1030  1F4F                     	;# 
  1031  1F50                     	;# 
  1032  1F51                     	;# 
  1033  1F52                     	;# 
  1034  1F53                     	;# 
  1035  1F54                     	;# 
  1036  1F55                     	;# 
  1037  1FE4                     	;# 
  1038  1FE5                     	;# 
  1039  1FE6                     	;# 
  1040  1FE7                     	;# 
  1041  1FE8                     	;# 
  1042  1FE8                     	;# 
  1043  1FE9                     	;# 
  1044  1FEA                     	;# 
  1045  1FEA                     	;# 
  1046  1FEB                     	;# 
  1047  1FED                     	;# 
  1048  1FEE                     	;# 
  1049  1FEF                     	;# 
  1050  0000                     	;# 
  1051  0001                     	;# 
  1052  0002                     	;# 
  1053  0003                     	;# 
  1054  0004                     	;# 
  1055  0005                     	;# 
  1056  0006                     	;# 
  1057  0007                     	;# 
  1058  0008                     	;# 
  1059  0009                     	;# 
  1060  000A                     	;# 
  1061  000B                     	;# 
  1062  000C                     	;# 
  1063  000D                     	;# 
  1064  000E                     	;# 
  1065  0012                     	;# 
  1066  0013                     	;# 
  1067  0014                     	;# 
  1068  0018                     	;# 
  1069  0019                     	;# 
  1070  001A                     	;# 
  1071  009B                     	;# 
  1072  009B                     	;# 
  1073  009C                     	;# 
  1074  009D                     	;# 
  1075  009E                     	;# 
  1076  009F                     	;# 
  1077  0119                     	;# 
  1078  0119                     	;# 
  1079  0119                     	;# 
  1080  011A                     	;# 
  1081  011A                     	;# 
  1082  011A                     	;# 
  1083  011B                     	;# 
  1084  011B                     	;# 
  1085  011B                     	;# 
  1086  011B                     	;# 
  1087  011B                     	;# 
  1088  011C                     	;# 
  1089  011C                     	;# 
  1090  011C                     	;# 
  1091  011D                     	;# 
  1092  011D                     	;# 
  1093  011D                     	;# 
  1094  011E                     	;# 
  1095  011E                     	;# 
  1096  011E                     	;# 
  1097  011F                     	;# 
  1098  011F                     	;# 
  1099  011F                     	;# 
  1100  011F                     	;# 
  1101  011F                     	;# 
  1102  018C                     	;# 
  1103  018D                     	;# 
  1104  018E                     	;# 
  1105  018F                     	;# 
  1106  0190                     	;# 
  1107  0191                     	;# 
  1108  0192                     	;# 
  1109  020C                     	;# 
  1110  020C                     	;# 
  1111  020D                     	;# 
  1112  020E                     	;# 
  1113  020F                     	;# 
  1114  020F                     	;# 
  1115  0210                     	;# 
  1116  0210                     	;# 
  1117  0211                     	;# 
  1118  0211                     	;# 
  1119  028C                     	;# 
  1120  028C                     	;# 
  1121  028D                     	;# 
  1122  028D                     	;# 
  1123  028E                     	;# 
  1124  028F                     	;# 
  1125  0290                     	;# 
  1126  0291                     	;# 
  1127  030C                     	;# 
  1128  030C                     	;# 
  1129  030D                     	;# 
  1130  030E                     	;# 
  1131  030F                     	;# 
  1132  0310                     	;# 
  1133  0310                     	;# 
  1134  0311                     	;# 
  1135  0312                     	;# 
  1136  0313                     	;# 
  1137  0314                     	;# 
  1138  0314                     	;# 
  1139  0315                     	;# 
  1140  0316                     	;# 
  1141  0318                     	;# 
  1142  0318                     	;# 
  1143  0319                     	;# 
  1144  031A                     	;# 
  1145  031C                     	;# 
  1146  031C                     	;# 
  1147  031D                     	;# 
  1148  031E                     	;# 
  1149  038C                     	;# 
  1150  038C                     	;# 
  1151  038D                     	;# 
  1152  038E                     	;# 
  1153  058C                     	;# 
  1154  058C                     	;# 
  1155  058D                     	;# 
  1156  058E                     	;# 
  1157  058F                     	;# 
  1158  058F                     	;# 
  1159  0590                     	;# 
  1160  0591                     	;# 
  1161  0592                     	;# 
  1162  0593                     	;# 
  1163  059C                     	;# 
  1164  059C                     	;# 
  1165  059D                     	;# 
  1166  059D                     	;# 
  1167  059E                     	;# 
  1168  059F                     	;# 
  1169  060C                     	;# 
  1170  060D                     	;# 
  1171  060E                     	;# 
  1172  060F                     	;# 
  1173  0610                     	;# 
  1174  0611                     	;# 
  1175  0612                     	;# 
  1176  0613                     	;# 
  1177  0614                     	;# 
  1178  070C                     	;# 
  1179  070D                     	;# 
  1180  070E                     	;# 
  1181  070F                     	;# 
  1182  0710                     	;# 
  1183  0711                     	;# 
  1184  0712                     	;# 
  1185  0713                     	;# 
  1186  0716                     	;# 
  1187  0717                     	;# 
  1188  0718                     	;# 
  1189  0719                     	;# 
  1190  071A                     	;# 
  1191  071B                     	;# 
  1192  071C                     	;# 
  1193  071D                     	;# 
  1194  0796                     	;# 
  1195  0797                     	;# 
  1196  0798                     	;# 
  1197  0799                     	;# 
  1198  079A                     	;# 
  1199  079B                     	;# 
  1200  080C                     	;# 
  1201  080D                     	;# 
  1202  080E                     	;# 
  1203  080F                     	;# 
  1204  0810                     	;# 
  1205  0811                     	;# 
  1206  0812                     	;# 
  1207  0813                     	;# 
  1208  0814                     	;# 
  1209  081A                     	;# 
  1210  081A                     	;# 
  1211  081B                     	;# 
  1212  081C                     	;# 
  1213  081C                     	;# 
  1214  081D                     	;# 
  1215  081E                     	;# 
  1216  081F                     	;# 
  1217  088C                     	;# 
  1218  088D                     	;# 
  1219  088E                     	;# 
  1220  088F                     	;# 
  1221  0890                     	;# 
  1222  0891                     	;# 
  1223  0892                     	;# 
  1224  0893                     	;# 
  1225  0895                     	;# 
  1226  0896                     	;# 
  1227  090C                     	;# 
  1228  090E                     	;# 
  1229  090F                     	;# 
  1230  091F                     	;# 
  1231  098F                     	;# 
  1232  098F                     	;# 
  1233  0990                     	;# 
  1234  0991                     	;# 
  1235  0992                     	;# 
  1236  0993                     	;# 
  1237  0994                     	;# 
  1238  0995                     	;# 
  1239  0996                     	;# 
  1240  0997                     	;# 
  1241  0A19                     	;# 
  1242  0A19                     	;# 
  1243  0A1A                     	;# 
  1244  0A1A                     	;# 
  1245  0A1B                     	;# 
  1246  0A1B                     	;# 
  1247  0A1B                     	;# 
  1248  0A1C                     	;# 
  1249  0A1C                     	;# 
  1250  0A1D                     	;# 
  1251  0A1D                     	;# 
  1252  0A1E                     	;# 
  1253  0A1E                     	;# 
  1254  0A1F                     	;# 
  1255  0A1F                     	;# 
  1256  0A1F                     	;# 
  1257  1E0F                     	;# 
  1258  1E10                     	;# 
  1259  1E11                     	;# 
  1260  1E12                     	;# 
  1261  1E13                     	;# 
  1262  1E14                     	;# 
  1263  1E15                     	;# 
  1264  1E16                     	;# 
  1265  1E17                     	;# 
  1266  1E18                     	;# 
  1267  1E19                     	;# 
  1268  1E1A                     	;# 
  1269  1E1B                     	;# 
  1270  1E1C                     	;# 
  1271  1E1D                     	;# 
  1272  1E1E                     	;# 
  1273  1E1F                     	;# 
  1274  1E20                     	;# 
  1275  1E21                     	;# 
  1276  1E22                     	;# 
  1277  1E23                     	;# 
  1278  1E24                     	;# 
  1279  1E25                     	;# 
  1280  1E26                     	;# 
  1281  1E27                     	;# 
  1282  1E28                     	;# 
  1283  1E29                     	;# 
  1284  1E2A                     	;# 
  1285  1E2B                     	;# 
  1286  1E2C                     	;# 
  1287  1E2D                     	;# 
  1288  1E2E                     	;# 
  1289  1E2F                     	;# 
  1290  1E30                     	;# 
  1291  1E31                     	;# 
  1292  1E32                     	;# 
  1293  1E33                     	;# 
  1294  1E34                     	;# 
  1295  1E35                     	;# 
  1296  1E36                     	;# 
  1297  1E37                     	;# 
  1298  1E8F                     	;# 
  1299  1E90                     	;# 
  1300  1E91                     	;# 
  1301  1E92                     	;# 
  1302  1E93                     	;# 
  1303  1E9C                     	;# 
  1304  1EA1                     	;# 
  1305  1EA2                     	;# 
  1306  1EB1                     	;# 
  1307  1EBB                     	;# 
  1308  1EBC                     	;# 
  1309  1EBD                     	;# 
  1310  1EBE                     	;# 
  1311  1EC3                     	;# 
  1312  1EC5                     	;# 
  1313  1EC6                     	;# 
  1314  1EC7                     	;# 
  1315  1ECB                     	;# 
  1316  1ECC                     	;# 
  1317  1ECD                     	;# 
  1318  1ECE                     	;# 
  1319  1F10                     	;# 
  1320  1F11                     	;# 
  1321  1F12                     	;# 
  1322  1F13                     	;# 
  1323  1F14                     	;# 
  1324  1F15                     	;# 
  1325  1F1C                     	;# 
  1326  1F1D                     	;# 
  1327  1F1E                     	;# 
  1328  1F1F                     	;# 
  1329  1F20                     	;# 
  1330  1F21                     	;# 
  1331  1F22                     	;# 
  1332  1F23                     	;# 
  1333  1F24                     	;# 
  1334  1F25                     	;# 
  1335  1F26                     	;# 
  1336  1F27                     	;# 
  1337  1F38                     	;# 
  1338  1F39                     	;# 
  1339  1F3A                     	;# 
  1340  1F3B                     	;# 
  1341  1F3C                     	;# 
  1342  1F3D                     	;# 
  1343  1F3E                     	;# 
  1344  1F3F                     	;# 
  1345  1F43                     	;# 
  1346  1F44                     	;# 
  1347  1F45                     	;# 
  1348  1F46                     	;# 
  1349  1F47                     	;# 
  1350  1F48                     	;# 
  1351  1F49                     	;# 
  1352  1F4A                     	;# 
  1353  1F4E                     	;# 
  1354  1F4F                     	;# 
  1355  1F50                     	;# 
  1356  1F51                     	;# 
  1357  1F52                     	;# 
  1358  1F53                     	;# 
  1359  1F54                     	;# 
  1360  1F55                     	;# 
  1361  1FE4                     	;# 
  1362  1FE5                     	;# 
  1363  1FE6                     	;# 
  1364  1FE7                     	;# 
  1365  1FE8                     	;# 
  1366  1FE8                     	;# 
  1367  1FE9                     	;# 
  1368  1FEA                     	;# 
  1369  1FEA                     	;# 
  1370  1FEB                     	;# 
  1371  1FED                     	;# 
  1372  1FEE                     	;# 
  1373  1FEF                     	;# 
  1374  0000                     	;# 
  1375  0001                     	;# 
  1376  0002                     	;# 
  1377  0003                     	;# 
  1378  0004                     	;# 
  1379  0005                     	;# 
  1380  0006                     	;# 
  1381  0007                     	;# 
  1382  0008                     	;# 
  1383  0009                     	;# 
  1384  000A                     	;# 
  1385  000B                     	;# 
  1386  000C                     	;# 
  1387  000D                     	;# 
  1388  000E                     	;# 
  1389  0012                     	;# 
  1390  0013                     	;# 
  1391  0014                     	;# 
  1392  0018                     	;# 
  1393  0019                     	;# 
  1394  001A                     	;# 
  1395  009B                     	;# 
  1396  009B                     	;# 
  1397  009C                     	;# 
  1398  009D                     	;# 
  1399  009E                     	;# 
  1400  009F                     	;# 
  1401  0119                     	;# 
  1402  0119                     	;# 
  1403  0119                     	;# 
  1404  011A                     	;# 
  1405  011A                     	;# 
  1406  011A                     	;# 
  1407  011B                     	;# 
  1408  011B                     	;# 
  1409  011B                     	;# 
  1410  011B                     	;# 
  1411  011B                     	;# 
  1412  011C                     	;# 
  1413  011C                     	;# 
  1414  011C                     	;# 
  1415  011D                     	;# 
  1416  011D                     	;# 
  1417  011D                     	;# 
  1418  011E                     	;# 
  1419  011E                     	;# 
  1420  011E                     	;# 
  1421  011F                     	;# 
  1422  011F                     	;# 
  1423  011F                     	;# 
  1424  011F                     	;# 
  1425  011F                     	;# 
  1426  018C                     	;# 
  1427  018D                     	;# 
  1428  018E                     	;# 
  1429  018F                     	;# 
  1430  0190                     	;# 
  1431  0191                     	;# 
  1432  0192                     	;# 
  1433  020C                     	;# 
  1434  020C                     	;# 
  1435  020D                     	;# 
  1436  020E                     	;# 
  1437  020F                     	;# 
  1438  020F                     	;# 
  1439  0210                     	;# 
  1440  0210                     	;# 
  1441  0211                     	;# 
  1442  0211                     	;# 
  1443  028C                     	;# 
  1444  028C                     	;# 
  1445  028D                     	;# 
  1446  028D                     	;# 
  1447  028E                     	;# 
  1448  028F                     	;# 
  1449  0290                     	;# 
  1450  0291                     	;# 
  1451  030C                     	;# 
  1452  030C                     	;# 
  1453  030D                     	;# 
  1454  030E                     	;# 
  1455  030F                     	;# 
  1456  0310                     	;# 
  1457  0310                     	;# 
  1458  0311                     	;# 
  1459  0312                     	;# 
  1460  0313                     	;# 
  1461  0314                     	;# 
  1462  0314                     	;# 
  1463  0315                     	;# 
  1464  0316                     	;# 
  1465  0318                     	;# 
  1466  0318                     	;# 
  1467  0319                     	;# 
  1468  031A                     	;# 
  1469  031C                     	;# 
  1470  031C                     	;# 
  1471  031D                     	;# 
  1472  031E                     	;# 
  1473  038C                     	;# 
  1474  038C                     	;# 
  1475  038D                     	;# 
  1476  038E                     	;# 
  1477  058C                     	;# 
  1478  058C                     	;# 
  1479  058D                     	;# 
  1480  058E                     	;# 
  1481  058F                     	;# 
  1482  058F                     	;# 
  1483  0590                     	;# 
  1484  0591                     	;# 
  1485  0592                     	;# 
  1486  0593                     	;# 
  1487  059C                     	;# 
  1488  059C                     	;# 
  1489  059D                     	;# 
  1490  059D                     	;# 
  1491  059E                     	;# 
  1492  059F                     	;# 
  1493  060C                     	;# 
  1494  060D                     	;# 
  1495  060E                     	;# 
  1496  060F                     	;# 
  1497  0610                     	;# 
  1498  0611                     	;# 
  1499  0612                     	;# 
  1500  0613                     	;# 
  1501  0614                     	;# 
  1502  070C                     	;# 
  1503  070D                     	;# 
  1504  070E                     	;# 
  1505  070F                     	;# 
  1506  0710                     	;# 
  1507  0711                     	;# 
  1508  0712                     	;# 
  1509  0713                     	;# 
  1510  0716                     	;# 
  1511  0717                     	;# 
  1512  0718                     	;# 
  1513  0719                     	;# 
  1514  071A                     	;# 
  1515  071B                     	;# 
  1516  071C                     	;# 
  1517  071D                     	;# 
  1518  0796                     	;# 
  1519  0797                     	;# 
  1520  0798                     	;# 
  1521  0799                     	;# 
  1522  079A                     	;# 
  1523  079B                     	;# 
  1524  080C                     	;# 
  1525  080D                     	;# 
  1526  080E                     	;# 
  1527  080F                     	;# 
  1528  0810                     	;# 
  1529  0811                     	;# 
  1530  0812                     	;# 
  1531  0813                     	;# 
  1532  0814                     	;# 
  1533  081A                     	;# 
  1534  081A                     	;# 
  1535  081B                     	;# 
  1536  081C                     	;# 
  1537  081C                     	;# 
  1538  081D                     	;# 
  1539  081E                     	;# 
  1540  081F                     	;# 
  1541  088C                     	;# 
  1542  088D                     	;# 
  1543  088E                     	;# 
  1544  088F                     	;# 
  1545  0890                     	;# 
  1546  0891                     	;# 
  1547  0892                     	;# 
  1548  0893                     	;# 
  1549  0895                     	;# 
  1550  0896                     	;# 
  1551  090C                     	;# 
  1552  090E                     	;# 
  1553  090F                     	;# 
  1554  091F                     	;# 
  1555  098F                     	;# 
  1556  098F                     	;# 
  1557  0990                     	;# 
  1558  0991                     	;# 
  1559  0992                     	;# 
  1560  0993                     	;# 
  1561  0994                     	;# 
  1562  0995                     	;# 
  1563  0996                     	;# 
  1564  0997                     	;# 
  1565  0A19                     	;# 
  1566  0A19                     	;# 
  1567  0A1A                     	;# 
  1568  0A1A                     	;# 
  1569  0A1B                     	;# 
  1570  0A1B                     	;# 
  1571  0A1B                     	;# 
  1572  0A1C                     	;# 
  1573  0A1C                     	;# 
  1574  0A1D                     	;# 
  1575  0A1D                     	;# 
  1576  0A1E                     	;# 
  1577  0A1E                     	;# 
  1578  0A1F                     	;# 
  1579  0A1F                     	;# 
  1580  0A1F                     	;# 
  1581  1E0F                     	;# 
  1582  1E10                     	;# 
  1583  1E11                     	;# 
  1584  1E12                     	;# 
  1585  1E13                     	;# 
  1586  1E14                     	;# 
  1587  1E15                     	;# 
  1588  1E16                     	;# 
  1589  1E17                     	;# 
  1590  1E18                     	;# 
  1591  1E19                     	;# 
  1592  1E1A                     	;# 
  1593  1E1B                     	;# 
  1594  1E1C                     	;# 
  1595  1E1D                     	;# 
  1596  1E1E                     	;# 
  1597  1E1F                     	;# 
  1598  1E20                     	;# 
  1599  1E21                     	;# 
  1600  1E22                     	;# 
  1601  1E23                     	;# 
  1602  1E24                     	;# 
  1603  1E25                     	;# 
  1604  1E26                     	;# 
  1605  1E27                     	;# 
  1606  1E28                     	;# 
  1607  1E29                     	;# 
  1608  1E2A                     	;# 
  1609  1E2B                     	;# 
  1610  1E2C                     	;# 
  1611  1E2D                     	;# 
  1612  1E2E                     	;# 
  1613  1E2F                     	;# 
  1614  1E30                     	;# 
  1615  1E31                     	;# 
  1616  1E32                     	;# 
  1617  1E33                     	;# 
  1618  1E34                     	;# 
  1619  1E35                     	;# 
  1620  1E36                     	;# 
  1621  1E37                     	;# 
  1622  1E8F                     	;# 
  1623  1E90                     	;# 
  1624  1E91                     	;# 
  1625  1E92                     	;# 
  1626  1E93                     	;# 
  1627  1E9C                     	;# 
  1628  1EA1                     	;# 
  1629  1EA2                     	;# 
  1630  1EB1                     	;# 
  1631  1EBB                     	;# 
  1632  1EBC                     	;# 
  1633  1EBD                     	;# 
  1634  1EBE                     	;# 
  1635  1EC3                     	;# 
  1636  1EC5                     	;# 
  1637  1EC6                     	;# 
  1638  1EC7                     	;# 
  1639  1ECB                     	;# 
  1640  1ECC                     	;# 
  1641  1ECD                     	;# 
  1642  1ECE                     	;# 
  1643  1F10                     	;# 
  1644  1F11                     	;# 
  1645  1F12                     	;# 
  1646  1F13                     	;# 
  1647  1F14                     	;# 
  1648  1F15                     	;# 
  1649  1F1C                     	;# 
  1650  1F1D                     	;# 
  1651  1F1E                     	;# 
  1652  1F1F                     	;# 
  1653  1F20                     	;# 
  1654  1F21                     	;# 
  1655  1F22                     	;# 
  1656  1F23                     	;# 
  1657  1F24                     	;# 
  1658  1F25                     	;# 
  1659  1F26                     	;# 
  1660  1F27                     	;# 
  1661  1F38                     	;# 
  1662  1F39                     	;# 
  1663  1F3A                     	;# 
  1664  1F3B                     	;# 
  1665  1F3C                     	;# 
  1666  1F3D                     	;# 
  1667  1F3E                     	;# 
  1668  1F3F                     	;# 
  1669  1F43                     	;# 
  1670  1F44                     	;# 
  1671  1F45                     	;# 
  1672  1F46                     	;# 
  1673  1F47                     	;# 
  1674  1F48                     	;# 
  1675  1F49                     	;# 
  1676  1F4A                     	;# 
  1677  1F4E                     	;# 
  1678  1F4F                     	;# 
  1679  1F50                     	;# 
  1680  1F51                     	;# 
  1681  1F52                     	;# 
  1682  1F53                     	;# 
  1683  1F54                     	;# 
  1684  1F55                     	;# 
  1685  1FE4                     	;# 
  1686  1FE5                     	;# 
  1687  1FE6                     	;# 
  1688  1FE7                     	;# 
  1689  1FE8                     	;# 
  1690  1FE8                     	;# 
  1691  1FE9                     	;# 
  1692  1FEA                     	;# 
  1693  1FEA                     	;# 
  1694  1FEB                     	;# 
  1695  1FED                     	;# 
  1696  1FEE                     	;# 
  1697  1FEF                     	;# 
  1698  0000                     	;# 
  1699  0001                     	;# 
  1700  0002                     	;# 
  1701  0003                     	;# 
  1702  0004                     	;# 
  1703  0005                     	;# 
  1704  0006                     	;# 
  1705  0007                     	;# 
  1706  0008                     	;# 
  1707  0009                     	;# 
  1708  000A                     	;# 
  1709  000B                     	;# 
  1710  000C                     	;# 
  1711  000D                     	;# 
  1712  000E                     	;# 
  1713  0012                     	;# 
  1714  0013                     	;# 
  1715  0014                     	;# 
  1716  0018                     	;# 
  1717  0019                     	;# 
  1718  001A                     	;# 
  1719  009B                     	;# 
  1720  009B                     	;# 
  1721  009C                     	;# 
  1722  009D                     	;# 
  1723  009E                     	;# 
  1724  009F                     	;# 
  1725  0119                     	;# 
  1726  0119                     	;# 
  1727  0119                     	;# 
  1728  011A                     	;# 
  1729  011A                     	;# 
  1730  011A                     	;# 
  1731  011B                     	;# 
  1732  011B                     	;# 
  1733  011B                     	;# 
  1734  011B                     	;# 
  1735  011B                     	;# 
  1736  011C                     	;# 
  1737  011C                     	;# 
  1738  011C                     	;# 
  1739  011D                     	;# 
  1740  011D                     	;# 
  1741  011D                     	;# 
  1742  011E                     	;# 
  1743  011E                     	;# 
  1744  011E                     	;# 
  1745  011F                     	;# 
  1746  011F                     	;# 
  1747  011F                     	;# 
  1748  011F                     	;# 
  1749  011F                     	;# 
  1750  018C                     	;# 
  1751  018D                     	;# 
  1752  018E                     	;# 
  1753  018F                     	;# 
  1754  0190                     	;# 
  1755  0191                     	;# 
  1756  0192                     	;# 
  1757  020C                     	;# 
  1758  020C                     	;# 
  1759  020D                     	;# 
  1760  020E                     	;# 
  1761  020F                     	;# 
  1762  020F                     	;# 
  1763  0210                     	;# 
  1764  0210                     	;# 
  1765  0211                     	;# 
  1766  0211                     	;# 
  1767  028C                     	;# 
  1768  028C                     	;# 
  1769  028D                     	;# 
  1770  028D                     	;# 
  1771  028E                     	;# 
  1772  028F                     	;# 
  1773  0290                     	;# 
  1774  0291                     	;# 
  1775  030C                     	;# 
  1776  030C                     	;# 
  1777  030D                     	;# 
  1778  030E                     	;# 
  1779  030F                     	;# 
  1780  0310                     	;# 
  1781  0310                     	;# 
  1782  0311                     	;# 
  1783  0312                     	;# 
  1784  0313                     	;# 
  1785  0314                     	;# 
  1786  0314                     	;# 
  1787  0315                     	;# 
  1788  0316                     	;# 
  1789  0318                     	;# 
  1790  0318                     	;# 
  1791  0319                     	;# 
  1792  031A                     	;# 
  1793  031C                     	;# 
  1794  031C                     	;# 
  1795  031D                     	;# 
  1796  031E                     	;# 
  1797  038C                     	;# 
  1798  038C                     	;# 
  1799  038D                     	;# 
  1800  038E                     	;# 
  1801  058C                     	;# 
  1802  058C                     	;# 
  1803  058D                     	;# 
  1804  058E                     	;# 
  1805  058F                     	;# 
  1806  058F                     	;# 
  1807  0590                     	;# 
  1808  0591                     	;# 
  1809  0592                     	;# 
  1810  0593                     	;# 
  1811  059C                     	;# 
  1812  059C                     	;# 
  1813  059D                     	;# 
  1814  059D                     	;# 
  1815  059E                     	;# 
  1816  059F                     	;# 
  1817  060C                     	;# 
  1818  060D                     	;# 
  1819  060E                     	;# 
  1820  060F                     	;# 
  1821  0610                     	;# 
  1822  0611                     	;# 
  1823  0612                     	;# 
  1824  0613                     	;# 
  1825  0614                     	;# 
  1826  070C                     	;# 
  1827  070D                     	;# 
  1828  070E                     	;# 
  1829  070F                     	;# 
  1830  0710                     	;# 
  1831  0711                     	;# 
  1832  0712                     	;# 
  1833  0713                     	;# 
  1834  0716                     	;# 
  1835  0717                     	;# 
  1836  0718                     	;# 
  1837  0719                     	;# 
  1838  071A                     	;# 
  1839  071B                     	;# 
  1840  071C                     	;# 
  1841  071D                     	;# 
  1842  0796                     	;# 
  1843  0797                     	;# 
  1844  0798                     	;# 
  1845  0799                     	;# 
  1846  079A                     	;# 
  1847  079B                     	;# 
  1848  080C                     	;# 
  1849  080D                     	;# 
  1850  080E                     	;# 
  1851  080F                     	;# 
  1852  0810                     	;# 
  1853  0811                     	;# 
  1854  0812                     	;# 
  1855  0813                     	;# 
  1856  0814                     	;# 
  1857  081A                     	;# 
  1858  081A                     	;# 
  1859  081B                     	;# 
  1860  081C                     	;# 
  1861  081C                     	;# 
  1862  081D                     	;# 
  1863  081E                     	;# 
  1864  081F                     	;# 
  1865  088C                     	;# 
  1866  088D                     	;# 
  1867  088E                     	;# 
  1868  088F                     	;# 
  1869  0890                     	;# 
  1870  0891                     	;# 
  1871  0892                     	;# 
  1872  0893                     	;# 
  1873  0895                     	;# 
  1874  0896                     	;# 
  1875  090C                     	;# 
  1876  090E                     	;# 
  1877  090F                     	;# 
  1878  091F                     	;# 
  1879  098F                     	;# 
  1880  098F                     	;# 
  1881  0990                     	;# 
  1882  0991                     	;# 
  1883  0992                     	;# 
  1884  0993                     	;# 
  1885  0994                     	;# 
  1886  0995                     	;# 
  1887  0996                     	;# 
  1888  0997                     	;# 
  1889  0A19                     	;# 
  1890  0A19                     	;# 
  1891  0A1A                     	;# 
  1892  0A1A                     	;# 
  1893  0A1B                     	;# 
  1894  0A1B                     	;# 
  1895  0A1B                     	;# 
  1896  0A1C                     	;# 
  1897  0A1C                     	;# 
  1898  0A1D                     	;# 
  1899  0A1D                     	;# 
  1900  0A1E                     	;# 
  1901  0A1E                     	;# 
  1902  0A1F                     	;# 
  1903  0A1F                     	;# 
  1904  0A1F                     	;# 
  1905  1E0F                     	;# 
  1906  1E10                     	;# 
  1907  1E11                     	;# 
  1908  1E12                     	;# 
  1909  1E13                     	;# 
  1910  1E14                     	;# 
  1911  1E15                     	;# 
  1912  1E16                     	;# 
  1913  1E17                     	;# 
  1914  1E18                     	;# 
  1915  1E19                     	;# 
  1916  1E1A                     	;# 
  1917  1E1B                     	;# 
  1918  1E1C                     	;# 
  1919  1E1D                     	;# 
  1920  1E1E                     	;# 
  1921  1E1F                     	;# 
  1922  1E20                     	;# 
  1923  1E21                     	;# 
  1924  1E22                     	;# 
  1925  1E23                     	;# 
  1926  1E24                     	;# 
  1927  1E25                     	;# 
  1928  1E26                     	;# 
  1929  1E27                     	;# 
  1930  1E28                     	;# 
  1931  1E29                     	;# 
  1932  1E2A                     	;# 
  1933  1E2B                     	;# 
  1934  1E2C                     	;# 
  1935  1E2D                     	;# 
  1936  1E2E                     	;# 
  1937  1E2F                     	;# 
  1938  1E30                     	;# 
  1939  1E31                     	;# 
  1940  1E32                     	;# 
  1941  1E33                     	;# 
  1942  1E34                     	;# 
  1943  1E35                     	;# 
  1944  1E36                     	;# 
  1945  1E37                     	;# 
  1946  1E8F                     	;# 
  1947  1E90                     	;# 
  1948  1E91                     	;# 
  1949  1E92                     	;# 
  1950  1E93                     	;# 
  1951  1E9C                     	;# 
  1952  1EA1                     	;# 
  1953  1EA2                     	;# 
  1954  1EB1                     	;# 
  1955  1EBB                     	;# 
  1956  1EBC                     	;# 
  1957  1EBD                     	;# 
  1958  1EBE                     	;# 
  1959  1EC3                     	;# 
  1960  1EC5                     	;# 
  1961  1EC6                     	;# 
  1962  1EC7                     	;# 
  1963  1ECB                     	;# 
  1964  1ECC                     	;# 
  1965  1ECD                     	;# 
  1966  1ECE                     	;# 
  1967  1F10                     	;# 
  1968  1F11                     	;# 
  1969  1F12                     	;# 
  1970  1F13                     	;# 
  1971  1F14                     	;# 
  1972  1F15                     	;# 
  1973  1F1C                     	;# 
  1974  1F1D                     	;# 
  1975  1F1E                     	;# 
  1976  1F1F                     	;# 
  1977  1F20                     	;# 
  1978  1F21                     	;# 
  1979  1F22                     	;# 
  1980  1F23                     	;# 
  1981  1F24                     	;# 
  1982  1F25                     	;# 
  1983  1F26                     	;# 
  1984  1F27                     	;# 
  1985  1F38                     	;# 
  1986  1F39                     	;# 
  1987  1F3A                     	;# 
  1988  1F3B                     	;# 
  1989  1F3C                     	;# 
  1990  1F3D                     	;# 
  1991  1F3E                     	;# 
  1992  1F3F                     	;# 
  1993  1F43                     	;# 
  1994  1F44                     	;# 
  1995  1F45                     	;# 
  1996  1F46                     	;# 
  1997  1F47                     	;# 
  1998  1F48                     	;# 
  1999  1F49                     	;# 
  2000  1F4A                     	;# 
  2001  1F4E                     	;# 
  2002  1F4F                     	;# 
  2003  1F50                     	;# 
  2004  1F51                     	;# 
  2005  1F52                     	;# 
  2006  1F53                     	;# 
  2007  1F54                     	;# 
  2008  1F55                     	;# 
  2009  1FE4                     	;# 
  2010  1FE5                     	;# 
  2011  1FE6                     	;# 
  2012  1FE7                     	;# 
  2013  1FE8                     	;# 
  2014  1FE8                     	;# 
  2015  1FE9                     	;# 
  2016  1FEA                     	;# 
  2017  1FEA                     	;# 
  2018  1FEB                     	;# 
  2019  1FED                     	;# 
  2020  1FEE                     	;# 
  2021  1FEF                     	;# 
  2022                           
  2023                           	psect	stringtext1
  2024  02BB                     __pstringtext1:	
  2025  02BB                     _stateTable:	
  2026  02BB  3469               	retlw	105
  2027  02BC  3441               	retlw	65
  2028  02BD  3461               	retlw	97
  2029  02BE  3457               	retlw	87
  2030  02BF                     __end_of_stateTable:	
  2031                           
  2032                           	psect	nvCOMMON
  2033  007B                     __pnvCOMMON:	
  2034  007B                     _eusart1TxBufferRemaining:	
  2035  007B                     	ds	1
  2036                           
  2037                           	psect	nvBANK0
  2038  003C                     __pnvBANK0:	
  2039  003C                     _EUSART1_ErrorHandler:	
  2040  003C                     	ds	2
  2041  003E                     _EUSART1_OverrunErrorHandler:	
  2042  003E                     	ds	2
  2043  0040                     _EUSART1_FramingErrorHandler:	
  2044  0040                     	ds	2
  2045  0042                     _EUSART1_RxDefaultInterruptHandler:	
  2046  0042                     	ds	2
  2047  0044                     _EUSART1_TxDefaultInterruptHandler:	
  2048  0044                     	ds	2
  2049  0046                     _TMR2_InterruptHandler:	
  2050  0046                     	ds	2
  2051  000D                     _PORTBbits	set	13
  2052  000E                     _PORTCbits	set	14
  2053  000C                     _PORTAbits	set	12
  2054  0018                     _LATAbits	set	24
  2055  0012                     _TRISAbits	set	18
  2056  0014                     _TRISC	set	20
  2057  0013                     _TRISB	set	19
  2058  0012                     _TRISA	set	18
  2059  001A                     _LATC	set	26
  2060  0019                     _LATB	set	25
  2061  0018                     _LATA	set	24
  2062  000B                     _INTCONbits	set	11
  2063  0119                     _RC1REG	set	281
  2064  011D                     _RC1STAbits	set	285
  2065  011A                     _TX1REG	set	282
  2066  011E                     _TX1STAbits	set	286
  2067  011C                     _SP1BRGH	set	284
  2068  011B                     _SP1BRGL	set	283
  2069  011E                     _TX1STA	set	286
  2070  011D                     _RC1STA	set	285
  2071  011F                     _BAUD1CON	set	287
  2072  028D                     _PR2	set	653
  2073  028C                     _TMR2	set	652
  2074  028E                     _T2CONbits	set	654
  2075  0291                     _T2RSTbits	set	657
  2076  028F                     _T2HLTbits	set	655
  2077  028E                     _T2CON	set	654
  2078  028C                     _T2TMR	set	652
  2079  028D                     _T2PR	set	653
  2080  0291                     _T2RST	set	657
  2081  028F                     _T2HLT	set	655
  2082  0290                     _T2CLKCON	set	656
  2083  070F                     _PIR3bits	set	1807
  2084  0719                     _PIE3bits	set	1817
  2085  071A                     _PIE4bits	set	1818
  2086  0710                     _PIR4bits	set	1808
  2087  079B                     _PMD5	set	1947
  2088  079A                     _PMD4	set	1946
  2089  0799                     _PMD3	set	1945
  2090  0798                     _PMD2	set	1944
  2091  0797                     _PMD1	set	1943
  2092  0796                     _PMD0	set	1942
  2093  0892                     _OSCTUNE	set	2194
  2094  0890                     _OSCSTAT	set	2192
  2095  0893                     _OSCFRQ	set	2195
  2096  0891                     _OSCEN	set	2193
  2097  088F                     _OSCCON3	set	2191
  2098  088D                     _OSCCON1	set	2189
  2099  1F12                     _RA2PPS	set	7954
  2100  1F52                     _INLVLC	set	8018
  2101  1F47                     _INLVLB	set	8007
  2102  1F3C                     _INLVLA	set	7996
  2103  1F51                     _SLRCONC	set	8017
  2104  1F46                     _SLRCONB	set	8006
  2105  1F3B                     _SLRCONA	set	7995
  2106  1F50                     _ODCONC	set	8016
  2107  1F45                     _ODCONB	set	8005
  2108  1F3A                     _ODCONA	set	7994
  2109  1F4F                     _WPUC	set	8015
  2110  1F39                     _WPUA	set	7993
  2111  1F44                     _WPUB	set	8004
  2112  1F38                     _ANSELA	set	7992
  2113  1F43                     _ANSELB	set	8003
  2114  1F4E                     _ANSELC	set	8014
  2115                           
  2116                           ; #config settings
  2117  0000                     
  2118                           	psect	cinit
  2119  0026                     start_initialization:	
  2120  0026                     __initialization:	
  2121                           
  2122                           ; Clear objects allocated to COMMON
  2123  0026  01F0               	clrf	__pbssCOMMON& (0+127)
  2124  0027  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  2125  0028  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  2126  0029  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  2127  002A  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  2128  002B  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  2129                           
  2130                           ; Clear objects allocated to BANK0
  2131  002C  3020               	movlw	low __pbssBANK0
  2132  002D  0084               	movwf	4
  2133  002E  3000               	movlw	high __pbssBANK0
  2134  002F  0085               	movwf	5
  2135  0030  301C               	movlw	28
  2136  0031  3182  2286  3180   	fcall	clear_ram0
  2137                           
  2138                           ; Clear objects allocated to BANK1
  2139  0034  30A0               	movlw	low __pbssBANK1
  2140  0035  0084               	movwf	4
  2141  0036  3000               	movlw	high __pbssBANK1
  2142  0037  0085               	movwf	5
  2143  0038  3040               	movlw	64
  2144  0039  3182  2286         	fcall	clear_ram0
  2145  003B                     end_of_initialization:	
  2146                           ;End of C runtime variable initialization code
  2147                           
  2148  003B                     __end_of__initialization:	
  2149  003B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2150  003C  0140               	movlb	0
  2151  003D  3180  283F         	ljmp	_main	;jump to C main() function
  2152                           
  2153                           	psect	bssCOMMON
  2154  0070                     __pbssCOMMON:	
  2155  0070                     _eusart1RxLastError:	
  2156  0070                     	ds	1
  2157  0071                     _eusart1RxCount:	
  2158  0071                     	ds	1
  2159  0072                     _eusart1RxTail:	
  2160  0072                     	ds	1
  2161  0073                     _eusart1RxHead:	
  2162  0073                     	ds	1
  2163  0074                     _eusart1TxTail:	
  2164  0074                     	ds	1
  2165  0075                     _eusart1TxHead:	
  2166  0075                     	ds	1
  2167                           
  2168                           	psect	bssBANK0
  2169  0020                     __pbssBANK0:	
  2170  0020                     _eusart1RxStatusBuffer:	
  2171  0020                     	ds	8
  2172  0028                     _eusart1RxBuffer:	
  2173  0028                     	ds	8
  2174  0030                     _target:	
  2175  0030                     	ds	7
  2176  0037                     _scan:	
  2177  0037                     	ds	5
  2178                           
  2179                           	psect	bssBANK1
  2180  00A0                     __pbssBANK1:	
  2181  00A0                     _eusart1TxBuffer:	
  2182  00A0                     	ds	64
  2183                           
  2184                           	psect	clrtext
  2185  0286                     clear_ram0:	
  2186                           ;	Called with FSR0 containing the base address, and
  2187                           ;	WREG with the size to clear
  2188                           
  2189  0286  0064               	clrwdt	;clear the watchdog before getting into this loop
  2190  0287                     clrloop0:	
  2191  0287  0180               	clrf	0	;clear RAM location pointed to by FSR
  2192  0288  3101               	addfsr 0,1
  2193  0289  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2194  028A  2A87               	goto	clrloop0	;have we reached the end yet?
  2195  028B  3400               	retlw	0	;all done for this memory range, return
  2196                           
  2197                           	psect	cstackCOMMON
  2198  0076                     __pcstackCOMMON:	
  2199  0076                     ?_TMR2_DefaultInterruptHandler:	
  2200  0076                     ??_TMR2_DefaultInterruptHandler:	
  2201                           ; 1 bytes @ 0x0
  2202                           
  2203  0076                     ?_TMR2_CallBack:	
  2204                           ; 1 bytes @ 0x0
  2205                           
  2206  0076                     ?_PMD_Initialize:	
  2207                           ; 1 bytes @ 0x0
  2208                           
  2209  0076                     ?_PIN_MANAGER_Initialize:	
  2210                           ; 1 bytes @ 0x0
  2211                           
  2212  0076                     ?_OSCILLATOR_Initialize:	
  2213                           ; 1 bytes @ 0x0
  2214                           
  2215  0076                     ?_EUSART1_Initialize:	
  2216                           ; 1 bytes @ 0x0
  2217                           
  2218  0076                     ?_EUSART1_Receive_ISR:	
  2219                           ; 1 bytes @ 0x0
  2220                           
  2221  0076                     ?_EUSART1_Transmit_ISR:	
  2222                           ; 1 bytes @ 0x0
  2223                           
  2224  0076                     ??_EUSART1_Transmit_ISR:	
  2225                           ; 1 bytes @ 0x0
  2226                           
  2227  0076                     ?_EUSART1_DefaultFramingErrorHandler:	
  2228                           ; 1 bytes @ 0x0
  2229                           
  2230  0076                     ??_EUSART1_DefaultFramingErrorHandler:	
  2231                           ; 1 bytes @ 0x0
  2232                           
  2233  0076                     ?_EUSART1_DefaultOverrunErrorHandler:	
  2234                           ; 1 bytes @ 0x0
  2235                           
  2236  0076                     ??_EUSART1_DefaultOverrunErrorHandler:	
  2237                           ; 1 bytes @ 0x0
  2238                           
  2239  0076                     ?_EUSART1_DefaultErrorHandler:	
  2240                           ; 1 bytes @ 0x0
  2241                           
  2242  0076                     ?_EUSART1_RxDataHandler:	
  2243                           ; 1 bytes @ 0x0
  2244                           
  2245  0076                     ??_EUSART1_RxDataHandler:	
  2246                           ; 1 bytes @ 0x0
  2247                           
  2248  0076                     ?_scanInput:	
  2249                           ; 1 bytes @ 0x0
  2250                           
  2251  0076                     ??_scanInput:	
  2252                           ; 1 bytes @ 0x0
  2253                           
  2254  0076                     ?_setState:	
  2255                           ; 1 bytes @ 0x0
  2256                           
  2257  0076                     ?_resetEdges:	
  2258                           ; 1 bytes @ 0x0
  2259                           
  2260  0076                     ?_countTargets:	
  2261                           ; 1 bytes @ 0x0
  2262                           
  2263  0076                     ?_TMR2_Initialize:	
  2264                           ; 1 bytes @ 0x0
  2265                           
  2266  0076                     ?_TMR2_ISR:	
  2267                           ; 1 bytes @ 0x0
  2268                           
  2269  0076                     ?_INTERRUPT_InterruptManager:	
  2270                           ; 1 bytes @ 0x0
  2271                           
  2272  0076                     ?_SYSTEM_Initialize:	
  2273                           ; 1 bytes @ 0x0
  2274                           
  2275  0076                     ?_isr_1ms:	
  2276                           ; 1 bytes @ 0x0
  2277                           
  2278  0076                     ?_main:	
  2279                           ; 1 bytes @ 0x0
  2280                           
  2281                           
  2282                           ; 1 bytes @ 0x0
  2283  0076                     	ds	1
  2284  0077                     ??_EUSART1_Receive_ISR:	
  2285  0077                     ??_EUSART1_DefaultErrorHandler:	
  2286                           ; 1 bytes @ 0x1
  2287                           
  2288                           
  2289                           ; 1 bytes @ 0x1
  2290  0077                     	ds	1
  2291  0078                     ?_TMR2_SetInterruptHandler:	
  2292  0078                     ??_TMR2_CallBack:	
  2293                           ; 1 bytes @ 0x2
  2294                           
  2295  0078                     ??_PMD_Initialize:	
  2296                           ; 1 bytes @ 0x2
  2297                           
  2298  0078                     ??_PIN_MANAGER_Initialize:	
  2299                           ; 1 bytes @ 0x2
  2300                           
  2301  0078                     ??_OSCILLATOR_Initialize:	
  2302                           ; 1 bytes @ 0x2
  2303                           
  2304  0078                     ?_EUSART1_SetRxInterruptHandler:	
  2305                           ; 1 bytes @ 0x2
  2306                           
  2307  0078                     ?_EUSART1_SetTxInterruptHandler:	
  2308                           ; 1 bytes @ 0x2
  2309                           
  2310  0078                     ?_EUSART1_SetFramingErrorHandler:	
  2311                           ; 1 bytes @ 0x2
  2312                           
  2313  0078                     ?_EUSART1_SetOverrunErrorHandler:	
  2314                           ; 1 bytes @ 0x2
  2315                           
  2316  0078                     ?_EUSART1_SetErrorHandler:	
  2317                           ; 1 bytes @ 0x2
  2318                           
  2319  0078                     ??_setState:	
  2320                           ; 1 bytes @ 0x2
  2321                           
  2322  0078                     ??_resetEdges:	
  2323                           ; 1 bytes @ 0x2
  2324                           
  2325  0078                     ??_countTargets:	
  2326                           ; 1 bytes @ 0x2
  2327                           
  2328  0078                     ??_TMR2_ISR:	
  2329                           ; 1 bytes @ 0x2
  2330                           
  2331  0078                     ??_INTERRUPT_InterruptManager:	
  2332                           ; 1 bytes @ 0x2
  2333                           
  2334  0078                     ??_isr_1ms:	
  2335                           ; 1 bytes @ 0x2
  2336                           
  2337  0078                     TMR2_SetInterruptHandler@InterruptHandler:	
  2338                           ; 1 bytes @ 0x2
  2339                           
  2340  0078                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  2341                           ; 2 bytes @ 0x2
  2342                           
  2343  0078                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  2344                           ; 2 bytes @ 0x2
  2345                           
  2346  0078                     EUSART1_SetErrorHandler@interruptHandler:	
  2347                           ; 2 bytes @ 0x2
  2348                           
  2349  0078                     EUSART1_SetTxInterruptHandler@interruptHandler:	
  2350                           ; 2 bytes @ 0x2
  2351                           
  2352  0078                     EUSART1_SetRxInterruptHandler@interruptHandler:	
  2353                           ; 2 bytes @ 0x2
  2354                           
  2355                           
  2356                           ; 2 bytes @ 0x2
  2357  0078                     	ds	1
  2358  0079                     setState@s:	
  2359                           
  2360                           ; 1 bytes @ 0x3
  2361  0079                     	ds	1
  2362  007A                     ??_TMR2_SetInterruptHandler:	
  2363  007A                     ??_EUSART1_Initialize:	
  2364                           ; 1 bytes @ 0x4
  2365                           
  2366  007A                     ??_EUSART1_SetRxInterruptHandler:	
  2367                           ; 1 bytes @ 0x4
  2368                           
  2369  007A                     ??_EUSART1_SetTxInterruptHandler:	
  2370                           ; 1 bytes @ 0x4
  2371                           
  2372  007A                     ??_EUSART1_SetFramingErrorHandler:	
  2373                           ; 1 bytes @ 0x4
  2374                           
  2375  007A                     ??_EUSART1_SetOverrunErrorHandler:	
  2376                           ; 1 bytes @ 0x4
  2377                           
  2378  007A                     ??_EUSART1_SetErrorHandler:	
  2379                           ; 1 bytes @ 0x4
  2380                           
  2381  007A                     ??_TMR2_Initialize:	
  2382                           ; 1 bytes @ 0x4
  2383                           
  2384                           
  2385                           ; 1 bytes @ 0x4
  2386  007A                     	ds	1
  2387  007B                     ??_SYSTEM_Initialize:	
  2388                           
  2389                           	psect	cstackBANK0
  2390  0048                     __pcstackBANK0:	
  2391                           ; 1 bytes @ 0x5
  2392                           
  2393  0048                     ??_main:	
  2394                           
  2395                           ; 1 bytes @ 0x0
  2396  0048                     	ds	2
  2397                           
  2398                           	psect	maintext
  2399  003F                     __pmaintext:	
  2400 ;;
  2401 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2402 ;;
  2403 ;; *************** function _main *****************
  2404 ;; Defined at:
  2405 ;;		line 123 in file "main.c"
  2406 ;; Parameters:    Size  Location     Type
  2407 ;;		None
  2408 ;; Auto vars:     Size  Location     Type
  2409 ;;		None
  2410 ;; Return value:  Size  Location     Type
  2411 ;;                  1    wreg      void 
  2412 ;; Registers used:
  2413 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2414 ;; Tracked objects:
  2415 ;;		On entry : B3F/0
  2416 ;;		On exit  : 0/0
  2417 ;;		Unchanged: 0/0
  2418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2421 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2422 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2423 ;;Total ram usage:        2 bytes
  2424 ;; Hardware stack levels required when called:    8
  2425 ;; This function calls:
  2426 ;;		_SYSTEM_Initialize
  2427 ;;		_TMR2_SetInterruptHandler
  2428 ;;		_countTargets
  2429 ;;		_resetEdges
  2430 ;;		_setState
  2431 ;; This function is called by:
  2432 ;;		Startup code after reset
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436                           
  2437                           ;psect for function _main
  2438  003F                     _main:	
  2439                           
  2440                           ;main.c: 126:     SYSTEM_Initialize();
  2441                           
  2442                           ;incstack = 0
  2443                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2444  003F  3182  2251  3180   	fcall	_SYSTEM_Initialize
  2445                           
  2446                           ;main.c: 127:     TMR2_SetInterruptHandler(isr_1ms);
  2447  0042  303D               	movlw	low _isr_1ms
  2448  0043  00F8               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2449  0044  3002               	movlw	high _isr_1ms
  2450  0045  00F9               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2451  0046  3182  2292  3180   	fcall	_TMR2_SetInterruptHandler
  2452                           
  2453                           ;main.c: 132:     (INTCONbits.GIE = 1);
  2454  0049  178B               	bsf	11,7	;volatile
  2455                           
  2456                           ;main.c: 135:     (INTCONbits.PEIE = 1);
  2457  004A  170B               	bsf	11,6	;volatile
  2458                           
  2459                           ;main.c: 143:     scan.count = 0;
  2460  004B  0140               	movlb	0	; select bank0
  2461  004C  01B7               	clrf	_scan
  2462                           
  2463                           ;main.c: 144:     scan.state = SCAN_INPUT_IDLE;
  2464  004D  01BA               	clrf	_scan+3
  2465                           
  2466                           ;main.c: 145:     scan.timeout = 0;
  2467  004E  01B8               	clrf	_scan+1
  2468  004F  01B9               	clrf	_scan+2
  2469  0050  28AA               	goto	l2055
  2470  0051                     l404:	
  2471                           ;main.c: 163:                     do { LATAbits.LATA4 = 0; } while(0);
  2472                           
  2473                           ;main.c: 160:             switch (target.state)
  2474                           
  2475                           ;main.c: 146:     setState(TARGET_IDLE);
  2476                           
  2477  0051  1218               	bcf	24,4	;volatile
  2478                           
  2479                           ;main.c: 164:                     do { LATAbits.LATA5 = 0; } while(0);
  2480  0052  1298               	bcf	24,5	;volatile
  2481                           
  2482                           ;main.c: 165:                     if (scan.risingEdge)
  2483  0053  1CBB               	btfss	_scan+4,1
  2484  0054  2869               	goto	l2017
  2485                           
  2486                           ;main.c: 166:                     {;main.c: 167:                         resetEdges();
  2487  0055  3182  228C  3180   	fcall	_resetEdges
  2488                           
  2489                           ;main.c: 168:                         if (target.count > 0)
  2490  0058  0140               	movlb	0	; select bank0
  2491  0059  0830               	movf	_target,w
  2492  005A  0431               	iorwf	_target+1,w
  2493  005B  1903               	btfsc	3,2
  2494  005C  2867               	goto	l2015
  2495                           
  2496                           ;main.c: 169:                         {;main.c: 170:                             setStat
      +                          e(TARGET_ACTIVE);
  2497  005D  3001               	movlw	1
  2498  005E  3182  2275  3180   	fcall	_setState
  2499                           
  2500                           ;main.c: 171:                             scan.timeout = 30;
  2501  0061  301E               	movlw	30
  2502  0062  0140               	movlb	0	; select bank0
  2503  0063  00B8               	movwf	_scan+1
  2504  0064  3000               	movlw	0
  2505  0065  00B9               	movwf	_scan+2
  2506                           
  2507                           ;main.c: 172:                         }
  2508  0066  28AE               	goto	l2001
  2509  0067                     l2015:	
  2510                           
  2511                           ;main.c: 174:                         {;main.c: 175:                             setStat
      +                          e(TARGET_ASSERT_15TH_POSITION);
  2512  0067  3002               	movlw	2
  2513  0068  28AB               	goto	L1
  2514  0069                     l2017:	
  2515                           
  2516                           ;main.c: 179:                     {;main.c: 180:                         countTargets();
  2517  0069  3180  20CE  3180   	fcall	_countTargets
  2518  006C  28AE               	goto	l2001
  2519  006D                     l413:	
  2520                           ;main.c: 184:                 case TARGET_ACTIVE:
  2521                           
  2522                           
  2523                           ;main.c: 185:                     if (scan.risingEdge)
  2524  006D  1CBB               	btfss	_scan+4,1
  2525  006E  2878               	goto	l2025
  2526                           
  2527                           ;main.c: 186:                     {;main.c: 187:                         resetEdges();
  2528  006F  3182  228C  3180   	fcall	_resetEdges
  2529  0072  0140               	movlb	0	; select bank0
  2530  0073  1698               	bsf	24,5	;volatile
  2531                           
  2532                           ;main.c: 189:                         --target.count;
  2533  0074  3001               	movlw	1
  2534  0075  02B0               	subwf	_target,f
  2535  0076  3000               	movlw	0
  2536  0077  3BB1               	subwfb	_target+1,f
  2537  0078                     l2025:	
  2538                           
  2539                           ;main.c: 192:                     if (scan.fallingEdge)
  2540  0078  1D3B               	btfss	_scan+4,2
  2541  0079  2894               	goto	l2045
  2542                           
  2543                           ;main.c: 193:                     {;main.c: 194:                         resetEdges();
  2544  007A  3182  228C  3180   	fcall	_resetEdges
  2545                           
  2546                           ;main.c: 195:                         if (target.count == 0)
  2547  007D  0140               	movlb	0	; select bank0
  2548  007E  0830               	movf	_target,w
  2549  007F  0431               	iorwf	_target+1,w
  2550  0080  1D03               	btfss	3,2
  2551  0081  2894               	goto	l2045
  2552                           
  2553                           ;main.c: 196:                         {;main.c: 197:                             do { LA
      +                          TAbits.LATA5 = 0; } while(0);
  2554  0082  1298               	bcf	24,5	;volatile
  2555                           
  2556                           ;main.c: 198:                             setState(TARGET_ASSERT_15TH_POSITION);
  2557  0083  3002               	movlw	2
  2558  0084  2891               	goto	L3
  2559  0085                     l422:	
  2560                           ;main.c: 208:                 case TARGET_ASSERT_15TH_POSITION:
  2561                           
  2562                           ;main.c: 205:                     if (target.stuckCount > 500u) setState(TARGET_IDLE);
  2563                           
  2564                           ;main.c: 204:                     ++target.stuckCount;
  2565                           
  2566                           
  2567                           ;main.c: 209:                     if (scan.risingEdge)
  2568  0085  1CBB               	btfss	_scan+4,1
  2569  0086  2894               	goto	l2045
  2570                           
  2571                           ;main.c: 210:                     {;main.c: 211:                         resetEdges();
  2572  0087  3182  228C  3180   	fcall	_resetEdges
  2573  008A  0140               	movlb	0	; select bank0
  2574  008B  1618               	bsf	24,4	;volatile
  2575                           
  2576                           ;main.c: 213:                         target.dwellCount = 1000u;
  2577  008C  30E8               	movlw	232
  2578  008D  00B4               	movwf	_target+4
  2579  008E  3003               	movlw	3
  2580  008F  00B5               	movwf	_target+5
  2581                           
  2582                           ;main.c: 214:                         setState(TARGET_WAIT_15TH_POSITION);
  2583  0090  3003               	movlw	3
  2584  0091                     L3:	
  2585  0091  3182  2275  3180   	fcall	_setState
  2586  0094                     l2045:	
  2587                           
  2588                           ;main.c: 219:                     ++target.stuckCount;
  2589  0094  3001               	movlw	1
  2590  0095  0140               	movlb	0	; select bank0
  2591  0096  07B2               	addwf	_target+2,f
  2592  0097  3000               	movlw	0
  2593  0098  3DB3               	addwfc	_target+3,f
  2594                           
  2595                           ;main.c: 220:                     if (target.stuckCount > 500u) setState(TARGET_IDLE);
  2596  0099  3001               	movlw	1
  2597  009A  0233               	subwf	_target+3,w
  2598  009B  30F5               	movlw	245
  2599  009C  1903               	skipnz
  2600  009D  0232               	subwf	_target+2,w
  2601  009E  1C03               	skipc
  2602  009F  28AE               	goto	l2001
  2603  00A0  28AA               	goto	l2055
  2604  00A1                     l2051:	
  2605                           
  2606                           ;main.c: 224:                     if (--target.dwellCount == 0)
  2607  00A1  3001               	movlw	1
  2608  00A2  02B4               	subwf	_target+4,f
  2609  00A3  3000               	movlw	0
  2610  00A4  3BB5               	subwfb	_target+5,f
  2611  00A5  0834               	movf	_target+4,w
  2612  00A6  0435               	iorwf	_target+5,w
  2613  00A7  1D03               	btfss	3,2
  2614  00A8  28AE               	goto	l2001
  2615                           
  2616                           ;main.c: 225:                     {;main.c: 226:                         do { LATAbits.L
      +                          ATA4 = 0; } while(0);
  2617  00A9  1218               	bcf	24,4	;volatile
  2618  00AA                     l2055:	
  2619                           ;main.c: 227:                         setState(TARGET_IDLE);
  2620                           
  2621                           
  2622                           ;main.c: 232:                     setState(TARGET_IDLE);
  2623  00AA  3000               	movlw	0
  2624  00AB                     L1:	
  2625  00AB  3182  2275  3180   	fcall	_setState
  2626  00AE                     l2001:	
  2627                           
  2628                           ;main.c: 149:     {;main.c: 150:         if (scan.tick)
  2629  00AE  0140               	movlb	0	; select bank0
  2630  00AF  1C3B               	btfss	_scan+4,0
  2631  00B0  28AE               	goto	l2001
  2632                           
  2633                           ;main.c: 151:         {;main.c: 152:             scan.tick = 0;
  2634  00B1  103B               	bcf	_scan+4,0
  2635                           
  2636                           ;main.c: 154:             TRISAbits.TRISA2 = 1;
  2637  00B2  1512               	bsf	18,2	;volatile
  2638                           
  2639                           ;main.c: 155:             RC1STA = 0x0;
  2640  00B3  0142               	movlb	2	; select bank2
  2641  00B4  019D               	clrf	29	;volatile
  2642                           
  2643                           ;main.c: 156:             TX1STA = 0x0;
  2644  00B5  019E               	clrf	30	;volatile
  2645                           
  2646                           ;main.c: 233:                     break;
  2647  00B6  0140               	movlb	0	; select bank0
  2648  00B7  0836               	movf	_target+6,w
  2649  00B8  00C8               	movwf	??_main
  2650  00B9  01C9               	clrf	??_main+1
  2651                           
  2652                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2653                           ; Switch size 1, requested type "simple"
  2654                           ; Number of cases is 1, Range of values is 0 to 0
  2655                           ; switch strategies available:
  2656                           ; Name         Instructions Cycles
  2657                           ; simple_byte            4     3 (average)
  2658                           ; direct_byte            8     6 (fixed)
  2659                           ; jumptable            260     6 (fixed)
  2660                           ;	Chosen strategy is simple_byte
  2661  00BA  0849               	movf	??_main+1,w
  2662  00BB  3A00               	xorlw	0	; case 0
  2663  00BC  1903               	skipnz
  2664  00BD  28BF               	goto	l2105
  2665  00BE  28AA               	goto	l2055
  2666  00BF                     l2105:	
  2667                           
  2668                           ; Switch size 1, requested type "simple"
  2669                           ; Number of cases is 4, Range of values is 0 to 3
  2670                           ; switch strategies available:
  2671                           ; Name         Instructions Cycles
  2672                           ; simple_byte           13     7 (average)
  2673                           ; direct_byte           14     6 (fixed)
  2674                           ; jumptable            260     6 (fixed)
  2675                           ;	Chosen strategy is simple_byte
  2676  00BF  0848               	movf	??_main,w
  2677  00C0  3A00               	xorlw	0	; case 0
  2678  00C1  1903               	skipnz
  2679  00C2  2851               	goto	l404
  2680  00C3  3A01               	xorlw	1	; case 1
  2681  00C4  1903               	skipnz
  2682  00C5  286D               	goto	l413
  2683  00C6  3A03               	xorlw	3	; case 2
  2684  00C7  1903               	skipnz
  2685  00C8  2885               	goto	l422
  2686  00C9  3A01               	xorlw	1	; case 3
  2687  00CA  1903               	skipnz
  2688  00CB  28A1               	goto	l2051
  2689  00CC  28AA               	goto	l2055
  2690                           
  2691                           ;main.c: 235:         }
  2692  00CD  28AE               	goto	l2001
  2693  00CE                     __end_of_main:	
  2694                           
  2695                           	psect	text1
  2696  0275                     __ptext1:	
  2697 ;; *************** function _setState *****************
  2698 ;; Defined at:
  2699 ;;		line 241 in file "main.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;  s               1    wreg     enum E7175
  2702 ;; Auto vars:     Size  Location     Type
  2703 ;;  s               1    3[COMMON] enum E7175
  2704 ;; Return value:  Size  Location     Type
  2705 ;;                  1    wreg      void 
  2706 ;; Registers used:
  2707 ;;		wreg, status,2, status,0, pclath, cstack
  2708 ;; Tracked objects:
  2709 ;;		On entry : 0/0
  2710 ;;		On exit  : 0/0
  2711 ;;		Unchanged: 0/0
  2712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2714 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2715 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2716 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2717 ;;Total ram usage:        2 bytes
  2718 ;; Hardware stack levels used:    1
  2719 ;; Hardware stack levels required when called:    6
  2720 ;; This function calls:
  2721 ;;		_resetEdges
  2722 ;; This function is called by:
  2723 ;;		_main
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726                           
  2727                           
  2728                           ;psect for function _setState
  2729  0275                     _setState:	
  2730                           
  2731                           ;incstack = 0
  2732                           ; Regs used in _setState: [wreg+status,2+status,0+pclath+cstack]
  2733                           ;setState@s stored from wreg
  2734  0275  00F9               	movwf	setState@s
  2735                           
  2736                           ;main.c: 241: void setState(eTARGET_STATE_t s);main.c: 242: {;main.c: 243:     target.st
      +                          ate = s;
  2737  0276  0879               	movf	setState@s,w
  2738  0277  00F8               	movwf	??_setState
  2739  0278  0878               	movf	??_setState,w
  2740  0279  0140               	movlb	0	; select bank0
  2741  027A  00B6               	movwf	_target+6
  2742                           
  2743                           ;main.c: 244:     resetEdges();
  2744  027B  3182  228C         	fcall	_resetEdges
  2745  027D  0008               	return
  2746  027E                     __end_of_setState:	
  2747                           
  2748                           	psect	text2
  2749  028C                     __ptext2:	
  2750 ;; *************** function _resetEdges *****************
  2751 ;; Defined at:
  2752 ;;		line 250 in file "main.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;		None
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;		None
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  1    wreg      void 
  2759 ;; Registers used:
  2760 ;;		status,2
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2770 ;;Total ram usage:        0 bytes
  2771 ;; Hardware stack levels used:    1
  2772 ;; Hardware stack levels required when called:    5
  2773 ;; This function calls:
  2774 ;;		Nothing
  2775 ;; This function is called by:
  2776 ;;		_main
  2777 ;;		_setState
  2778 ;; This function uses a non-reentrant model
  2779 ;;
  2780                           
  2781                           
  2782                           ;psect for function _resetEdges
  2783  028C                     _resetEdges:	
  2784                           
  2785                           ;main.c: 252:     target.stuckCount = 0;
  2786                           
  2787                           ;incstack = 0
  2788                           ; Regs used in _resetEdges: [status,2]
  2789  028C  0140               	movlb	0	; select bank0
  2790  028D  01B2               	clrf	_target+2
  2791  028E  01B3               	clrf	_target+3
  2792                           
  2793                           ;main.c: 253:     scan.risingEdge = 0;
  2794  028F  10BB               	bcf	_scan+4,1
  2795                           
  2796                           ;main.c: 254:     scan.fallingEdge = 0;
  2797  0290  113B               	bcf	_scan+4,2
  2798  0291  0008               	return
  2799  0292                     __end_of_resetEdges:	
  2800                           
  2801                           	psect	text3
  2802  00CE                     __ptext3:	
  2803 ;; *************** function _countTargets *****************
  2804 ;; Defined at:
  2805 ;;		line 302 in file "main.c"
  2806 ;; Parameters:    Size  Location     Type
  2807 ;;		None
  2808 ;; Auto vars:     Size  Location     Type
  2809 ;;		None
  2810 ;; Return value:  Size  Location     Type
  2811 ;;                  1    wreg      void 
  2812 ;; Registers used:
  2813 ;;		wreg, status,2
  2814 ;; Tracked objects:
  2815 ;;		On entry : 0/0
  2816 ;;		On exit  : 0/0
  2817 ;;		Unchanged: 0/0
  2818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2823 ;;Total ram usage:        0 bytes
  2824 ;; Hardware stack levels used:    1
  2825 ;; Hardware stack levels required when called:    5
  2826 ;; This function calls:
  2827 ;;		Nothing
  2828 ;; This function is called by:
  2829 ;;		_main
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           
  2833                           
  2834                           ;psect for function _countTargets
  2835  00CE                     _countTargets:	
  2836                           
  2837                           ;main.c: 304:     target.count = 0;
  2838                           
  2839                           ;incstack = 0
  2840                           ; Regs used in _countTargets: [wreg+status,2]
  2841  00CE  0140               	movlb	0	; select bank0
  2842  00CF  01B0               	clrf	_target
  2843  00D0  01B1               	clrf	_target+1
  2844                           
  2845                           ;main.c: 305:     if (PORTCbits.RC5 == 0)
  2846  00D1  1A8E               	btfsc	14,5	;volatile
  2847  00D2  28D7               	goto	l1791
  2848                           
  2849                           ;main.c: 306:     {;main.c: 307:        target.count++;
  2850  00D3  3001               	movlw	1
  2851  00D4  07B0               	addwf	_target,f
  2852  00D5  3000               	movlw	0
  2853  00D6  3DB1               	addwfc	_target+1,f
  2854  00D7                     l1791:	
  2855                           
  2856                           ;main.c: 309:     if (PORTCbits.RC4 == 0)
  2857  00D7  1A0E               	btfsc	14,4	;volatile
  2858  00D8  28DD               	goto	l1795
  2859                           
  2860                           ;main.c: 310:     {;main.c: 311:        target.count++;
  2861  00D9  3001               	movlw	1
  2862  00DA  07B0               	addwf	_target,f
  2863  00DB  3000               	movlw	0
  2864  00DC  3DB1               	addwfc	_target+1,f
  2865  00DD                     l1795:	
  2866                           
  2867                           ;main.c: 313:     if (PORTCbits.RC3 == 0)
  2868  00DD  198E               	btfsc	14,3	;volatile
  2869  00DE  28E3               	goto	l1799
  2870                           
  2871                           ;main.c: 314:     {;main.c: 315:        target.count++;
  2872  00DF  3001               	movlw	1
  2873  00E0  07B0               	addwf	_target,f
  2874  00E1  3000               	movlw	0
  2875  00E2  3DB1               	addwfc	_target+1,f
  2876  00E3                     l1799:	
  2877                           
  2878                           ;main.c: 317:     if (PORTCbits.RC6 == 0)
  2879  00E3  1B0E               	btfsc	14,6	;volatile
  2880  00E4  28E9               	goto	l1803
  2881                           
  2882                           ;main.c: 318:     {;main.c: 319:        target.count++;
  2883  00E5  3001               	movlw	1
  2884  00E6  07B0               	addwf	_target,f
  2885  00E7  3000               	movlw	0
  2886  00E8  3DB1               	addwfc	_target+1,f
  2887  00E9                     l1803:	
  2888                           
  2889                           ;main.c: 321:     if (PORTCbits.RC7 == 0)
  2890  00E9  1B8E               	btfsc	14,7	;volatile
  2891  00EA  28EF               	goto	l1807
  2892                           
  2893                           ;main.c: 322:     {;main.c: 323:        target.count++;
  2894  00EB  3001               	movlw	1
  2895  00EC  07B0               	addwf	_target,f
  2896  00ED  3000               	movlw	0
  2897  00EE  3DB1               	addwfc	_target+1,f
  2898  00EF                     l1807:	
  2899                           
  2900                           ;main.c: 325:     if (PORTBbits.RB7 == 0)
  2901  00EF  1B8D               	btfsc	13,7	;volatile
  2902  00F0  28F5               	goto	l1811
  2903                           
  2904                           ;main.c: 326:     {;main.c: 327:        target.count++;
  2905  00F1  3001               	movlw	1
  2906  00F2  07B0               	addwf	_target,f
  2907  00F3  3000               	movlw	0
  2908  00F4  3DB1               	addwfc	_target+1,f
  2909  00F5                     l1811:	
  2910                           
  2911                           ;main.c: 329:     if (PORTCbits.RC0 == 0)
  2912  00F5  180E               	btfsc	14,0	;volatile
  2913  00F6  28FB               	goto	l1815
  2914                           
  2915                           ;main.c: 330:     {;main.c: 331:        target.count++;
  2916  00F7  3001               	movlw	1
  2917  00F8  07B0               	addwf	_target,f
  2918  00F9  3000               	movlw	0
  2919  00FA  3DB1               	addwfc	_target+1,f
  2920  00FB                     l1815:	
  2921                           
  2922                           ;main.c: 333:     if (PORTCbits.RC1 == 0)
  2923  00FB  188E               	btfsc	14,1	;volatile
  2924  00FC  2901               	goto	l1819
  2925                           
  2926                           ;main.c: 334:     {;main.c: 335:        target.count++;
  2927  00FD  3001               	movlw	1
  2928  00FE  07B0               	addwf	_target,f
  2929  00FF  3000               	movlw	0
  2930  0100  3DB1               	addwfc	_target+1,f
  2931  0101                     l1819:	
  2932                           
  2933                           ;main.c: 337:     if (PORTCbits.RC2 == 0)
  2934  0101  190E               	btfsc	14,2	;volatile
  2935  0102  2907               	goto	l1823
  2936                           
  2937                           ;main.c: 338:     {;main.c: 339:        target.count++;
  2938  0103  3001               	movlw	1
  2939  0104  07B0               	addwf	_target,f
  2940  0105  3000               	movlw	0
  2941  0106  3DB1               	addwfc	_target+1,f
  2942  0107                     l1823:	
  2943                           
  2944                           ;main.c: 341:     if (PORTBbits.RB4 == 0)
  2945  0107  1A0D               	btfsc	13,4	;volatile
  2946  0108  290D               	goto	l1827
  2947                           
  2948                           ;main.c: 342:     {;main.c: 343:        target.count++;
  2949  0109  3001               	movlw	1
  2950  010A  07B0               	addwf	_target,f
  2951  010B  3000               	movlw	0
  2952  010C  3DB1               	addwfc	_target+1,f
  2953  010D                     l1827:	
  2954                           
  2955                           ;main.c: 345:     if (PORTBbits.RB5 == 0)
  2956  010D  1A8D               	btfsc	13,5	;volatile
  2957  010E  2913               	goto	l1831
  2958                           
  2959                           ;main.c: 346:     {;main.c: 347:        target.count++;
  2960  010F  3001               	movlw	1
  2961  0110  07B0               	addwf	_target,f
  2962  0111  3000               	movlw	0
  2963  0112  3DB1               	addwfc	_target+1,f
  2964  0113                     l1831:	
  2965                           
  2966                           ;main.c: 349:     if (PORTBbits.RB6 == 0)
  2967  0113  1B0D               	btfsc	13,6	;volatile
  2968  0114  2919               	goto	l1835
  2969                           
  2970                           ;main.c: 350:     {;main.c: 351:        target.count++;
  2971  0115  3001               	movlw	1
  2972  0116  07B0               	addwf	_target,f
  2973  0117  3000               	movlw	0
  2974  0118  3DB1               	addwfc	_target+1,f
  2975  0119                     l1835:	
  2976                           
  2977                           ;main.c: 354:     if (PORTAbits.RA2 == 0)
  2978  0119  190C               	btfsc	12,2	;volatile
  2979  011A  291F               	goto	l1839
  2980                           
  2981                           ;main.c: 355:     {;main.c: 356:        target.count++;
  2982  011B  3001               	movlw	1
  2983  011C  07B0               	addwf	_target,f
  2984  011D  3000               	movlw	0
  2985  011E  3DB1               	addwfc	_target+1,f
  2986  011F                     l1839:	
  2987                           
  2988                           ;main.c: 359:     if (PORTAbits.RA1 == 0)
  2989  011F  188C               	btfsc	12,1	;volatile
  2990  0120  2925               	goto	l1843
  2991                           
  2992                           ;main.c: 360:     {;main.c: 361:        target.count++;
  2993  0121  3001               	movlw	1
  2994  0122  07B0               	addwf	_target,f
  2995  0123  3000               	movlw	0
  2996  0124  3DB1               	addwfc	_target+1,f
  2997  0125                     l1843:	
  2998                           
  2999                           ;main.c: 363:     if (PORTAbits.RA0 == 0)
  3000  0125  180C               	btfsc	12,0	;volatile
  3001  0126  0008               	return
  3002                           
  3003                           ;main.c: 364:     {;main.c: 365:        target.count++;
  3004  0127  3001               	movlw	1
  3005  0128  07B0               	addwf	_target,f
  3006  0129  3000               	movlw	0
  3007  012A  3DB1               	addwfc	_target+1,f
  3008  012B  0008               	return
  3009  012C                     __end_of_countTargets:	
  3010                           
  3011                           	psect	text4
  3012  0251                     __ptext4:	
  3013 ;; *************** function _SYSTEM_Initialize *****************
  3014 ;; Defined at:
  3015 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3016 ;; Parameters:    Size  Location     Type
  3017 ;;		None
  3018 ;; Auto vars:     Size  Location     Type
  3019 ;;		None
  3020 ;; Return value:  Size  Location     Type
  3021 ;;                  1    wreg      void 
  3022 ;; Registers used:
  3023 ;;		wreg, status,2, status,0, pclath, cstack
  3024 ;; Tracked objects:
  3025 ;;		On entry : 0/0
  3026 ;;		On exit  : 0/0
  3027 ;;		Unchanged: 0/0
  3028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3033 ;;Total ram usage:        0 bytes
  3034 ;; Hardware stack levels used:    1
  3035 ;; Hardware stack levels required when called:    7
  3036 ;; This function calls:
  3037 ;;		_EUSART1_Initialize
  3038 ;;		_OSCILLATOR_Initialize
  3039 ;;		_PIN_MANAGER_Initialize
  3040 ;;		_PMD_Initialize
  3041 ;;		_TMR2_Initialize
  3042 ;; This function is called by:
  3043 ;;		_main
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           
  3048                           ;psect for function _SYSTEM_Initialize
  3049  0251                     _SYSTEM_Initialize:	
  3050                           
  3051                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  3052                           
  3053                           ;incstack = 0
  3054                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3055  0251  3182  227E  3182   	fcall	_PMD_Initialize
  3056                           
  3057                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  3058  0254  3181  21D6  3182   	fcall	_PIN_MANAGER_Initialize
  3059                           
  3060                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  3061  0257  3182  226B  3182   	fcall	_OSCILLATOR_Initialize
  3062                           
  3063                           ;mcc_generated_files/mcc.c: 55:     TMR2_Initialize();
  3064  025A  3182  2228  3182   	fcall	_TMR2_Initialize
  3065                           
  3066                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  3067  025D  3181  212C         	fcall	_EUSART1_Initialize
  3068  025F  0008               	return
  3069  0260                     __end_of_SYSTEM_Initialize:	
  3070                           
  3071                           	psect	text5
  3072  0228                     __ptext5:	
  3073 ;; *************** function _TMR2_Initialize *****************
  3074 ;; Defined at:
  3075 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  3076 ;; Parameters:    Size  Location     Type
  3077 ;;		None
  3078 ;; Auto vars:     Size  Location     Type
  3079 ;;		None
  3080 ;; Return value:  Size  Location     Type
  3081 ;;                  1    wreg      void 
  3082 ;; Registers used:
  3083 ;;		wreg, status,2, status,0, pclath, cstack
  3084 ;; Tracked objects:
  3085 ;;		On entry : 0/0
  3086 ;;		On exit  : 0/0
  3087 ;;		Unchanged: 0/0
  3088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3093 ;;Total ram usage:        0 bytes
  3094 ;; Hardware stack levels used:    1
  3095 ;; Hardware stack levels required when called:    6
  3096 ;; This function calls:
  3097 ;;		_TMR2_SetInterruptHandler
  3098 ;; This function is called by:
  3099 ;;		_SYSTEM_Initialize
  3100 ;; This function uses a non-reentrant model
  3101 ;;
  3102                           
  3103                           
  3104                           ;psect for function _TMR2_Initialize
  3105  0228                     _TMR2_Initialize:	
  3106                           
  3107                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x01;
  3108                           
  3109                           ;incstack = 0
  3110                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3111  0228  3001               	movlw	1
  3112  0229  0145               	movlb	5	; select bank5
  3113  022A  0090               	movwf	16	;volatile
  3114                           
  3115                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x00;
  3116  022B  018F               	clrf	15	;volatile
  3117                           
  3118                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
  3119  022C  0191               	clrf	17	;volatile
  3120                           
  3121                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0x7C;
  3122  022D  307C               	movlw	124
  3123  022E  008D               	movwf	13	;volatile
  3124                           
  3125                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
  3126  022F  018C               	clrf	12	;volatile
  3127                           
  3128                           ;mcc_generated_files/tmr2.c: 84:     PIR4bits.TMR2IF = 0;
  3129  0230  014E               	movlb	14	; select bank14
  3130  0231  1090               	bcf	16,1	;volatile
  3131                           
  3132                           ;mcc_generated_files/tmr2.c: 87:     PIE4bits.TMR2IE = 1;
  3133  0232  149A               	bsf	26,1	;volatile
  3134                           
  3135                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  3136  0233  30C6               	movlw	low _TMR2_DefaultInterruptHandler
  3137  0234  00F8               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  3138  0235  3002               	movlw	high _TMR2_DefaultInterruptHandler
  3139  0236  00F9               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  3140  0237  3182  2292         	fcall	_TMR2_SetInterruptHandler
  3141                           
  3142                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0xE0;
  3143  0239  30E0               	movlw	224
  3144  023A  0145               	movlb	5	; select bank5
  3145  023B  008E               	movwf	14	;volatile
  3146  023C  0008               	return
  3147  023D                     __end_of_TMR2_Initialize:	
  3148                           
  3149                           	psect	text6
  3150  0292                     __ptext6:	
  3151 ;; *************** function _TMR2_SetInterruptHandler *****************
  3152 ;; Defined at:
  3153 ;;		line 186 in file "mcc_generated_files/tmr2.c"
  3154 ;; Parameters:    Size  Location     Type
  3155 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  3156 ;;		 -> isr_1ms(1), TMR2_DefaultInterruptHandler(1), 
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;		None
  3159 ;; Return value:  Size  Location     Type
  3160 ;;                  1    wreg      void 
  3161 ;; Registers used:
  3162 ;;		wreg
  3163 ;; Tracked objects:
  3164 ;;		On entry : 0/0
  3165 ;;		On exit  : 0/0
  3166 ;;		Unchanged: 0/0
  3167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3168 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3171 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3172 ;;Total ram usage:        2 bytes
  3173 ;; Hardware stack levels used:    1
  3174 ;; Hardware stack levels required when called:    5
  3175 ;; This function calls:
  3176 ;;		Nothing
  3177 ;; This function is called by:
  3178 ;;		_TMR2_Initialize
  3179 ;;		_main
  3180 ;; This function uses a non-reentrant model
  3181 ;;
  3182                           
  3183                           
  3184                           ;psect for function _TMR2_SetInterruptHandler
  3185  0292                     _TMR2_SetInterruptHandler:	
  3186                           
  3187                           ;mcc_generated_files/tmr2.c: 187:     TMR2_InterruptHandler = InterruptHandler;
  3188                           
  3189                           ;incstack = 0
  3190                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  3191  0292  0879               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  3192  0293  0140               	movlb	0	; select bank0
  3193  0294  00C7               	movwf	_TMR2_InterruptHandler+1
  3194  0295  0878               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  3195  0296  00C6               	movwf	_TMR2_InterruptHandler
  3196  0297  0008               	return
  3197  0298                     __end_of_TMR2_SetInterruptHandler:	
  3198                           
  3199                           	psect	text7
  3200  027E                     __ptext7:	
  3201 ;; *************** function _PMD_Initialize *****************
  3202 ;; Defined at:
  3203 ;;		line 75 in file "mcc_generated_files/mcc.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;		None
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;		None
  3208 ;; Return value:  Size  Location     Type
  3209 ;;                  1    wreg      void 
  3210 ;; Registers used:
  3211 ;;		status,2
  3212 ;; Tracked objects:
  3213 ;;		On entry : 0/0
  3214 ;;		On exit  : 0/0
  3215 ;;		Unchanged: 0/0
  3216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3221 ;;Total ram usage:        0 bytes
  3222 ;; Hardware stack levels used:    1
  3223 ;; Hardware stack levels required when called:    5
  3224 ;; This function calls:
  3225 ;;		Nothing
  3226 ;; This function is called by:
  3227 ;;		_SYSTEM_Initialize
  3228 ;; This function uses a non-reentrant model
  3229 ;;
  3230                           
  3231                           
  3232                           ;psect for function _PMD_Initialize
  3233  027E                     _PMD_Initialize:	
  3234                           
  3235                           ;mcc_generated_files/mcc.c: 78:     PMD0 = 0x00;
  3236                           
  3237                           ;incstack = 0
  3238                           ; Regs used in _PMD_Initialize: [status,2]
  3239  027E  014F               	movlb	15	; select bank15
  3240  027F  0196               	clrf	22	;volatile
  3241                           
  3242                           ;mcc_generated_files/mcc.c: 80:     PMD1 = 0x00;
  3243  0280  0197               	clrf	23	;volatile
  3244                           
  3245                           ;mcc_generated_files/mcc.c: 82:     PMD2 = 0x00;
  3246  0281  0198               	clrf	24	;volatile
  3247                           
  3248                           ;mcc_generated_files/mcc.c: 84:     PMD3 = 0x00;
  3249  0282  0199               	clrf	25	;volatile
  3250                           
  3251                           ;mcc_generated_files/mcc.c: 86:     PMD4 = 0x00;
  3252  0283  019A               	clrf	26	;volatile
  3253                           
  3254                           ;mcc_generated_files/mcc.c: 88:     PMD5 = 0x00;
  3255  0284  019B               	clrf	27	;volatile
  3256  0285  0008               	return
  3257  0286                     __end_of_PMD_Initialize:	
  3258                           
  3259                           	psect	text8
  3260  01D6                     __ptext8:	
  3261 ;; *************** function _PIN_MANAGER_Initialize *****************
  3262 ;; Defined at:
  3263 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3264 ;; Parameters:    Size  Location     Type
  3265 ;;		None
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;		None
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  1    wreg      void 
  3270 ;; Registers used:
  3271 ;;		wreg, status,2
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3281 ;;Total ram usage:        0 bytes
  3282 ;; Hardware stack levels used:    1
  3283 ;; Hardware stack levels required when called:    5
  3284 ;; This function calls:
  3285 ;;		Nothing
  3286 ;; This function is called by:
  3287 ;;		_SYSTEM_Initialize
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291                           
  3292                           ;psect for function _PIN_MANAGER_Initialize
  3293  01D6                     _PIN_MANAGER_Initialize:	
  3294                           
  3295                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3296                           
  3297                           ;incstack = 0
  3298                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3299  01D6  0140               	movlb	0	; select bank0
  3300  01D7  0198               	clrf	24	;volatile
  3301                           
  3302                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3303  01D8  0199               	clrf	25	;volatile
  3304                           
  3305                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  3306  01D9  019A               	clrf	26	;volatile
  3307                           
  3308                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x07;
  3309  01DA  3007               	movlw	7
  3310  01DB  0092               	movwf	18	;volatile
  3311                           
  3312                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
  3313  01DC  30F0               	movlw	240
  3314  01DD  0093               	movwf	19	;volatile
  3315                           
  3316                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
  3317  01DE  30FF               	movlw	255
  3318  01DF  0094               	movwf	20	;volatile
  3319                           
  3320                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x00;
  3321  01E0  017E               	movlb	62	; select bank62
  3322  01E1  01CE               	clrf	78	;volatile
  3323                           
  3324                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
  3325  01E2  01C3               	clrf	67	;volatile
  3326                           
  3327                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x00;
  3328  01E3  01B8               	clrf	56	;volatile
  3329                           
  3330                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  3331  01E4  01C4               	clrf	68	;volatile
  3332                           
  3333                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  3334  01E5  01B9               	clrf	57	;volatile
  3335                           
  3336                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  3337  01E6  01CF               	clrf	79	;volatile
  3338                           
  3339                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  3340  01E7  01BA               	clrf	58	;volatile
  3341                           
  3342                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  3343  01E8  01C5               	clrf	69	;volatile
  3344                           
  3345                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  3346  01E9  01D0               	clrf	80	;volatile
  3347                           
  3348                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x1F;
  3349  01EA  301F               	movlw	31
  3350  01EB  00BB               	movwf	59	;volatile
  3351                           
  3352                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0x00;
  3353  01EC  01C6               	clrf	70	;volatile
  3354                           
  3355                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0x3F;
  3356  01ED  303F               	movlw	63
  3357  01EE  00D1               	movwf	81	;volatile
  3358                           
  3359                           ;mcc_generated_files/pin_manager.c: 102:     INLVLA = 0x3F;
  3360  01EF  303F               	movlw	63
  3361  01F0  00BC               	movwf	60	;volatile
  3362                           
  3363                           ;mcc_generated_files/pin_manager.c: 103:     INLVLB = 0x00;
  3364  01F1  01C7               	clrf	71	;volatile
  3365                           
  3366                           ;mcc_generated_files/pin_manager.c: 104:     INLVLC = 0x3F;
  3367  01F2  303F               	movlw	63
  3368  01F3  00D2               	movwf	82	;volatile
  3369                           
  3370                           ;mcc_generated_files/pin_manager.c: 113:     RA2PPS = 0x0F;
  3371  01F4  300F               	movlw	15
  3372  01F5  0092               	movwf	18	;volatile
  3373  01F6  0008               	return
  3374  01F7                     __end_of_PIN_MANAGER_Initialize:	
  3375                           
  3376                           	psect	text9
  3377  026B                     __ptext9:	
  3378 ;; *************** function _OSCILLATOR_Initialize *****************
  3379 ;; Defined at:
  3380 ;;		line 59 in file "mcc_generated_files/mcc.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;		None
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;		None
  3385 ;; Return value:  Size  Location     Type
  3386 ;;                  1    wreg      void 
  3387 ;; Registers used:
  3388 ;;		wreg, status,2
  3389 ;; Tracked objects:
  3390 ;;		On entry : 0/0
  3391 ;;		On exit  : 0/0
  3392 ;;		Unchanged: 0/0
  3393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3398 ;;Total ram usage:        0 bytes
  3399 ;; Hardware stack levels used:    1
  3400 ;; Hardware stack levels required when called:    5
  3401 ;; This function calls:
  3402 ;;		Nothing
  3403 ;; This function is called by:
  3404 ;;		_SYSTEM_Initialize
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           
  3409                           ;psect for function _OSCILLATOR_Initialize
  3410  026B                     _OSCILLATOR_Initialize:	
  3411                           
  3412                           ;mcc_generated_files/mcc.c: 62:     OSCCON1 = 0x60;
  3413                           
  3414                           ;incstack = 0
  3415                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3416  026B  3060               	movlw	96
  3417  026C  0151               	movlb	17	; select bank17
  3418  026D  008D               	movwf	13	;volatile
  3419                           
  3420                           ;mcc_generated_files/mcc.c: 64:     OSCCON3 = 0x00;
  3421  026E  018F               	clrf	15	;volatile
  3422                           
  3423                           ;mcc_generated_files/mcc.c: 66:     OSCEN = 0x00;
  3424  026F  0191               	clrf	17	;volatile
  3425                           
  3426                           ;mcc_generated_files/mcc.c: 68:     OSCFRQ = 0x06;
  3427  0270  3006               	movlw	6
  3428  0271  0093               	movwf	19	;volatile
  3429                           
  3430                           ;mcc_generated_files/mcc.c: 70:     OSCSTAT = 0x00;
  3431  0272  0190               	clrf	16	;volatile
  3432                           
  3433                           ;mcc_generated_files/mcc.c: 72:     OSCTUNE = 0x00;
  3434  0273  0192               	clrf	18	;volatile
  3435  0274  0008               	return
  3436  0275                     __end_of_OSCILLATOR_Initialize:	
  3437                           
  3438                           	psect	text10
  3439  012C                     __ptext10:	
  3440 ;; *************** function _EUSART1_Initialize *****************
  3441 ;; Defined at:
  3442 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;		None
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;		None
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  1    wreg      void 
  3449 ;; Registers used:
  3450 ;;		wreg, status,2, status,0, pclath, cstack
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3458 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3459 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3460 ;;Total ram usage:        1 bytes
  3461 ;; Hardware stack levels used:    1
  3462 ;; Hardware stack levels required when called:    6
  3463 ;; This function calls:
  3464 ;;		_EUSART1_SetErrorHandler
  3465 ;;		_EUSART1_SetFramingErrorHandler
  3466 ;;		_EUSART1_SetOverrunErrorHandler
  3467 ;;		_EUSART1_SetRxInterruptHandler
  3468 ;;		_EUSART1_SetTxInterruptHandler
  3469 ;; This function is called by:
  3470 ;;		_SYSTEM_Initialize
  3471 ;; This function uses a non-reentrant model
  3472 ;;
  3473                           
  3474                           
  3475                           ;psect for function _EUSART1_Initialize
  3476  012C                     _EUSART1_Initialize:	
  3477                           
  3478                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
  3479                           
  3480                           ;incstack = 0
  3481                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3482  012C  014E               	movlb	14	; select bank14
  3483  012D  1299               	bcf	25,5	;volatile
  3484                           
  3485                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  3486  012E  30A4               	movlw	low _EUSART1_Receive_ISR
  3487  012F  00F8               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  3488  0130  3001               	movlw	high _EUSART1_Receive_ISR
  3489  0131  00F9               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  3490  0132  3182  229E  3181   	fcall	_EUSART1_SetRxInterruptHandler
  3491                           
  3492                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
  3493  0135  014E               	movlb	14	; select bank14
  3494  0136  1219               	bcf	25,4	;volatile
  3495                           
  3496                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  3497  0137  30F7               	movlw	low _EUSART1_Transmit_ISR
  3498  0138  00F8               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
  3499  0139  3001               	movlw	high _EUSART1_Transmit_ISR
  3500  013A  00F9               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
  3501  013B  3182  2298  3181   	fcall	_EUSART1_SetTxInterruptHandler
  3502                           
  3503                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
  3504  013E  3008               	movlw	8
  3505  013F  0142               	movlb	2	; select bank2
  3506  0140  009F               	movwf	31	;volatile
  3507                           
  3508                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x80;
  3509  0141  3080               	movlw	128
  3510  0142  009D               	movwf	29	;volatile
  3511                           
  3512                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
  3513  0143  3024               	movlw	36
  3514  0144  009E               	movwf	30	;volatile
  3515                           
  3516                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x44;
  3517  0145  3044               	movlw	68
  3518  0146  009B               	movwf	27	;volatile
  3519                           
  3520                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x00;
  3521  0147  019C               	clrf	28	;volatile
  3522                           
  3523                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  3524  0148  30C7               	movlw	low _EUSART1_DefaultFramingErrorHandler
  3525  0149  00F8               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
  3526  014A  3002               	movlw	high _EUSART1_DefaultFramingErrorHandler
  3527  014B  00F9               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
  3528  014C  3182  22AA  3181   	fcall	_EUSART1_SetFramingErrorHandler
  3529                           
  3530                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  3531  014F  30BF               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  3532  0150  00F8               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
  3533  0151  3002               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  3534  0152  00F9               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
  3535  0153  3182  22A4  3181   	fcall	_EUSART1_SetOverrunErrorHandler
  3536                           
  3537                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  3538  0156  30C3               	movlw	low _EUSART1_DefaultErrorHandler
  3539  0157  00F8               	movwf	EUSART1_SetErrorHandler@interruptHandler
  3540  0158  3002               	movlw	high _EUSART1_DefaultErrorHandler
  3541  0159  00F9               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
  3542  015A  3182  22B0         	fcall	_EUSART1_SetErrorHandler
  3543                           
  3544                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  3545  015C  01F0               	clrf	_eusart1RxLastError	;volatile
  3546                           
  3547                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  3548  015D  01F5               	clrf	_eusart1TxHead	;volatile
  3549                           
  3550                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  3551  015E  01F4               	clrf	_eusart1TxTail	;volatile
  3552                           
  3553                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  3554  015F  3040               	movlw	64
  3555  0160  00FA               	movwf	??_EUSART1_Initialize
  3556  0161  087A               	movf	??_EUSART1_Initialize,w
  3557  0162  00FB               	movwf	_eusart1TxBufferRemaining	;volatile
  3558                           
  3559                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  3560  0163  01F3               	clrf	_eusart1RxHead	;volatile
  3561                           
  3562                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  3563  0164  01F2               	clrf	_eusart1RxTail	;volatile
  3564                           
  3565                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  3566  0165  01F1               	clrf	_eusart1RxCount	;volatile
  3567                           
  3568                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
  3569  0166  014E               	movlb	14	; select bank14
  3570  0167  1699               	bsf	25,5	;volatile
  3571  0168  0008               	return
  3572  0169                     __end_of_EUSART1_Initialize:	
  3573                           
  3574                           	psect	text11
  3575  0298                     __ptext11:	
  3576 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  3577 ;; Defined at:
  3578 ;;		line 285 in file "mcc_generated_files/eusart1.c"
  3579 ;; Parameters:    Size  Location     Type
  3580 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  3581 ;;		 -> EUSART1_Transmit_ISR(1), 
  3582 ;; Auto vars:     Size  Location     Type
  3583 ;;		None
  3584 ;; Return value:  Size  Location     Type
  3585 ;;                  1    wreg      void 
  3586 ;; Registers used:
  3587 ;;		wreg
  3588 ;; Tracked objects:
  3589 ;;		On entry : 0/0
  3590 ;;		On exit  : 0/0
  3591 ;;		Unchanged: 0/0
  3592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3593 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3596 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3597 ;;Total ram usage:        2 bytes
  3598 ;; Hardware stack levels used:    1
  3599 ;; Hardware stack levels required when called:    5
  3600 ;; This function calls:
  3601 ;;		Nothing
  3602 ;; This function is called by:
  3603 ;;		_EUSART1_Initialize
  3604 ;; This function uses a non-reentrant model
  3605 ;;
  3606                           
  3607                           
  3608                           ;psect for function _EUSART1_SetTxInterruptHandler
  3609  0298                     _EUSART1_SetTxInterruptHandler:	
  3610                           
  3611                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  3612                           
  3613                           ;incstack = 0
  3614                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
  3615  0298  0879               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
  3616  0299  0140               	movlb	0	; select bank0
  3617  029A  00C5               	movwf	_EUSART1_TxDefaultInterruptHandler+1
  3618  029B  0878               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
  3619  029C  00C4               	movwf	_EUSART1_TxDefaultInterruptHandler
  3620  029D  0008               	return
  3621  029E                     __end_of_EUSART1_SetTxInterruptHandler:	
  3622                           
  3623                           	psect	text12
  3624  029E                     __ptext12:	
  3625 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  3626 ;; Defined at:
  3627 ;;		line 289 in file "mcc_generated_files/eusart1.c"
  3628 ;; Parameters:    Size  Location     Type
  3629 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  3630 ;;		 -> EUSART1_Receive_ISR(1), 
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;		None
  3633 ;; Return value:  Size  Location     Type
  3634 ;;                  1    wreg      void 
  3635 ;; Registers used:
  3636 ;;		wreg
  3637 ;; Tracked objects:
  3638 ;;		On entry : 0/0
  3639 ;;		On exit  : 0/0
  3640 ;;		Unchanged: 0/0
  3641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3642 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3645 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3646 ;;Total ram usage:        2 bytes
  3647 ;; Hardware stack levels used:    1
  3648 ;; Hardware stack levels required when called:    5
  3649 ;; This function calls:
  3650 ;;		Nothing
  3651 ;; This function is called by:
  3652 ;;		_EUSART1_Initialize
  3653 ;; This function uses a non-reentrant model
  3654 ;;
  3655                           
  3656                           
  3657                           ;psect for function _EUSART1_SetRxInterruptHandler
  3658  029E                     _EUSART1_SetRxInterruptHandler:	
  3659                           
  3660                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  3661                           
  3662                           ;incstack = 0
  3663                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
  3664  029E  0879               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
  3665  029F  0140               	movlb	0	; select bank0
  3666  02A0  00C3               	movwf	_EUSART1_RxDefaultInterruptHandler+1
  3667  02A1  0878               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
  3668  02A2  00C2               	movwf	_EUSART1_RxDefaultInterruptHandler
  3669  02A3  0008               	return
  3670  02A4                     __end_of_EUSART1_SetRxInterruptHandler:	
  3671                           
  3672                           	psect	text13
  3673  02A4                     __ptext13:	
  3674 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  3675 ;; Defined at:
  3676 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  3677 ;; Parameters:    Size  Location     Type
  3678 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  3679 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  3680 ;; Auto vars:     Size  Location     Type
  3681 ;;		None
  3682 ;; Return value:  Size  Location     Type
  3683 ;;                  1    wreg      void 
  3684 ;; Registers used:
  3685 ;;		wreg
  3686 ;; Tracked objects:
  3687 ;;		On entry : 0/0
  3688 ;;		On exit  : 0/0
  3689 ;;		Unchanged: 0/0
  3690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3691 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3694 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3695 ;;Total ram usage:        2 bytes
  3696 ;; Hardware stack levels used:    1
  3697 ;; Hardware stack levels required when called:    5
  3698 ;; This function calls:
  3699 ;;		Nothing
  3700 ;; This function is called by:
  3701 ;;		_EUSART1_Initialize
  3702 ;; This function uses a non-reentrant model
  3703 ;;
  3704                           
  3705                           
  3706                           ;psect for function _EUSART1_SetOverrunErrorHandler
  3707  02A4                     _EUSART1_SetOverrunErrorHandler:	
  3708                           
  3709                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
  3710                           
  3711                           ;incstack = 0
  3712                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
  3713  02A4  0879               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
  3714  02A5  0140               	movlb	0	; select bank0
  3715  02A6  00BF               	movwf	_EUSART1_OverrunErrorHandler+1
  3716  02A7  0878               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
  3717  02A8  00BE               	movwf	_EUSART1_OverrunErrorHandler
  3718  02A9  0008               	return
  3719  02AA                     __end_of_EUSART1_SetOverrunErrorHandler:	
  3720                           
  3721                           	psect	text14
  3722  02AA                     __ptext14:	
  3723 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  3724 ;; Defined at:
  3725 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  3726 ;; Parameters:    Size  Location     Type
  3727 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  3728 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;		None
  3731 ;; Return value:  Size  Location     Type
  3732 ;;                  1    wreg      void 
  3733 ;; Registers used:
  3734 ;;		wreg
  3735 ;; Tracked objects:
  3736 ;;		On entry : 0/0
  3737 ;;		On exit  : 0/0
  3738 ;;		Unchanged: 0/0
  3739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3740 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3743 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3744 ;;Total ram usage:        2 bytes
  3745 ;; Hardware stack levels used:    1
  3746 ;; Hardware stack levels required when called:    5
  3747 ;; This function calls:
  3748 ;;		Nothing
  3749 ;; This function is called by:
  3750 ;;		_EUSART1_Initialize
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           
  3754                           
  3755                           ;psect for function _EUSART1_SetFramingErrorHandler
  3756  02AA                     _EUSART1_SetFramingErrorHandler:	
  3757                           
  3758                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
  3759                           
  3760                           ;incstack = 0
  3761                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
  3762  02AA  0879               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
  3763  02AB  0140               	movlb	0	; select bank0
  3764  02AC  00C1               	movwf	_EUSART1_FramingErrorHandler+1
  3765  02AD  0878               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
  3766  02AE  00C0               	movwf	_EUSART1_FramingErrorHandler
  3767  02AF  0008               	return
  3768  02B0                     __end_of_EUSART1_SetFramingErrorHandler:	
  3769                           
  3770                           	psect	text15
  3771  02B0                     __ptext15:	
  3772 ;; *************** function _EUSART1_SetErrorHandler *****************
  3773 ;; Defined at:
  3774 ;;		line 281 in file "mcc_generated_files/eusart1.c"
  3775 ;; Parameters:    Size  Location     Type
  3776 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  3777 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  3778 ;; Auto vars:     Size  Location     Type
  3779 ;;		None
  3780 ;; Return value:  Size  Location     Type
  3781 ;;                  1    wreg      void 
  3782 ;; Registers used:
  3783 ;;		wreg
  3784 ;; Tracked objects:
  3785 ;;		On entry : 0/0
  3786 ;;		On exit  : 0/0
  3787 ;;		Unchanged: 0/0
  3788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3789 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3792 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3793 ;;Total ram usage:        2 bytes
  3794 ;; Hardware stack levels used:    1
  3795 ;; Hardware stack levels required when called:    5
  3796 ;; This function calls:
  3797 ;;		Nothing
  3798 ;; This function is called by:
  3799 ;;		_EUSART1_Initialize
  3800 ;; This function uses a non-reentrant model
  3801 ;;
  3802                           
  3803                           
  3804                           ;psect for function _EUSART1_SetErrorHandler
  3805  02B0                     _EUSART1_SetErrorHandler:	
  3806                           
  3807                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
  3808                           
  3809                           ;incstack = 0
  3810                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
  3811  02B0  0879               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
  3812  02B1  0140               	movlb	0	; select bank0
  3813  02B2  00BD               	movwf	_EUSART1_ErrorHandler+1
  3814  02B3  0878               	movf	EUSART1_SetErrorHandler@interruptHandler,w
  3815  02B4  00BC               	movwf	_EUSART1_ErrorHandler
  3816  02B5  0008               	return
  3817  02B6                     __end_of_EUSART1_SetErrorHandler:	
  3818                           
  3819                           	psect	intentry
  3820  0004                     __pintentry:	
  3821 ;; *************** function _INTERRUPT_InterruptManager *****************
  3822 ;; Defined at:
  3823 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3824 ;; Parameters:    Size  Location     Type
  3825 ;;		None
  3826 ;; Auto vars:     Size  Location     Type
  3827 ;;		None
  3828 ;; Return value:  Size  Location     Type
  3829 ;;                  1    wreg      void 
  3830 ;; Registers used:
  3831 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3832 ;; Tracked objects:
  3833 ;;		On entry : 0/0
  3834 ;;		On exit  : 0/0
  3835 ;;		Unchanged: 0/0
  3836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3841 ;;Total ram usage:        0 bytes
  3842 ;; Hardware stack levels used:    1
  3843 ;; Hardware stack levels required when called:    4
  3844 ;; This function calls:
  3845 ;;		Absolute function
  3846 ;;		_EUSART1_Receive_ISR
  3847 ;;		_EUSART1_Transmit_ISR
  3848 ;;		_TMR2_ISR
  3849 ;; This function is called by:
  3850 ;;		Interrupt level 1
  3851 ;; This function uses a non-reentrant model
  3852 ;;
  3853                           
  3854  0004                     _INTERRUPT_InterruptManager:	
  3855                           
  3856                           ;incstack = 0
  3857  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3858                           
  3859                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3860  0005  3180               	pagesel	$
  3861                           
  3862                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  3863  0006  1F0B               	btfss	11,6	;volatile
  3864  0007  2822               	goto	i1l115
  3865                           
  3866                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE3bits.TX1IE == 1 && PIR3bits.TX1IF == 1)
  3867  0008  014E               	movlb	14	; select bank14
  3868  0009  1A19               	btfsc	25,4	;volatile
  3869  000A  1E0F               	btfss	15,4	;volatile
  3870  000B  2813               	goto	i1l108
  3871                           
  3872                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART1_TxDefaultInterruptHandler();
  3873  000C  0140               	movlb	0	; select bank0
  3874  000D  0845               	movf	_EUSART1_TxDefaultInterruptHandler+1,w
  3875  000E  008A               	movwf	10
  3876  000F  0844               	movf	_EUSART1_TxDefaultInterruptHandler,w
  3877  0010  000A               	callw
  3878  0011  3180               	pagesel	$
  3879                           
  3880                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  3881  0012  2822               	goto	i1l115
  3882  0013                     i1l108:	
  3883                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
  3884                           
  3885  0013  1A99               	btfsc	25,5	;volatile
  3886  0014  1E8F               	btfss	15,5	;volatile
  3887  0015  281D               	goto	i1l110
  3888                           
  3889                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART1_RxDefaultInterruptHandler();
  3890  0016  0140               	movlb	0	; select bank0
  3891  0017  0843               	movf	_EUSART1_RxDefaultInterruptHandler+1,w
  3892  0018  008A               	movwf	10
  3893  0019  0842               	movf	_EUSART1_RxDefaultInterruptHandler,w
  3894  001A  000A               	callw
  3895  001B  3180               	pagesel	$
  3896                           
  3897                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  3898  001C  2822               	goto	i1l115
  3899  001D                     i1l110:	
  3900                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE4bits.TMR2IE == 1 && PI
      +                          R4bits.TMR2IF == 1)
  3901                           
  3902  001D  189A               	btfsc	26,1	;volatile
  3903  001E  1C90               	btfss	16,1	;volatile
  3904  001F  2822               	goto	i1l115
  3905                           
  3906                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR2_ISR();
  3907  0020  3182  22B6         	fcall	_TMR2_ISR
  3908  0022                     i1l115:	
  3909                           ;mcc_generated_files/interrupt_manager.c: 73:     }
  3910                           
  3911                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  3912                           
  3913  0022  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3914  0023  0009               	retfie
  3915  0024                     __end_of_INTERRUPT_InterruptManager:	
  3916                           
  3917                           	psect	text17
  3918  02B6                     __ptext17:	
  3919 ;; *************** function _TMR2_ISR *****************
  3920 ;; Defined at:
  3921 ;;		line 165 in file "mcc_generated_files/tmr2.c"
  3922 ;; Parameters:    Size  Location     Type
  3923 ;;		None
  3924 ;; Auto vars:     Size  Location     Type
  3925 ;;		None
  3926 ;; Return value:  Size  Location     Type
  3927 ;;                  1    wreg      void 
  3928 ;; Registers used:
  3929 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3930 ;; Tracked objects:
  3931 ;;		On entry : 0/0
  3932 ;;		On exit  : 0/0
  3933 ;;		Unchanged: 0/0
  3934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3939 ;;Total ram usage:        0 bytes
  3940 ;; Hardware stack levels used:    1
  3941 ;; Hardware stack levels required when called:    3
  3942 ;; This function calls:
  3943 ;;		_TMR2_CallBack
  3944 ;; This function is called by:
  3945 ;;		_INTERRUPT_InterruptManager
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           
  3949                           
  3950                           ;psect for function _TMR2_ISR
  3951  02B6                     _TMR2_ISR:	
  3952                           
  3953                           ;mcc_generated_files/tmr2.c: 169:     PIR4bits.TMR2IF = 0;
  3954                           
  3955                           ;incstack = 0
  3956                           ; Regs used in _TMR2_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3957  02B6  014E               	movlb	14	; select bank14
  3958  02B7  1090               	bcf	16,1	;volatile
  3959                           
  3960                           ;mcc_generated_files/tmr2.c: 173:     TMR2_CallBack();
  3961  02B8  3182  2260         	fcall	_TMR2_CallBack
  3962  02BA  0008               	return
  3963  02BB                     __end_of_TMR2_ISR:	
  3964                           
  3965                           	psect	text18
  3966  0260                     __ptext18:	
  3967 ;; *************** function _TMR2_CallBack *****************
  3968 ;; Defined at:
  3969 ;;		line 176 in file "mcc_generated_files/tmr2.c"
  3970 ;; Parameters:    Size  Location     Type
  3971 ;;		None
  3972 ;; Auto vars:     Size  Location     Type
  3973 ;;		None
  3974 ;; Return value:  Size  Location     Type
  3975 ;;                  1    wreg      void 
  3976 ;; Registers used:
  3977 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3978 ;; Tracked objects:
  3979 ;;		On entry : 0/0
  3980 ;;		On exit  : 0/0
  3981 ;;		Unchanged: 0/0
  3982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3987 ;;Total ram usage:        0 bytes
  3988 ;; Hardware stack levels used:    1
  3989 ;; Hardware stack levels required when called:    2
  3990 ;; This function calls:
  3991 ;;		Absolute function
  3992 ;;		_TMR2_DefaultInterruptHandler
  3993 ;;		_isr_1ms
  3994 ;; This function is called by:
  3995 ;;		_TMR2_ISR
  3996 ;; This function uses a non-reentrant model
  3997 ;;
  3998                           
  3999                           
  4000                           ;psect for function _TMR2_CallBack
  4001  0260                     _TMR2_CallBack:	
  4002                           
  4003                           ;mcc_generated_files/tmr2.c: 180:     if(TMR2_InterruptHandler)
  4004                           
  4005                           ;incstack = 0
  4006                           ; Regs used in _TMR2_CallBack: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4007  0260  0140               	movlb	0	; select bank0
  4008  0261  0846               	movf	_TMR2_InterruptHandler,w
  4009  0262  0447               	iorwf	_TMR2_InterruptHandler+1,w
  4010  0263  1903               	btfsc	3,2
  4011  0264  0008               	return
  4012                           
  4013                           ;mcc_generated_files/tmr2.c: 181:     {;mcc_generated_files/tmr2.c: 182:         TMR2_In
      +                          terruptHandler();
  4014  0265  0847               	movf	_TMR2_InterruptHandler+1,w
  4015  0266  008A               	movwf	10
  4016  0267  0846               	movf	_TMR2_InterruptHandler,w
  4017  0268  000A               	callw
  4018  0269  3182               	pagesel	$
  4019  026A  0008               	return
  4020  026B                     __end_of_TMR2_CallBack:	
  4021                           
  4022                           	psect	text19
  4023  02C6                     __ptext19:	
  4024 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  4025 ;; Defined at:
  4026 ;;		line 190 in file "mcc_generated_files/tmr2.c"
  4027 ;; Parameters:    Size  Location     Type
  4028 ;;		None
  4029 ;; Auto vars:     Size  Location     Type
  4030 ;;		None
  4031 ;; Return value:  Size  Location     Type
  4032 ;;                  1    wreg      void 
  4033 ;; Registers used:
  4034 ;;		None
  4035 ;; Tracked objects:
  4036 ;;		On entry : 0/0
  4037 ;;		On exit  : 0/0
  4038 ;;		Unchanged: 0/0
  4039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4044 ;;Total ram usage:        0 bytes
  4045 ;; Hardware stack levels used:    1
  4046 ;; This function calls:
  4047 ;;		Nothing
  4048 ;; This function is called by:
  4049 ;;		_TMR2_Initialize
  4050 ;;		_TMR2_CallBack
  4051 ;; This function uses a non-reentrant model
  4052 ;;
  4053                           
  4054                           
  4055                           ;psect for function _TMR2_DefaultInterruptHandler
  4056  02C6                     _TMR2_DefaultInterruptHandler:	
  4057                           
  4058                           ;incstack = 0
  4059                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  4060  02C6  0008               	return
  4061  02C7                     __end_of_TMR2_DefaultInterruptHandler:	
  4062                           
  4063                           	psect	text20
  4064  023D                     __ptext20:	
  4065 ;; *************** function _isr_1ms *****************
  4066 ;; Defined at:
  4067 ;;		line 108 in file "main.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;		None
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;		None
  4072 ;; Return value:  Size  Location     Type
  4073 ;;                  1    wreg      void 
  4074 ;; Registers used:
  4075 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4076 ;; Tracked objects:
  4077 ;;		On entry : 0/0
  4078 ;;		On exit  : 0/0
  4079 ;;		Unchanged: 0/0
  4080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4085 ;;Total ram usage:        0 bytes
  4086 ;; Hardware stack levels used:    1
  4087 ;; Hardware stack levels required when called:    1
  4088 ;; This function calls:
  4089 ;;		_scanInput
  4090 ;; This function is called by:
  4091 ;;		_main
  4092 ;;		_TMR2_CallBack
  4093 ;; This function uses a non-reentrant model
  4094 ;;
  4095                           
  4096                           
  4097                           ;psect for function _isr_1ms
  4098  023D                     _isr_1ms:	
  4099                           
  4100                           ;main.c: 110:     scan.tick = 1;
  4101                           
  4102                           ;incstack = 0
  4103                           ; Regs used in _isr_1ms: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4104  023D  0140               	movlb	0	; select bank0
  4105  023E  143B               	bsf	_scan+4,0
  4106                           
  4107                           ;main.c: 111:     scanInput();
  4108  023F  3181  2169  3182   	fcall	_scanInput
  4109                           
  4110                           ;main.c: 113:     if (scan.timeout > 0)
  4111  0242  0140               	movlb	0	; select bank0
  4112  0243  0838               	movf	_scan+1,w
  4113  0244  0439               	iorwf	_scan+2,w
  4114  0245  1903               	btfsc	3,2
  4115  0246  2A4B               	goto	i1l1583
  4116                           
  4117                           ;main.c: 114:     {;main.c: 115:         scan.timeout--;
  4118  0247  3001               	movlw	1
  4119  0248  02B8               	subwf	_scan+1,f
  4120  0249  3000               	movlw	0
  4121  024A  3BB9               	subwfb	_scan+2,f
  4122  024B                     i1l1583:	
  4123                           
  4124                           ;main.c: 117:     if (scan.count > 0)
  4125  024B  0837               	movf	_scan,w
  4126  024C  1903               	btfsc	3,2
  4127  024D  0008               	return
  4128                           
  4129                           ;main.c: 118:     {;main.c: 119:         scan.count--;
  4130  024E  3001               	movlw	1
  4131  024F  02B7               	subwf	_scan,f
  4132  0250  0008               	return
  4133  0251                     __end_of_isr_1ms:	
  4134                           
  4135                           	psect	text21
  4136  0169                     __ptext21:	
  4137 ;; *************** function _scanInput *****************
  4138 ;; Defined at:
  4139 ;;		line 257 in file "main.c"
  4140 ;; Parameters:    Size  Location     Type
  4141 ;;		None
  4142 ;; Auto vars:     Size  Location     Type
  4143 ;;		None
  4144 ;; Return value:  Size  Location     Type
  4145 ;;                  1    wreg      void 
  4146 ;; Registers used:
  4147 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4148 ;; Tracked objects:
  4149 ;;		On entry : 0/0
  4150 ;;		On exit  : 0/0
  4151 ;;		Unchanged: 0/0
  4152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4155 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4156 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4157 ;;Total ram usage:        2 bytes
  4158 ;; Hardware stack levels used:    1
  4159 ;; This function calls:
  4160 ;;		Nothing
  4161 ;; This function is called by:
  4162 ;;		_isr_1ms
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166                           
  4167                           ;psect for function _scanInput
  4168  0169                     _scanInput:	
  4169                           
  4170                           ;main.c: 259:     switch (scan.state)
  4171                           
  4172                           ;incstack = 0
  4173                           ; Regs used in _scanInput: [wreg-fsr0h+status,2+status,0]
  4174  0169  298F               	goto	i1l1547
  4175  016A                     i1l446:	
  4176                           ;main.c: 260:     {;main.c: 261:     case SCAN_INPUT_IDLE:
  4177                           
  4178                           
  4179                           ;main.c: 262:         if (PORTAbits.RA3 == 1)
  4180  016A  1D8C               	btfss	12,3	;volatile
  4181  016B  0008               	return
  4182                           
  4183                           ;main.c: 263:         {;main.c: 264:             scan.count = 4;
  4184  016C  3004               	movlw	4
  4185  016D  00F6               	movwf	??_scanInput
  4186  016E  0876               	movf	??_scanInput,w
  4187  016F  00B7               	movwf	_scan
  4188                           
  4189                           ;main.c: 265:             scan.state = SCAN_INPUT_DEBOUNCE;
  4190  0170  01BA               	clrf	_scan+3
  4191  0171  0ABA               	incf	_scan+3,f
  4192  0172  0008               	return
  4193  0173                     i1l449:	
  4194                           ;main.c: 269:     case SCAN_INPUT_DEBOUNCE:
  4195                           
  4196                           
  4197                           ;main.c: 270:         if (PORTAbits.RA3 == 1)
  4198  0173  1D8C               	btfss	12,3	;volatile
  4199  0174  2986               	goto	i1l1537
  4200                           
  4201                           ;main.c: 271:         {;main.c: 272:             if (scan.count == 0)
  4202  0175  0837               	movf	_scan,w
  4203  0176  1D03               	btfss	3,2
  4204  0177  0008               	return
  4205                           
  4206                           ;main.c: 273:             {;main.c: 274:                 scan.risingEdge = 1;
  4207  0178  14BB               	bsf	_scan+4,1
  4208                           
  4209                           ;main.c: 275:                 scan.state = SCAN_INPUT_ASSERTED;
  4210  0179  3002               	movlw	2
  4211  017A  00F6               	movwf	??_scanInput
  4212  017B  0876               	movf	??_scanInput,w
  4213  017C  00BA               	movwf	_scan+3
  4214                           
  4215                           ;main.c: 276:                 scan.count = 15;
  4216  017D  300F               	movlw	15
  4217  017E  00F6               	movwf	??_scanInput
  4218  017F  0876               	movf	??_scanInput,w
  4219  0180  00B7               	movwf	_scan
  4220  0181  0008               	return
  4221  0182                     i1l1539:	
  4222                           
  4223                           ;main.c: 287:         {;main.c: 288:             if (scan.count == 0)
  4224  0182  0837               	movf	_scan,w
  4225  0183  1D03               	btfss	3,2
  4226  0184  0008               	return
  4227                           
  4228                           ;main.c: 289:             {;main.c: 290:                 scan.fallingEdge = 1;
  4229  0185  153B               	bsf	_scan+4,2
  4230  0186                     i1l1537:	
  4231                           
  4232                           ;main.c: 280:         {;main.c: 281:             scan.state = SCAN_INPUT_IDLE;
  4233  0186  01BA               	clrf	_scan+3
  4234  0187  0008               	return
  4235  0188                     i1l453:	
  4236                           ;main.c: 285:     case SCAN_INPUT_ASSERTED:
  4237                           
  4238                           
  4239                           ;main.c: 286:         if (PORTAbits.RA3 == 0)
  4240  0188  1D8C               	btfss	12,3	;volatile
  4241  0189  2982               	goto	i1l1539
  4242                           
  4243                           ;main.c: 295:         {;main.c: 296:             scan.count = 15;
  4244  018A  300F               	movlw	15
  4245  018B  00F6               	movwf	??_scanInput
  4246  018C  0876               	movf	??_scanInput,w
  4247  018D  00B7               	movwf	_scan
  4248  018E  0008               	return
  4249  018F                     i1l1547:	
  4250  018F  0140               	movlb	0	; select bank0
  4251  0190  083A               	movf	_scan+3,w
  4252  0191  00F6               	movwf	??_scanInput
  4253  0192  01F7               	clrf	??_scanInput+1
  4254                           
  4255                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4256                           ; Switch size 1, requested type "simple"
  4257                           ; Number of cases is 1, Range of values is 0 to 0
  4258                           ; switch strategies available:
  4259                           ; Name         Instructions Cycles
  4260                           ; simple_byte            4     3 (average)
  4261                           ; direct_byte            8     6 (fixed)
  4262                           ; jumptable            260     6 (fixed)
  4263                           ;	Chosen strategy is simple_byte
  4264  0193  0877               	movf	??_scanInput+1,w
  4265  0194  3A00               	xorlw	0	; case 0
  4266  0195  1903               	skipnz
  4267  0196  2998               	goto	i1l2107
  4268  0197  29A3               	goto	i1l457
  4269  0198                     i1l2107:	
  4270                           
  4271                           ; Switch size 1, requested type "simple"
  4272                           ; Number of cases is 3, Range of values is 0 to 2
  4273                           ; switch strategies available:
  4274                           ; Name         Instructions Cycles
  4275                           ; simple_byte           10     6 (average)
  4276                           ; direct_byte           12     6 (fixed)
  4277                           ; jumptable            260     6 (fixed)
  4278                           ;	Chosen strategy is simple_byte
  4279  0198  0876               	movf	??_scanInput,w
  4280  0199  3A00               	xorlw	0	; case 0
  4281  019A  1903               	skipnz
  4282  019B  296A               	goto	i1l446
  4283  019C  3A01               	xorlw	1	; case 1
  4284  019D  1903               	skipnz
  4285  019E  2973               	goto	i1l449
  4286  019F  3A03               	xorlw	3	; case 2
  4287  01A0  1903               	skipnz
  4288  01A1  2988               	goto	i1l453
  4289  01A2  29A3               	goto	i1l457
  4290  01A3                     i1l457:	
  4291  01A3  0008               	return
  4292  01A4                     __end_of_scanInput:	
  4293                           
  4294                           	psect	text22
  4295  01F7                     __ptext22:	
  4296 ;; *************** function _EUSART1_Transmit_ISR *****************
  4297 ;; Defined at:
  4298 ;;		line 206 in file "mcc_generated_files/eusart1.c"
  4299 ;; Parameters:    Size  Location     Type
  4300 ;;		None
  4301 ;; Auto vars:     Size  Location     Type
  4302 ;;		None
  4303 ;; Return value:  Size  Location     Type
  4304 ;;                  1    wreg      void 
  4305 ;; Registers used:
  4306 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4307 ;; Tracked objects:
  4308 ;;		On entry : 0/0
  4309 ;;		On exit  : 0/0
  4310 ;;		Unchanged: 0/0
  4311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4314 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4315 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4316 ;;Total ram usage:        1 bytes
  4317 ;; Hardware stack levels used:    1
  4318 ;; This function calls:
  4319 ;;		Nothing
  4320 ;; This function is called by:
  4321 ;;		_EUSART1_Initialize
  4322 ;;		_INTERRUPT_InterruptManager
  4323 ;; This function uses a non-reentrant model
  4324 ;;
  4325                           
  4326                           
  4327                           ;psect for function _EUSART1_Transmit_ISR
  4328  01F7                     _EUSART1_Transmit_ISR:	
  4329                           
  4330                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  4331                           
  4332                           ;incstack = 0
  4333                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  4334  01F7  3040               	movlw	64
  4335  01F8  027B               	subwf	_eusart1TxBufferRemaining,w	;volatile
  4336  01F9  1803               	skipnc
  4337  01FA  2A0F               	goto	i1l320
  4338                           
  4339                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
  4340  01FB  0874               	movf	_eusart1TxTail,w
  4341  01FC  3EA0               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
  4342  01FD  0086               	movwf	6
  4343  01FE  0187               	clrf	7
  4344  01FF  0801               	movf	1,w
  4345  0200  0142               	movlb	2	; select bank2
  4346  0201  009A               	movwf	26	;volatile
  4347  0202  3001               	movlw	1
  4348  0203  00F6               	movwf	??_EUSART1_Transmit_ISR
  4349  0204  0876               	movf	??_EUSART1_Transmit_ISR,w
  4350  0205  07F4               	addwf	_eusart1TxTail,f	;volatile
  4351                           
  4352                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  4353  0206  3040               	movlw	64
  4354  0207  0274               	subwf	_eusart1TxTail,w	;volatile
  4355  0208  1803               	btfsc	3,0
  4356                           
  4357                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
  4358  0209  01F4               	clrf	_eusart1TxTail	;volatile
  4359                           
  4360                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
  4361  020A  3001               	movlw	1
  4362  020B  00F6               	movwf	??_EUSART1_Transmit_ISR
  4363  020C  0876               	movf	??_EUSART1_Transmit_ISR,w
  4364  020D  07FB               	addwf	_eusart1TxBufferRemaining,f	;volatile
  4365                           
  4366                           ;mcc_generated_files/eusart1.c: 218:     }
  4367  020E  0008               	return
  4368  020F                     i1l320:	
  4369                           ;mcc_generated_files/eusart1.c: 219:     else
  4370                           
  4371                           
  4372                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE3bits.TX1IE = 0;
  4373  020F  014E               	movlb	14	; select bank14
  4374  0210  1219               	bcf	25,4	;volatile
  4375  0211  0008               	return
  4376  0212                     __end_of_EUSART1_Transmit_ISR:	
  4377                           
  4378                           	psect	text23
  4379  01A4                     __ptext23:	
  4380 ;; *************** function _EUSART1_Receive_ISR *****************
  4381 ;; Defined at:
  4382 ;;		line 225 in file "mcc_generated_files/eusart1.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;		None
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;		None
  4387 ;; Return value:  Size  Location     Type
  4388 ;;                  1    wreg      void 
  4389 ;; Registers used:
  4390 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4391 ;; Tracked objects:
  4392 ;;		On entry : 0/0
  4393 ;;		On exit  : 0/0
  4394 ;;		Unchanged: 0/0
  4395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4400 ;;Total ram usage:        0 bytes
  4401 ;; Hardware stack levels used:    1
  4402 ;; Hardware stack levels required when called:    2
  4403 ;; This function calls:
  4404 ;;		Absolute function
  4405 ;;		_EUSART1_DefaultErrorHandler
  4406 ;;		_EUSART1_DefaultFramingErrorHandler
  4407 ;;		_EUSART1_DefaultOverrunErrorHandler
  4408 ;;		_EUSART1_RxDataHandler
  4409 ;; This function is called by:
  4410 ;;		_EUSART1_Initialize
  4411 ;;		_INTERRUPT_InterruptManager
  4412 ;; This function uses a non-reentrant model
  4413 ;;
  4414                           
  4415                           
  4416                           ;psect for function _EUSART1_Receive_ISR
  4417  01A4                     _EUSART1_Receive_ISR:	
  4418                           
  4419                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  4420                           
  4421                           ;incstack = 0
  4422                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4423  01A4  0873               	movf	_eusart1RxHead,w	;volatile
  4424  01A5  3E20               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
  4425  01A6  0086               	movwf	6
  4426  01A7  0187               	clrf	7
  4427  01A8  0181               	clrf	1
  4428                           
  4429                           ;mcc_generated_files/eusart1.c: 230:     if(RC1STAbits.FERR){
  4430  01A9  0142               	movlb	2	; select bank2
  4431  01AA  1D1D               	btfss	29,2	;volatile
  4432  01AB  29B7               	goto	i1l1769
  4433                           
  4434                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  4435  01AC  0873               	movf	_eusart1RxHead,w	;volatile
  4436  01AD  3E20               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
  4437  01AE  0086               	movwf	6
  4438  01AF  0187               	clrf	7
  4439  01B0  1481               	bsf	1,1
  4440                           
  4441                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
  4442  01B1  0140               	movlb	0	; select bank0
  4443  01B2  0841               	movf	_EUSART1_FramingErrorHandler+1,w
  4444  01B3  008A               	movwf	10
  4445  01B4  0840               	movf	_EUSART1_FramingErrorHandler,w
  4446  01B5  000A               	callw
  4447  01B6  3181               	pagesel	$
  4448  01B7                     i1l1769:	
  4449                           
  4450                           ;mcc_generated_files/eusart1.c: 235:     if(RC1STAbits.OERR){
  4451  01B7  0142               	movlb	2	; select bank2
  4452  01B8  1C9D               	btfss	29,1	;volatile
  4453  01B9  29C5               	goto	i1l1775
  4454                           
  4455                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  4456  01BA  0873               	movf	_eusart1RxHead,w	;volatile
  4457  01BB  3E20               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
  4458  01BC  0086               	movwf	6
  4459  01BD  0187               	clrf	7
  4460  01BE  1501               	bsf	1,2
  4461                           
  4462                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
  4463  01BF  0140               	movlb	0	; select bank0
  4464  01C0  083F               	movf	_EUSART1_OverrunErrorHandler+1,w
  4465  01C1  008A               	movwf	10
  4466  01C2  083E               	movf	_EUSART1_OverrunErrorHandler,w
  4467  01C3  000A               	callw
  4468  01C4  3181               	pagesel	$
  4469  01C5                     i1l1775:	
  4470                           
  4471                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  4472  01C5  0873               	movf	_eusart1RxHead,w	;volatile
  4473  01C6  3E20               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
  4474  01C7  0086               	movwf	6
  4475  01C8  0187               	clrf	7
  4476  01C9  0801               	movf	1,w
  4477  01CA  1903               	btfsc	3,2
  4478  01CB  29D3               	goto	i1l1779
  4479                           
  4480                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
  4481  01CC  0140               	movlb	0	; select bank0
  4482  01CD  083D               	movf	_EUSART1_ErrorHandler+1,w
  4483  01CE  008A               	movwf	10
  4484  01CF  083C               	movf	_EUSART1_ErrorHandler,w
  4485  01D0  000A               	callw
  4486  01D1  3181               	pagesel	$
  4487                           
  4488                           ;mcc_generated_files/eusart1.c: 242:     } else {
  4489  01D2  0008               	return
  4490  01D3                     i1l1779:	
  4491                           
  4492                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
  4493  01D3  3182  2212         	fcall	_EUSART1_RxDataHandler
  4494  01D5  0008               	return
  4495  01D6                     __end_of_EUSART1_Receive_ISR:	
  4496                           
  4497                           	psect	text24
  4498  02BF                     __ptext24:	
  4499 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  4500 ;; Defined at:
  4501 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  4502 ;; Parameters:    Size  Location     Type
  4503 ;;		None
  4504 ;; Auto vars:     Size  Location     Type
  4505 ;;		None
  4506 ;; Return value:  Size  Location     Type
  4507 ;;                  1    wreg      void 
  4508 ;; Registers used:
  4509 ;;		None
  4510 ;; Tracked objects:
  4511 ;;		On entry : 0/0
  4512 ;;		On exit  : 0/0
  4513 ;;		Unchanged: 0/0
  4514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4519 ;;Total ram usage:        0 bytes
  4520 ;; Hardware stack levels used:    1
  4521 ;; This function calls:
  4522 ;;		Nothing
  4523 ;; This function is called by:
  4524 ;;		_EUSART1_Initialize
  4525 ;;		_EUSART1_Receive_ISR
  4526 ;; This function uses a non-reentrant model
  4527 ;;
  4528                           
  4529                           
  4530                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
  4531  02BF                     _EUSART1_DefaultOverrunErrorHandler:	
  4532                           
  4533                           ;mcc_generated_files/eusart1.c: 264:     RC1STAbits.CREN = 0;
  4534                           
  4535                           ;incstack = 0
  4536                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
  4537  02BF  0142               	movlb	2	; select bank2
  4538  02C0  121D               	bcf	29,4	;volatile
  4539                           
  4540                           ;mcc_generated_files/eusart1.c: 265:     RC1STAbits.CREN = 1;
  4541  02C1  161D               	bsf	29,4	;volatile
  4542  02C2  0008               	return
  4543  02C3                     __end_of_EUSART1_DefaultOverrunErrorHandler:	
  4544                           
  4545                           	psect	text25
  4546  02C7                     __ptext25:	
  4547 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  4548 ;; Defined at:
  4549 ;;		line 259 in file "mcc_generated_files/eusart1.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;		None
  4552 ;; Auto vars:     Size  Location     Type
  4553 ;;		None
  4554 ;; Return value:  Size  Location     Type
  4555 ;;                  1    wreg      void 
  4556 ;; Registers used:
  4557 ;;		None
  4558 ;; Tracked objects:
  4559 ;;		On entry : 0/0
  4560 ;;		On exit  : 0/0
  4561 ;;		Unchanged: 0/0
  4562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4567 ;;Total ram usage:        0 bytes
  4568 ;; Hardware stack levels used:    1
  4569 ;; This function calls:
  4570 ;;		Nothing
  4571 ;; This function is called by:
  4572 ;;		_EUSART1_Initialize
  4573 ;;		_EUSART1_Receive_ISR
  4574 ;; This function uses a non-reentrant model
  4575 ;;
  4576                           
  4577                           
  4578                           ;psect for function _EUSART1_DefaultFramingErrorHandler
  4579  02C7                     _EUSART1_DefaultFramingErrorHandler:	
  4580                           
  4581                           ;incstack = 0
  4582                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
  4583  02C7  0008               	return
  4584  02C8                     __end_of_EUSART1_DefaultFramingErrorHandler:	
  4585                           
  4586                           	psect	text26
  4587  02C3                     __ptext26:	
  4588 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  4589 ;; Defined at:
  4590 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;		None
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;		None
  4595 ;; Return value:  Size  Location     Type
  4596 ;;                  1    wreg      void 
  4597 ;; Registers used:
  4598 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4599 ;; Tracked objects:
  4600 ;;		On entry : 0/0
  4601 ;;		On exit  : 0/0
  4602 ;;		Unchanged: 0/0
  4603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4608 ;;Total ram usage:        0 bytes
  4609 ;; Hardware stack levels used:    1
  4610 ;; Hardware stack levels required when called:    1
  4611 ;; This function calls:
  4612 ;;		_EUSART1_RxDataHandler
  4613 ;; This function is called by:
  4614 ;;		_EUSART1_Initialize
  4615 ;;		_EUSART1_Receive_ISR
  4616 ;; This function uses a non-reentrant model
  4617 ;;
  4618                           
  4619                           
  4620                           ;psect for function _EUSART1_DefaultErrorHandler
  4621  02C3                     _EUSART1_DefaultErrorHandler:	
  4622                           
  4623                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
  4624                           
  4625                           ;incstack = 0
  4626                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  4627  02C3  3182  2212         	fcall	_EUSART1_RxDataHandler
  4628  02C5  0008               	return
  4629  02C6                     __end_of_EUSART1_DefaultErrorHandler:	
  4630                           
  4631                           	psect	text27
  4632  0212                     __ptext27:	
  4633 ;; *************** function _EUSART1_RxDataHandler *****************
  4634 ;; Defined at:
  4635 ;;		line 249 in file "mcc_generated_files/eusart1.c"
  4636 ;; Parameters:    Size  Location     Type
  4637 ;;		None
  4638 ;; Auto vars:     Size  Location     Type
  4639 ;;		None
  4640 ;; Return value:  Size  Location     Type
  4641 ;;                  1    wreg      void 
  4642 ;; Registers used:
  4643 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4644 ;; Tracked objects:
  4645 ;;		On entry : 0/0
  4646 ;;		On exit  : 0/0
  4647 ;;		Unchanged: 0/0
  4648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4651 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4652 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4653 ;;Total ram usage:        1 bytes
  4654 ;; Hardware stack levels used:    1
  4655 ;; This function calls:
  4656 ;;		Nothing
  4657 ;; This function is called by:
  4658 ;;		_EUSART1_Receive_ISR
  4659 ;;		_EUSART1_DefaultErrorHandler
  4660 ;; This function uses a non-reentrant model
  4661 ;;
  4662                           
  4663                           
  4664                           ;psect for function _EUSART1_RxDataHandler
  4665  0212                     _EUSART1_RxDataHandler:	
  4666                           
  4667                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
  4668                           
  4669                           ;incstack = 0
  4670                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  4671  0212  0142               	movlb	2	; select bank2
  4672  0213  0819               	movf	25,w	;volatile
  4673  0214  00F6               	movwf	??_EUSART1_RxDataHandler
  4674  0215  0873               	movf	_eusart1RxHead,w
  4675  0216  3E28               	addlw	(low (_eusart1RxBuffer| 0))& (0+255)
  4676  0217  0086               	movwf	6
  4677  0218  0187               	clrf	7
  4678  0219  0876               	movf	??_EUSART1_RxDataHandler,w
  4679  021A  0081               	movwf	1
  4680  021B  3001               	movlw	1
  4681  021C  00F6               	movwf	??_EUSART1_RxDataHandler
  4682  021D  0876               	movf	??_EUSART1_RxDataHandler,w
  4683  021E  07F3               	addwf	_eusart1RxHead,f	;volatile
  4684                           
  4685                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  4686  021F  3008               	movlw	8
  4687  0220  0273               	subwf	_eusart1RxHead,w	;volatile
  4688  0221  1803               	btfsc	3,0
  4689                           
  4690                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
  4691  0222  01F3               	clrf	_eusart1RxHead	;volatile
  4692                           
  4693                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
  4694  0223  3001               	movlw	1
  4695  0224  00F6               	movwf	??_EUSART1_RxDataHandler
  4696  0225  0876               	movf	??_EUSART1_RxDataHandler,w
  4697  0226  07F1               	addwf	_eusart1RxCount,f	;volatile
  4698  0227  0008               	return
  4699  0228                     __end_of_EUSART1_RxDataHandler:	
  4700  007E                     btemp	set	126	;btemp
  4701  007E                     int$flags	set	126
  4702  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    4
    Data        0
    BSS         98
    Persistent  45
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      12
    BANK0            80      2      42
    BANK1            80      0      64
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), Absolute function(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> isr_1ms(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> isr_1ms(), Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _SYSTEM_Initialize->_EUSART1_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _isr_1ms->_scanInput
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     860
                                              0 BANK0      2     2      0
                  _SYSTEM_Initialize
           _TMR2_SetInterruptHandler
                       _countTargets
                         _resetEdges
                           _setState
 ---------------------------------------------------------------------------------
 (1) _setState                                             2     2      0      22
                                              2 COMMON     2     2      0
                         _resetEdges
 ---------------------------------------------------------------------------------
 (2) _resetEdges                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _countTargets                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     664
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   1     1      0     490
                                              4 COMMON     1     1      0
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0       0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR2_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                            _isr_1ms *
 ---------------------------------------------------------------------------------
 (7) _isr_1ms                                              0     0      0       0
                          _scanInput
 ---------------------------------------------------------------------------------
 (8) _scanInput                                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultErrorHandler                          0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART1_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _countTargets
   _resetEdges
   _setState
     _resetEdges

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR2_ISR *
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
       _isr_1ms *
         _scanInput

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      76       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2      2A       6       52.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      40       8       80.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      76      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Jul 17 21:20:17 2019

              __end_of_TMR2_SetInterruptHandler 0298                        _eusart1TxBufferRemaining 007B  
                                   __CFG_CP$OFF 0000                                             l404 0051  
                                           l413 006D                                             l422 0085  
                                           _PR2 028D                         __size_of_PMD_Initialize 0008  
                               _TMR2_Initialize 0228                                    __CFG_BORV$LO 0000  
                                           wreg 0009                                   __CFG_BBEN$OFF 0000  
                                  __CFG_LVP$OFF 0000                                    __CFG_ZCD$OFF 0000  
                                          l2001 00AE                                            l2015 0067  
                                          l2105 00BF                                            l2025 0078  
                                          l2017 0069                                            l2051 00A1  
                                          l2045 0094                                            l2055 00AA  
                                          l1811 00F5                                            l1803 00E9  
                                          l1831 0113                                            l1823 0107  
                                          l1815 00FB                                            l1807 00EF  
                                          l1843 0125                                            l1835 0119  
                                          l1827 010D                                            l1819 0101  
                                          l1839 011F                                            l1791 00D7  
                                          l1795 00DD                                            l1799 00E3  
                                          _LATA 0018                                            _LATB 0019  
                                          _LATC 001A                                            _T2PR 028D  
                                          _PMD0 0796                                            _PMD1 0797  
                                          _PMD2 0798                                            _PMD3 0799  
                                          _PMD4 079A                                            _PMD5 079B  
                                          _TMR2 028C                                            _WPUA 1F39  
                                          _WPUB 1F44                                            _WPUC 1F4F  
                                 __CFG_FCMEN$ON 0000                                            _main 003F  
                                          _scan 0037                                            fsr0h 0005  
                                          fsr1h 0007                                            indf0 0000  
                                          fsr0l 0004                                            indf1 0001  
                                          fsr1l 0006                                            btemp 007E  
                                 __CFG_BOREN$ON 0000                                            start 0024  
                                 __CFG_CSWEN$ON 0000                  __size_of_OSCILLATOR_Initialize 000A  
                 __end_of_OSCILLATOR_Initialize 0275                           _eusart1RxStatusBuffer 0020  
                                         ?_main 0076                                   __CFG_WDTE$OFF 0000  
                                         _T2CON 028E                                           _T2HLT 028F  
                                         i1l110 001D                                           i1l115 0022  
                                         i1l108 0013                                           _T2TMR 028C  
                                         i1l320 020F                                           _T2RST 0291  
                                         i1l453 0188                                           i1l446 016A  
                                         i1l449 0173                                           i1l457 01A3  
                                         _OSCEN 0891                                           _TRISA 0012  
                                         _TRISB 0013                                           _TRISC 0014  
                                 ?_countTargets 0076                                   __CFG_PWRTE$ON 0000  
                          _EUSART1_Transmit_ISR 01F7                                __end_of_TMR2_ISR 02BB  
                                 __CFG_WRTB$OFF 0000                                   __CFG_WRTC$OFF 0000  
                               __end_of_isr_1ms 0251                                           pclath 000A  
                                         status 0003                                           wtemp0 007E  
    __end_of_EUSART1_DefaultFramingErrorHandler 02C8     __size_of_EUSART1_DefaultFramingErrorHandler 0001  
          ??_EUSART1_DefaultFramingErrorHandler 0076             ?_EUSART1_DefaultFramingErrorHandler 0076  
            _EUSART1_DefaultFramingErrorHandler 02C7                                  __CFG_MCLRE$OFF 0000  
                               __initialization 0026                      __end_of_EUSART1_Initialize 0169  
                                  __end_of_main 00CE                                  __CFG_SAFEN$OFF 0000  
                       __end_of_TMR2_Initialize 023D                     ?_INTERRUPT_InterruptManager 0076  
                      _TMR2_SetInterruptHandler 0292                                          ??_main 0048  
                                ??_countTargets 0078                           ?_EUSART1_Transmit_ISR 0076  
                                        _ANSELA 1F38                                          _ANSELB 1F43  
                                        _ANSELC 1F4E                              __CFG_RSTOSC$HFINT1 0000  
                                        _RC1REG 0119                                          _RA2PPS 1F12  
                                        _RC1STA 011D                                          i1l2107 0198  
                                        _ODCONA 1F3A                                          _ODCONB 1F45  
                                        _ODCONC 1F50                                          i1l1537 0186  
                                        i1l1539 0182                                          i1l1547 018F  
                                        i1l1583 024B                                          i1l1775 01C5  
                                        i1l1769 01B7                                          i1l1779 01D3  
                                __CFG_WDTCCS$SC 0000                                          _INLVLA 1F3C  
                                        _INLVLB 1F47                                          _INLVLC 1F52  
                                        _OSCFRQ 0893                                          _TX1REG 011A  
                                        _TX1STA 011E                                  __CFG_STVREN$ON 0000  
                      ?_EUSART1_SetErrorHandler 0078                                          _target 0030  
              ??_EUSART1_SetOverrunErrorHandler 007A                 ?_EUSART1_SetOverrunErrorHandler 0078  
                              __end_of_setState 027E                                  _PMD_Initialize 027E  
                                     ??_isr_1ms 0078        TMR2_SetInterruptHandler@InterruptHandler 0078  
                               _eusart1RxBuffer 0028                                 _eusart1TxBuffer 00A0  
                             _SYSTEM_Initialize 0251                         __end_of__initialization 003B  
                         __end_of_TMR2_CallBack 026B                              ?_SYSTEM_Initialize 0076  
                __size_of_EUSART1_RxDataHandler 0016                   __end_of_EUSART1_RxDataHandler 0228  
                                __pcstackCOMMON 0076                             ??_SYSTEM_Initialize 007B  
                                     ?_TMR2_ISR 0076                                ?_TMR2_Initialize 0076  
                        __end_of_PMD_Initialize 0286                          ??_EUSART1_Transmit_ISR 0076  
                   __end_of_EUSART1_Receive_ISR 01D6                       __end_of_SYSTEM_Initialize 0260  
                                 _eusart1RxHead 0073                                   _eusart1TxHead 0075  
                                 _eusart1RxTail 0072                                      __pbssBANK0 0020  
                                    __pbssBANK1 00A0                                   _eusart1TxTail 0074  
             _EUSART1_TxDefaultInterruptHandler 0044                 ??_EUSART1_SetRxInterruptHandler 007A  
                                    __pnvCOMMON 007B                            __end_of_countTargets 012C  
                            __size_of_scanInput 003B                 __end_of_EUSART1_SetErrorHandler 02B6  
                                    __pmaintext 003F                                 __CFG_PPS1WAY$ON 0000  
                                    ??_TMR2_ISR 0078                                      __pintentry 0004  
                               ?_PMD_Initialize 0076          __end_of_EUSART1_SetFramingErrorHandler 02B0  
       __size_of_EUSART1_SetFramingErrorHandler 0006                  _EUSART1_SetFramingErrorHandler 02AA  
                  ?_EUSART1_DefaultErrorHandler 0076                                         _SP1BRGH 011C  
                                       _SP1BRGL 011B                                         _OSCCON1 088D  
                                       _OSCCON3 088F                                         _OSCSTAT 0890  
                                       _OSCTUNE 0892                                         _SLRCONA 1F3B  
                                       _SLRCONB 1F46                                         _SLRCONC 1F51  
                                     ?_setState 0076                      ??_TMR2_SetInterruptHandler 007A  
                                       __ptext1 0275                                         __ptext2 028C  
                                       __ptext3 00CE                                         __ptext4 0251  
                                       __ptext5 0228                                         __ptext6 0292  
                                       __ptext7 027E                                         __ptext8 01D6  
                                       __ptext9 026B                                 __CFG_WRTAPP$OFF 0000  
                         _OSCILLATOR_Initialize 026B                                       _T2CONbits 028E  
                                       _isr_1ms 023D                               __end_of_scanInput 01A4  
                            _EUSART1_Initialize 012C                        ??_PIN_MANAGER_Initialize 0078  
                                     _T2HLTbits 028F                                 __CFG_WRTSAF$OFF 0000  
                 ??_EUSART1_DefaultErrorHandler 0077                      __size_of_SYSTEM_Initialize 000F  
                                       clrloop0 0287                            end_of_initialization 003B  
                                     _T2RSTbits 0291                             ?_EUSART1_Initialize 0076  
                   _EUSART1_OverrunErrorHandler 003E                                      _resetEdges 028C  
         __end_of_EUSART1_SetRxInterruptHandler 02A4          __size_of_EUSART1_SetRxInterruptHandler 0006  
                 _EUSART1_SetRxInterruptHandler 029E                                      ??_setState 0078  
                          ??_EUSART1_Initialize 007A                           __CFG_WDTCPS$WDTCPS_31 0000  
                                     _PORTAbits 000C                                       _PORTBbits 000D  
                                     _PORTCbits 000E                                       _TRISAbits 0012  
                                    _stateTable 02BB                __size_of_EUSART1_SetErrorHandler 0006  
                              __CFG_FEXTOSC$OFF 0000                           __size_of_countTargets 005E  
          __size_of_EUSART1_DefaultErrorHandler 0003            __end_of_TMR2_DefaultInterruptHandler 02C7  
         __size_of_TMR2_DefaultInterruptHandler 0001                    _TMR2_DefaultInterruptHandler 02C6  
                             __size_of_TMR2_ISR 0005                          ?_OSCILLATOR_Initialize 0076  
                                  _countTargets 00CE                             start_initialization 0026  
               __size_of_PIN_MANAGER_Initialize 0021   EUSART1_SetRxInterruptHandler@interruptHandler 0078  
 EUSART1_SetTxInterruptHandler@interruptHandler 0078                                     ?_resetEdges 0076  
                              __CFG_LPBOREN$OFF 0000                                ??_PMD_Initialize 0078  
                         _EUSART1_RxDataHandler 0212                  ?_EUSART1_SetRxInterruptHandler 0078  
                 ?_TMR2_DefaultInterruptHandler 0076                                  _eusart1RxCount 0071  
                        __size_of_TMR2_CallBack 000B                                     __pbssCOMMON 0070  
             _EUSART1_RxDefaultInterruptHandler 0042                                       ___latbits 0002  
                 __size_of_EUSART1_Transmit_ISR 001B                                   __pcstackBANK0 0048  
                      __size_of_TMR2_Initialize 0015                 ??_EUSART1_SetTxInterruptHandler 007A  
              ??_EUSART1_SetFramingErrorHandler 007A                 ?_EUSART1_SetFramingErrorHandler 0078  
                  __size_of_EUSART1_Receive_ISR 0032                                       __pnvBANK0 003C  
                        _PIN_MANAGER_Initialize 01D6                               __size_of_setState 0009  
                  ??_INTERRUPT_InterruptManager 0078                                        _BAUD1CON 011F  
                                      ?_isr_1ms 0076      __end_of_EUSART1_DefaultOverrunErrorHandler 02C3  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0004            ??_EUSART1_DefaultOverrunErrorHandler 0076  
           ?_EUSART1_DefaultOverrunErrorHandler 0076              _EUSART1_DefaultOverrunErrorHandler 02BF  
                           __size_of_resetEdges 0006                            _EUSART1_ErrorHandler 003C  
                       _EUSART1_SetErrorHandler 02B0                                        _T2CLKCON 0290  
                                     _scanInput 0169                                        _LATAbits 0018  
       EUSART1_SetErrorHandler@interruptHandler 0078                                       clear_ram0 0286  
                                 _TMR2_CallBack 0260                                        _PIE3bits 0719  
                                      _PIE4bits 071A             __size_of_INTERRUPT_InterruptManager 0020  
                                      _PIR3bits 070F                                        _PIR4bits 0710  
                        ?_EUSART1_RxDataHandler 0076                               __CFG_BBSIZE$BB512 0000  
                                      _TMR2_ISR 02B6                  ??_TMR2_DefaultInterruptHandler 0076  
             __size_of_TMR2_SetInterruptHandler 0006                       ?_TMR2_SetInterruptHandler 0078  
                                    ?_scanInput 0076                               ??_TMR2_Initialize 007A  
                                ?_TMR2_CallBack 0076           __end_of_EUSART1_SetTxInterruptHandler 029E  
        __size_of_EUSART1_SetTxInterruptHandler 0006                   _EUSART1_SetTxInterruptHandler 0298  
                       ??_OSCILLATOR_Initialize 0078                     __size_of_EUSART1_Initialize 003D  
                     ??_EUSART1_SetErrorHandler 007A             __end_of_EUSART1_DefaultErrorHandler 02C6  
                   _EUSART1_DefaultErrorHandler 02C3                                __size_of_isr_1ms 0014  
                                      __ptext10 012C                                        __ptext11 0298  
                                      __ptext20 023D                                        __ptext12 029E  
                                      __ptext21 0169                                        __ptext13 02A4  
                                      __ptext22 01F7                                        __ptext14 02AA  
                                      __ptext23 01A4                                        __ptext15 02B0  
                                      __ptext24 02BF                                        __ptext25 02C7  
                                      __ptext17 02B6                                        __ptext26 02C3  
                                      __ptext18 0260                                        __ptext27 0212  
                                      __ptext19 02C6                                       setState@s 0079  
                                 __size_of_main 008F                                    ??_resetEdges 0078  
                          __CFG_WDTCWS$WDTCWS_7 0000                                        _setState 0275  
                                    _RC1STAbits 011D  EUSART1_SetOverrunErrorHandler@interruptHandler 0078  
                                      int$flags 007E              __end_of_INTERRUPT_InterruptManager 0024  
                    _INTERRUPT_InterruptManager 0004                     _EUSART1_FramingErrorHandler 0040  
                           _EUSART1_Receive_ISR 01A4                                      _INTCONbits 000B  
                            __end_of_resetEdges 0292                                     ??_scanInput 0076  
                                      intlevel1 0000                                 ??_TMR2_CallBack 0078  
                          ?_EUSART1_Receive_ISR 0076                         ?_PIN_MANAGER_Initialize 0076  
                             __CFG_CLKOUTEN$OFF 0000          __end_of_EUSART1_SetOverrunErrorHandler 02AA  
       __size_of_EUSART1_SetOverrunErrorHandler 0006                  _EUSART1_SetOverrunErrorHandler 02A4  
                  __end_of_EUSART1_Transmit_ISR 0212  EUSART1_SetFramingErrorHandler@interruptHandler 0078  
                ?_EUSART1_SetTxInterruptHandler 0078                              __end_of_stateTable 02BF  
                            _eusart1RxLastError 0070                                   __pstringtext1 02BB  
                                    _TX1STAbits 011E                           ??_EUSART1_Receive_ISR 0077  
                __end_of_PIN_MANAGER_Initialize 01F7                           _TMR2_InterruptHandler 0046  
                       ??_EUSART1_RxDataHandler 0076  
