

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Nov 06 07:31:30 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F15345
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,inline,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    43                           	dabs	1,0x7E,2
    44  0000                     
    45                           ; Version 2.20
    46                           ; Generated 09/04/2020 GMT
    47                           ; 
    48                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F15345 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  0006                     	;# 
    86  0007                     	;# 
    87  0008                     	;# 
    88  0009                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000D                     	;# 
    93  000E                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  009B                     	;# 
   101  009B                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  009F                     	;# 
   106  0119                     	;# 
   107  0119                     	;# 
   108  0119                     	;# 
   109  011A                     	;# 
   110  011A                     	;# 
   111  011A                     	;# 
   112  011B                     	;# 
   113  011B                     	;# 
   114  011B                     	;# 
   115  011B                     	;# 
   116  011B                     	;# 
   117  011C                     	;# 
   118  011C                     	;# 
   119  011C                     	;# 
   120  011D                     	;# 
   121  011D                     	;# 
   122  011D                     	;# 
   123  011E                     	;# 
   124  011E                     	;# 
   125  011E                     	;# 
   126  011F                     	;# 
   127  011F                     	;# 
   128  011F                     	;# 
   129  011F                     	;# 
   130  011F                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  018E                     	;# 
   134  018F                     	;# 
   135  0190                     	;# 
   136  0191                     	;# 
   137  0192                     	;# 
   138  020C                     	;# 
   139  020C                     	;# 
   140  020D                     	;# 
   141  020E                     	;# 
   142  020F                     	;# 
   143  020F                     	;# 
   144  0210                     	;# 
   145  0210                     	;# 
   146  0211                     	;# 
   147  0211                     	;# 
   148  028C                     	;# 
   149  028C                     	;# 
   150  028D                     	;# 
   151  028D                     	;# 
   152  028E                     	;# 
   153  028F                     	;# 
   154  0290                     	;# 
   155  0291                     	;# 
   156  030C                     	;# 
   157  030C                     	;# 
   158  030D                     	;# 
   159  030E                     	;# 
   160  030F                     	;# 
   161  0310                     	;# 
   162  0310                     	;# 
   163  0311                     	;# 
   164  0312                     	;# 
   165  0313                     	;# 
   166  0314                     	;# 
   167  0314                     	;# 
   168  0315                     	;# 
   169  0316                     	;# 
   170  0318                     	;# 
   171  0318                     	;# 
   172  0319                     	;# 
   173  031A                     	;# 
   174  031C                     	;# 
   175  031C                     	;# 
   176  031D                     	;# 
   177  031E                     	;# 
   178  038C                     	;# 
   179  038C                     	;# 
   180  038D                     	;# 
   181  038E                     	;# 
   182  058C                     	;# 
   183  058C                     	;# 
   184  058D                     	;# 
   185  058E                     	;# 
   186  058F                     	;# 
   187  058F                     	;# 
   188  0590                     	;# 
   189  0591                     	;# 
   190  0592                     	;# 
   191  0593                     	;# 
   192  059C                     	;# 
   193  059C                     	;# 
   194  059D                     	;# 
   195  059D                     	;# 
   196  059E                     	;# 
   197  059F                     	;# 
   198  060C                     	;# 
   199  060D                     	;# 
   200  060E                     	;# 
   201  060F                     	;# 
   202  0610                     	;# 
   203  0611                     	;# 
   204  0612                     	;# 
   205  0613                     	;# 
   206  0614                     	;# 
   207  070C                     	;# 
   208  070D                     	;# 
   209  070E                     	;# 
   210  070F                     	;# 
   211  0710                     	;# 
   212  0711                     	;# 
   213  0712                     	;# 
   214  0713                     	;# 
   215  0716                     	;# 
   216  0717                     	;# 
   217  0718                     	;# 
   218  0719                     	;# 
   219  071A                     	;# 
   220  071B                     	;# 
   221  071C                     	;# 
   222  071D                     	;# 
   223  0796                     	;# 
   224  0797                     	;# 
   225  0798                     	;# 
   226  0799                     	;# 
   227  079A                     	;# 
   228  079B                     	;# 
   229  080C                     	;# 
   230  080D                     	;# 
   231  080E                     	;# 
   232  080F                     	;# 
   233  0810                     	;# 
   234  0811                     	;# 
   235  0812                     	;# 
   236  0813                     	;# 
   237  0814                     	;# 
   238  081A                     	;# 
   239  081A                     	;# 
   240  081B                     	;# 
   241  081C                     	;# 
   242  081C                     	;# 
   243  081D                     	;# 
   244  081E                     	;# 
   245  081F                     	;# 
   246  088C                     	;# 
   247  088D                     	;# 
   248  088E                     	;# 
   249  088F                     	;# 
   250  0890                     	;# 
   251  0891                     	;# 
   252  0892                     	;# 
   253  0893                     	;# 
   254  0895                     	;# 
   255  0896                     	;# 
   256  090C                     	;# 
   257  090E                     	;# 
   258  090F                     	;# 
   259  091F                     	;# 
   260  098F                     	;# 
   261  098F                     	;# 
   262  0990                     	;# 
   263  0991                     	;# 
   264  0992                     	;# 
   265  0993                     	;# 
   266  0994                     	;# 
   267  0995                     	;# 
   268  0996                     	;# 
   269  0997                     	;# 
   270  0A19                     	;# 
   271  0A19                     	;# 
   272  0A1A                     	;# 
   273  0A1A                     	;# 
   274  0A1B                     	;# 
   275  0A1B                     	;# 
   276  0A1B                     	;# 
   277  0A1C                     	;# 
   278  0A1C                     	;# 
   279  0A1D                     	;# 
   280  0A1D                     	;# 
   281  0A1E                     	;# 
   282  0A1E                     	;# 
   283  0A1F                     	;# 
   284  0A1F                     	;# 
   285  0A1F                     	;# 
   286  1E0F                     	;# 
   287  1E10                     	;# 
   288  1E11                     	;# 
   289  1E12                     	;# 
   290  1E13                     	;# 
   291  1E14                     	;# 
   292  1E15                     	;# 
   293  1E16                     	;# 
   294  1E17                     	;# 
   295  1E18                     	;# 
   296  1E19                     	;# 
   297  1E1A                     	;# 
   298  1E1B                     	;# 
   299  1E1C                     	;# 
   300  1E1D                     	;# 
   301  1E1E                     	;# 
   302  1E1F                     	;# 
   303  1E20                     	;# 
   304  1E21                     	;# 
   305  1E22                     	;# 
   306  1E23                     	;# 
   307  1E24                     	;# 
   308  1E25                     	;# 
   309  1E26                     	;# 
   310  1E27                     	;# 
   311  1E28                     	;# 
   312  1E29                     	;# 
   313  1E2A                     	;# 
   314  1E2B                     	;# 
   315  1E2C                     	;# 
   316  1E2D                     	;# 
   317  1E2E                     	;# 
   318  1E2F                     	;# 
   319  1E30                     	;# 
   320  1E31                     	;# 
   321  1E32                     	;# 
   322  1E33                     	;# 
   323  1E34                     	;# 
   324  1E35                     	;# 
   325  1E36                     	;# 
   326  1E37                     	;# 
   327  1E8F                     	;# 
   328  1E90                     	;# 
   329  1E91                     	;# 
   330  1E92                     	;# 
   331  1E93                     	;# 
   332  1E9C                     	;# 
   333  1EA1                     	;# 
   334  1EA2                     	;# 
   335  1EB1                     	;# 
   336  1EBB                     	;# 
   337  1EBC                     	;# 
   338  1EBD                     	;# 
   339  1EBE                     	;# 
   340  1EC3                     	;# 
   341  1EC5                     	;# 
   342  1EC6                     	;# 
   343  1EC7                     	;# 
   344  1ECB                     	;# 
   345  1ECC                     	;# 
   346  1ECD                     	;# 
   347  1ECE                     	;# 
   348  1F10                     	;# 
   349  1F11                     	;# 
   350  1F12                     	;# 
   351  1F13                     	;# 
   352  1F14                     	;# 
   353  1F15                     	;# 
   354  1F1C                     	;# 
   355  1F1D                     	;# 
   356  1F1E                     	;# 
   357  1F1F                     	;# 
   358  1F20                     	;# 
   359  1F21                     	;# 
   360  1F22                     	;# 
   361  1F23                     	;# 
   362  1F24                     	;# 
   363  1F25                     	;# 
   364  1F26                     	;# 
   365  1F27                     	;# 
   366  1F38                     	;# 
   367  1F39                     	;# 
   368  1F3A                     	;# 
   369  1F3B                     	;# 
   370  1F3C                     	;# 
   371  1F3D                     	;# 
   372  1F3E                     	;# 
   373  1F3F                     	;# 
   374  1F43                     	;# 
   375  1F44                     	;# 
   376  1F45                     	;# 
   377  1F46                     	;# 
   378  1F47                     	;# 
   379  1F48                     	;# 
   380  1F49                     	;# 
   381  1F4A                     	;# 
   382  1F4E                     	;# 
   383  1F4F                     	;# 
   384  1F50                     	;# 
   385  1F51                     	;# 
   386  1F52                     	;# 
   387  1F53                     	;# 
   388  1F54                     	;# 
   389  1F55                     	;# 
   390  1FE4                     	;# 
   391  1FE5                     	;# 
   392  1FE6                     	;# 
   393  1FE7                     	;# 
   394  1FE8                     	;# 
   395  1FE8                     	;# 
   396  1FE9                     	;# 
   397  1FEA                     	;# 
   398  1FEA                     	;# 
   399  1FEB                     	;# 
   400  1FED                     	;# 
   401  1FEE                     	;# 
   402  1FEF                     	;# 
   403  0000                     	;# 
   404  0001                     	;# 
   405  0002                     	;# 
   406  0003                     	;# 
   407  0004                     	;# 
   408  0005                     	;# 
   409  0006                     	;# 
   410  0007                     	;# 
   411  0008                     	;# 
   412  0009                     	;# 
   413  000A                     	;# 
   414  000B                     	;# 
   415  000C                     	;# 
   416  000D                     	;# 
   417  000E                     	;# 
   418  0012                     	;# 
   419  0013                     	;# 
   420  0014                     	;# 
   421  0018                     	;# 
   422  0019                     	;# 
   423  001A                     	;# 
   424  009B                     	;# 
   425  009B                     	;# 
   426  009C                     	;# 
   427  009D                     	;# 
   428  009E                     	;# 
   429  009F                     	;# 
   430  0119                     	;# 
   431  0119                     	;# 
   432  0119                     	;# 
   433  011A                     	;# 
   434  011A                     	;# 
   435  011A                     	;# 
   436  011B                     	;# 
   437  011B                     	;# 
   438  011B                     	;# 
   439  011B                     	;# 
   440  011B                     	;# 
   441  011C                     	;# 
   442  011C                     	;# 
   443  011C                     	;# 
   444  011D                     	;# 
   445  011D                     	;# 
   446  011D                     	;# 
   447  011E                     	;# 
   448  011E                     	;# 
   449  011E                     	;# 
   450  011F                     	;# 
   451  011F                     	;# 
   452  011F                     	;# 
   453  011F                     	;# 
   454  011F                     	;# 
   455  018C                     	;# 
   456  018D                     	;# 
   457  018E                     	;# 
   458  018F                     	;# 
   459  0190                     	;# 
   460  0191                     	;# 
   461  0192                     	;# 
   462  020C                     	;# 
   463  020C                     	;# 
   464  020D                     	;# 
   465  020E                     	;# 
   466  020F                     	;# 
   467  020F                     	;# 
   468  0210                     	;# 
   469  0210                     	;# 
   470  0211                     	;# 
   471  0211                     	;# 
   472  028C                     	;# 
   473  028C                     	;# 
   474  028D                     	;# 
   475  028D                     	;# 
   476  028E                     	;# 
   477  028F                     	;# 
   478  0290                     	;# 
   479  0291                     	;# 
   480  030C                     	;# 
   481  030C                     	;# 
   482  030D                     	;# 
   483  030E                     	;# 
   484  030F                     	;# 
   485  0310                     	;# 
   486  0310                     	;# 
   487  0311                     	;# 
   488  0312                     	;# 
   489  0313                     	;# 
   490  0314                     	;# 
   491  0314                     	;# 
   492  0315                     	;# 
   493  0316                     	;# 
   494  0318                     	;# 
   495  0318                     	;# 
   496  0319                     	;# 
   497  031A                     	;# 
   498  031C                     	;# 
   499  031C                     	;# 
   500  031D                     	;# 
   501  031E                     	;# 
   502  038C                     	;# 
   503  038C                     	;# 
   504  038D                     	;# 
   505  038E                     	;# 
   506  058C                     	;# 
   507  058C                     	;# 
   508  058D                     	;# 
   509  058E                     	;# 
   510  058F                     	;# 
   511  058F                     	;# 
   512  0590                     	;# 
   513  0591                     	;# 
   514  0592                     	;# 
   515  0593                     	;# 
   516  059C                     	;# 
   517  059C                     	;# 
   518  059D                     	;# 
   519  059D                     	;# 
   520  059E                     	;# 
   521  059F                     	;# 
   522  060C                     	;# 
   523  060D                     	;# 
   524  060E                     	;# 
   525  060F                     	;# 
   526  0610                     	;# 
   527  0611                     	;# 
   528  0612                     	;# 
   529  0613                     	;# 
   530  0614                     	;# 
   531  070C                     	;# 
   532  070D                     	;# 
   533  070E                     	;# 
   534  070F                     	;# 
   535  0710                     	;# 
   536  0711                     	;# 
   537  0712                     	;# 
   538  0713                     	;# 
   539  0716                     	;# 
   540  0717                     	;# 
   541  0718                     	;# 
   542  0719                     	;# 
   543  071A                     	;# 
   544  071B                     	;# 
   545  071C                     	;# 
   546  071D                     	;# 
   547  0796                     	;# 
   548  0797                     	;# 
   549  0798                     	;# 
   550  0799                     	;# 
   551  079A                     	;# 
   552  079B                     	;# 
   553  080C                     	;# 
   554  080D                     	;# 
   555  080E                     	;# 
   556  080F                     	;# 
   557  0810                     	;# 
   558  0811                     	;# 
   559  0812                     	;# 
   560  0813                     	;# 
   561  0814                     	;# 
   562  081A                     	;# 
   563  081A                     	;# 
   564  081B                     	;# 
   565  081C                     	;# 
   566  081C                     	;# 
   567  081D                     	;# 
   568  081E                     	;# 
   569  081F                     	;# 
   570  088C                     	;# 
   571  088D                     	;# 
   572  088E                     	;# 
   573  088F                     	;# 
   574  0890                     	;# 
   575  0891                     	;# 
   576  0892                     	;# 
   577  0893                     	;# 
   578  0895                     	;# 
   579  0896                     	;# 
   580  090C                     	;# 
   581  090E                     	;# 
   582  090F                     	;# 
   583  091F                     	;# 
   584  098F                     	;# 
   585  098F                     	;# 
   586  0990                     	;# 
   587  0991                     	;# 
   588  0992                     	;# 
   589  0993                     	;# 
   590  0994                     	;# 
   591  0995                     	;# 
   592  0996                     	;# 
   593  0997                     	;# 
   594  0A19                     	;# 
   595  0A19                     	;# 
   596  0A1A                     	;# 
   597  0A1A                     	;# 
   598  0A1B                     	;# 
   599  0A1B                     	;# 
   600  0A1B                     	;# 
   601  0A1C                     	;# 
   602  0A1C                     	;# 
   603  0A1D                     	;# 
   604  0A1D                     	;# 
   605  0A1E                     	;# 
   606  0A1E                     	;# 
   607  0A1F                     	;# 
   608  0A1F                     	;# 
   609  0A1F                     	;# 
   610  1E0F                     	;# 
   611  1E10                     	;# 
   612  1E11                     	;# 
   613  1E12                     	;# 
   614  1E13                     	;# 
   615  1E14                     	;# 
   616  1E15                     	;# 
   617  1E16                     	;# 
   618  1E17                     	;# 
   619  1E18                     	;# 
   620  1E19                     	;# 
   621  1E1A                     	;# 
   622  1E1B                     	;# 
   623  1E1C                     	;# 
   624  1E1D                     	;# 
   625  1E1E                     	;# 
   626  1E1F                     	;# 
   627  1E20                     	;# 
   628  1E21                     	;# 
   629  1E22                     	;# 
   630  1E23                     	;# 
   631  1E24                     	;# 
   632  1E25                     	;# 
   633  1E26                     	;# 
   634  1E27                     	;# 
   635  1E28                     	;# 
   636  1E29                     	;# 
   637  1E2A                     	;# 
   638  1E2B                     	;# 
   639  1E2C                     	;# 
   640  1E2D                     	;# 
   641  1E2E                     	;# 
   642  1E2F                     	;# 
   643  1E30                     	;# 
   644  1E31                     	;# 
   645  1E32                     	;# 
   646  1E33                     	;# 
   647  1E34                     	;# 
   648  1E35                     	;# 
   649  1E36                     	;# 
   650  1E37                     	;# 
   651  1E8F                     	;# 
   652  1E90                     	;# 
   653  1E91                     	;# 
   654  1E92                     	;# 
   655  1E93                     	;# 
   656  1E9C                     	;# 
   657  1EA1                     	;# 
   658  1EA2                     	;# 
   659  1EB1                     	;# 
   660  1EBB                     	;# 
   661  1EBC                     	;# 
   662  1EBD                     	;# 
   663  1EBE                     	;# 
   664  1EC3                     	;# 
   665  1EC5                     	;# 
   666  1EC6                     	;# 
   667  1EC7                     	;# 
   668  1ECB                     	;# 
   669  1ECC                     	;# 
   670  1ECD                     	;# 
   671  1ECE                     	;# 
   672  1F10                     	;# 
   673  1F11                     	;# 
   674  1F12                     	;# 
   675  1F13                     	;# 
   676  1F14                     	;# 
   677  1F15                     	;# 
   678  1F1C                     	;# 
   679  1F1D                     	;# 
   680  1F1E                     	;# 
   681  1F1F                     	;# 
   682  1F20                     	;# 
   683  1F21                     	;# 
   684  1F22                     	;# 
   685  1F23                     	;# 
   686  1F24                     	;# 
   687  1F25                     	;# 
   688  1F26                     	;# 
   689  1F27                     	;# 
   690  1F38                     	;# 
   691  1F39                     	;# 
   692  1F3A                     	;# 
   693  1F3B                     	;# 
   694  1F3C                     	;# 
   695  1F3D                     	;# 
   696  1F3E                     	;# 
   697  1F3F                     	;# 
   698  1F43                     	;# 
   699  1F44                     	;# 
   700  1F45                     	;# 
   701  1F46                     	;# 
   702  1F47                     	;# 
   703  1F48                     	;# 
   704  1F49                     	;# 
   705  1F4A                     	;# 
   706  1F4E                     	;# 
   707  1F4F                     	;# 
   708  1F50                     	;# 
   709  1F51                     	;# 
   710  1F52                     	;# 
   711  1F53                     	;# 
   712  1F54                     	;# 
   713  1F55                     	;# 
   714  1FE4                     	;# 
   715  1FE5                     	;# 
   716  1FE6                     	;# 
   717  1FE7                     	;# 
   718  1FE8                     	;# 
   719  1FE8                     	;# 
   720  1FE9                     	;# 
   721  1FEA                     	;# 
   722  1FEA                     	;# 
   723  1FEB                     	;# 
   724  1FED                     	;# 
   725  1FEE                     	;# 
   726  1FEF                     	;# 
   727  0000                     	;# 
   728  0001                     	;# 
   729  0002                     	;# 
   730  0003                     	;# 
   731  0004                     	;# 
   732  0005                     	;# 
   733  0006                     	;# 
   734  0007                     	;# 
   735  0008                     	;# 
   736  0009                     	;# 
   737  000A                     	;# 
   738  000B                     	;# 
   739  000C                     	;# 
   740  000D                     	;# 
   741  000E                     	;# 
   742  0012                     	;# 
   743  0013                     	;# 
   744  0014                     	;# 
   745  0018                     	;# 
   746  0019                     	;# 
   747  001A                     	;# 
   748  009B                     	;# 
   749  009B                     	;# 
   750  009C                     	;# 
   751  009D                     	;# 
   752  009E                     	;# 
   753  009F                     	;# 
   754  0119                     	;# 
   755  0119                     	;# 
   756  0119                     	;# 
   757  011A                     	;# 
   758  011A                     	;# 
   759  011A                     	;# 
   760  011B                     	;# 
   761  011B                     	;# 
   762  011B                     	;# 
   763  011B                     	;# 
   764  011B                     	;# 
   765  011C                     	;# 
   766  011C                     	;# 
   767  011C                     	;# 
   768  011D                     	;# 
   769  011D                     	;# 
   770  011D                     	;# 
   771  011E                     	;# 
   772  011E                     	;# 
   773  011E                     	;# 
   774  011F                     	;# 
   775  011F                     	;# 
   776  011F                     	;# 
   777  011F                     	;# 
   778  011F                     	;# 
   779  018C                     	;# 
   780  018D                     	;# 
   781  018E                     	;# 
   782  018F                     	;# 
   783  0190                     	;# 
   784  0191                     	;# 
   785  0192                     	;# 
   786  020C                     	;# 
   787  020C                     	;# 
   788  020D                     	;# 
   789  020E                     	;# 
   790  020F                     	;# 
   791  020F                     	;# 
   792  0210                     	;# 
   793  0210                     	;# 
   794  0211                     	;# 
   795  0211                     	;# 
   796  028C                     	;# 
   797  028C                     	;# 
   798  028D                     	;# 
   799  028D                     	;# 
   800  028E                     	;# 
   801  028F                     	;# 
   802  0290                     	;# 
   803  0291                     	;# 
   804  030C                     	;# 
   805  030C                     	;# 
   806  030D                     	;# 
   807  030E                     	;# 
   808  030F                     	;# 
   809  0310                     	;# 
   810  0310                     	;# 
   811  0311                     	;# 
   812  0312                     	;# 
   813  0313                     	;# 
   814  0314                     	;# 
   815  0314                     	;# 
   816  0315                     	;# 
   817  0316                     	;# 
   818  0318                     	;# 
   819  0318                     	;# 
   820  0319                     	;# 
   821  031A                     	;# 
   822  031C                     	;# 
   823  031C                     	;# 
   824  031D                     	;# 
   825  031E                     	;# 
   826  038C                     	;# 
   827  038C                     	;# 
   828  038D                     	;# 
   829  038E                     	;# 
   830  058C                     	;# 
   831  058C                     	;# 
   832  058D                     	;# 
   833  058E                     	;# 
   834  058F                     	;# 
   835  058F                     	;# 
   836  0590                     	;# 
   837  0591                     	;# 
   838  0592                     	;# 
   839  0593                     	;# 
   840  059C                     	;# 
   841  059C                     	;# 
   842  059D                     	;# 
   843  059D                     	;# 
   844  059E                     	;# 
   845  059F                     	;# 
   846  060C                     	;# 
   847  060D                     	;# 
   848  060E                     	;# 
   849  060F                     	;# 
   850  0610                     	;# 
   851  0611                     	;# 
   852  0612                     	;# 
   853  0613                     	;# 
   854  0614                     	;# 
   855  070C                     	;# 
   856  070D                     	;# 
   857  070E                     	;# 
   858  070F                     	;# 
   859  0710                     	;# 
   860  0711                     	;# 
   861  0712                     	;# 
   862  0713                     	;# 
   863  0716                     	;# 
   864  0717                     	;# 
   865  0718                     	;# 
   866  0719                     	;# 
   867  071A                     	;# 
   868  071B                     	;# 
   869  071C                     	;# 
   870  071D                     	;# 
   871  0796                     	;# 
   872  0797                     	;# 
   873  0798                     	;# 
   874  0799                     	;# 
   875  079A                     	;# 
   876  079B                     	;# 
   877  080C                     	;# 
   878  080D                     	;# 
   879  080E                     	;# 
   880  080F                     	;# 
   881  0810                     	;# 
   882  0811                     	;# 
   883  0812                     	;# 
   884  0813                     	;# 
   885  0814                     	;# 
   886  081A                     	;# 
   887  081A                     	;# 
   888  081B                     	;# 
   889  081C                     	;# 
   890  081C                     	;# 
   891  081D                     	;# 
   892  081E                     	;# 
   893  081F                     	;# 
   894  088C                     	;# 
   895  088D                     	;# 
   896  088E                     	;# 
   897  088F                     	;# 
   898  0890                     	;# 
   899  0891                     	;# 
   900  0892                     	;# 
   901  0893                     	;# 
   902  0895                     	;# 
   903  0896                     	;# 
   904  090C                     	;# 
   905  090E                     	;# 
   906  090F                     	;# 
   907  091F                     	;# 
   908  098F                     	;# 
   909  098F                     	;# 
   910  0990                     	;# 
   911  0991                     	;# 
   912  0992                     	;# 
   913  0993                     	;# 
   914  0994                     	;# 
   915  0995                     	;# 
   916  0996                     	;# 
   917  0997                     	;# 
   918  0A19                     	;# 
   919  0A19                     	;# 
   920  0A1A                     	;# 
   921  0A1A                     	;# 
   922  0A1B                     	;# 
   923  0A1B                     	;# 
   924  0A1B                     	;# 
   925  0A1C                     	;# 
   926  0A1C                     	;# 
   927  0A1D                     	;# 
   928  0A1D                     	;# 
   929  0A1E                     	;# 
   930  0A1E                     	;# 
   931  0A1F                     	;# 
   932  0A1F                     	;# 
   933  0A1F                     	;# 
   934  1E0F                     	;# 
   935  1E10                     	;# 
   936  1E11                     	;# 
   937  1E12                     	;# 
   938  1E13                     	;# 
   939  1E14                     	;# 
   940  1E15                     	;# 
   941  1E16                     	;# 
   942  1E17                     	;# 
   943  1E18                     	;# 
   944  1E19                     	;# 
   945  1E1A                     	;# 
   946  1E1B                     	;# 
   947  1E1C                     	;# 
   948  1E1D                     	;# 
   949  1E1E                     	;# 
   950  1E1F                     	;# 
   951  1E20                     	;# 
   952  1E21                     	;# 
   953  1E22                     	;# 
   954  1E23                     	;# 
   955  1E24                     	;# 
   956  1E25                     	;# 
   957  1E26                     	;# 
   958  1E27                     	;# 
   959  1E28                     	;# 
   960  1E29                     	;# 
   961  1E2A                     	;# 
   962  1E2B                     	;# 
   963  1E2C                     	;# 
   964  1E2D                     	;# 
   965  1E2E                     	;# 
   966  1E2F                     	;# 
   967  1E30                     	;# 
   968  1E31                     	;# 
   969  1E32                     	;# 
   970  1E33                     	;# 
   971  1E34                     	;# 
   972  1E35                     	;# 
   973  1E36                     	;# 
   974  1E37                     	;# 
   975  1E8F                     	;# 
   976  1E90                     	;# 
   977  1E91                     	;# 
   978  1E92                     	;# 
   979  1E93                     	;# 
   980  1E9C                     	;# 
   981  1EA1                     	;# 
   982  1EA2                     	;# 
   983  1EB1                     	;# 
   984  1EBB                     	;# 
   985  1EBC                     	;# 
   986  1EBD                     	;# 
   987  1EBE                     	;# 
   988  1EC3                     	;# 
   989  1EC5                     	;# 
   990  1EC6                     	;# 
   991  1EC7                     	;# 
   992  1ECB                     	;# 
   993  1ECC                     	;# 
   994  1ECD                     	;# 
   995  1ECE                     	;# 
   996  1F10                     	;# 
   997  1F11                     	;# 
   998  1F12                     	;# 
   999  1F13                     	;# 
  1000  1F14                     	;# 
  1001  1F15                     	;# 
  1002  1F1C                     	;# 
  1003  1F1D                     	;# 
  1004  1F1E                     	;# 
  1005  1F1F                     	;# 
  1006  1F20                     	;# 
  1007  1F21                     	;# 
  1008  1F22                     	;# 
  1009  1F23                     	;# 
  1010  1F24                     	;# 
  1011  1F25                     	;# 
  1012  1F26                     	;# 
  1013  1F27                     	;# 
  1014  1F38                     	;# 
  1015  1F39                     	;# 
  1016  1F3A                     	;# 
  1017  1F3B                     	;# 
  1018  1F3C                     	;# 
  1019  1F3D                     	;# 
  1020  1F3E                     	;# 
  1021  1F3F                     	;# 
  1022  1F43                     	;# 
  1023  1F44                     	;# 
  1024  1F45                     	;# 
  1025  1F46                     	;# 
  1026  1F47                     	;# 
  1027  1F48                     	;# 
  1028  1F49                     	;# 
  1029  1F4A                     	;# 
  1030  1F4E                     	;# 
  1031  1F4F                     	;# 
  1032  1F50                     	;# 
  1033  1F51                     	;# 
  1034  1F52                     	;# 
  1035  1F53                     	;# 
  1036  1F54                     	;# 
  1037  1F55                     	;# 
  1038  1FE4                     	;# 
  1039  1FE5                     	;# 
  1040  1FE6                     	;# 
  1041  1FE7                     	;# 
  1042  1FE8                     	;# 
  1043  1FE8                     	;# 
  1044  1FE9                     	;# 
  1045  1FEA                     	;# 
  1046  1FEA                     	;# 
  1047  1FEB                     	;# 
  1048  1FED                     	;# 
  1049  1FEE                     	;# 
  1050  1FEF                     	;# 
  1051  0000                     	;# 
  1052  0001                     	;# 
  1053  0002                     	;# 
  1054  0003                     	;# 
  1055  0004                     	;# 
  1056  0005                     	;# 
  1057  0006                     	;# 
  1058  0007                     	;# 
  1059  0008                     	;# 
  1060  0009                     	;# 
  1061  000A                     	;# 
  1062  000B                     	;# 
  1063  000C                     	;# 
  1064  000D                     	;# 
  1065  000E                     	;# 
  1066  0012                     	;# 
  1067  0013                     	;# 
  1068  0014                     	;# 
  1069  0018                     	;# 
  1070  0019                     	;# 
  1071  001A                     	;# 
  1072  009B                     	;# 
  1073  009B                     	;# 
  1074  009C                     	;# 
  1075  009D                     	;# 
  1076  009E                     	;# 
  1077  009F                     	;# 
  1078  0119                     	;# 
  1079  0119                     	;# 
  1080  0119                     	;# 
  1081  011A                     	;# 
  1082  011A                     	;# 
  1083  011A                     	;# 
  1084  011B                     	;# 
  1085  011B                     	;# 
  1086  011B                     	;# 
  1087  011B                     	;# 
  1088  011B                     	;# 
  1089  011C                     	;# 
  1090  011C                     	;# 
  1091  011C                     	;# 
  1092  011D                     	;# 
  1093  011D                     	;# 
  1094  011D                     	;# 
  1095  011E                     	;# 
  1096  011E                     	;# 
  1097  011E                     	;# 
  1098  011F                     	;# 
  1099  011F                     	;# 
  1100  011F                     	;# 
  1101  011F                     	;# 
  1102  011F                     	;# 
  1103  018C                     	;# 
  1104  018D                     	;# 
  1105  018E                     	;# 
  1106  018F                     	;# 
  1107  0190                     	;# 
  1108  0191                     	;# 
  1109  0192                     	;# 
  1110  020C                     	;# 
  1111  020C                     	;# 
  1112  020D                     	;# 
  1113  020E                     	;# 
  1114  020F                     	;# 
  1115  020F                     	;# 
  1116  0210                     	;# 
  1117  0210                     	;# 
  1118  0211                     	;# 
  1119  0211                     	;# 
  1120  028C                     	;# 
  1121  028C                     	;# 
  1122  028D                     	;# 
  1123  028D                     	;# 
  1124  028E                     	;# 
  1125  028F                     	;# 
  1126  0290                     	;# 
  1127  0291                     	;# 
  1128  030C                     	;# 
  1129  030C                     	;# 
  1130  030D                     	;# 
  1131  030E                     	;# 
  1132  030F                     	;# 
  1133  0310                     	;# 
  1134  0310                     	;# 
  1135  0311                     	;# 
  1136  0312                     	;# 
  1137  0313                     	;# 
  1138  0314                     	;# 
  1139  0314                     	;# 
  1140  0315                     	;# 
  1141  0316                     	;# 
  1142  0318                     	;# 
  1143  0318                     	;# 
  1144  0319                     	;# 
  1145  031A                     	;# 
  1146  031C                     	;# 
  1147  031C                     	;# 
  1148  031D                     	;# 
  1149  031E                     	;# 
  1150  038C                     	;# 
  1151  038C                     	;# 
  1152  038D                     	;# 
  1153  038E                     	;# 
  1154  058C                     	;# 
  1155  058C                     	;# 
  1156  058D                     	;# 
  1157  058E                     	;# 
  1158  058F                     	;# 
  1159  058F                     	;# 
  1160  0590                     	;# 
  1161  0591                     	;# 
  1162  0592                     	;# 
  1163  0593                     	;# 
  1164  059C                     	;# 
  1165  059C                     	;# 
  1166  059D                     	;# 
  1167  059D                     	;# 
  1168  059E                     	;# 
  1169  059F                     	;# 
  1170  060C                     	;# 
  1171  060D                     	;# 
  1172  060E                     	;# 
  1173  060F                     	;# 
  1174  0610                     	;# 
  1175  0611                     	;# 
  1176  0612                     	;# 
  1177  0613                     	;# 
  1178  0614                     	;# 
  1179  070C                     	;# 
  1180  070D                     	;# 
  1181  070E                     	;# 
  1182  070F                     	;# 
  1183  0710                     	;# 
  1184  0711                     	;# 
  1185  0712                     	;# 
  1186  0713                     	;# 
  1187  0716                     	;# 
  1188  0717                     	;# 
  1189  0718                     	;# 
  1190  0719                     	;# 
  1191  071A                     	;# 
  1192  071B                     	;# 
  1193  071C                     	;# 
  1194  071D                     	;# 
  1195  0796                     	;# 
  1196  0797                     	;# 
  1197  0798                     	;# 
  1198  0799                     	;# 
  1199  079A                     	;# 
  1200  079B                     	;# 
  1201  080C                     	;# 
  1202  080D                     	;# 
  1203  080E                     	;# 
  1204  080F                     	;# 
  1205  0810                     	;# 
  1206  0811                     	;# 
  1207  0812                     	;# 
  1208  0813                     	;# 
  1209  0814                     	;# 
  1210  081A                     	;# 
  1211  081A                     	;# 
  1212  081B                     	;# 
  1213  081C                     	;# 
  1214  081C                     	;# 
  1215  081D                     	;# 
  1216  081E                     	;# 
  1217  081F                     	;# 
  1218  088C                     	;# 
  1219  088D                     	;# 
  1220  088E                     	;# 
  1221  088F                     	;# 
  1222  0890                     	;# 
  1223  0891                     	;# 
  1224  0892                     	;# 
  1225  0893                     	;# 
  1226  0895                     	;# 
  1227  0896                     	;# 
  1228  090C                     	;# 
  1229  090E                     	;# 
  1230  090F                     	;# 
  1231  091F                     	;# 
  1232  098F                     	;# 
  1233  098F                     	;# 
  1234  0990                     	;# 
  1235  0991                     	;# 
  1236  0992                     	;# 
  1237  0993                     	;# 
  1238  0994                     	;# 
  1239  0995                     	;# 
  1240  0996                     	;# 
  1241  0997                     	;# 
  1242  0A19                     	;# 
  1243  0A19                     	;# 
  1244  0A1A                     	;# 
  1245  0A1A                     	;# 
  1246  0A1B                     	;# 
  1247  0A1B                     	;# 
  1248  0A1B                     	;# 
  1249  0A1C                     	;# 
  1250  0A1C                     	;# 
  1251  0A1D                     	;# 
  1252  0A1D                     	;# 
  1253  0A1E                     	;# 
  1254  0A1E                     	;# 
  1255  0A1F                     	;# 
  1256  0A1F                     	;# 
  1257  0A1F                     	;# 
  1258  1E0F                     	;# 
  1259  1E10                     	;# 
  1260  1E11                     	;# 
  1261  1E12                     	;# 
  1262  1E13                     	;# 
  1263  1E14                     	;# 
  1264  1E15                     	;# 
  1265  1E16                     	;# 
  1266  1E17                     	;# 
  1267  1E18                     	;# 
  1268  1E19                     	;# 
  1269  1E1A                     	;# 
  1270  1E1B                     	;# 
  1271  1E1C                     	;# 
  1272  1E1D                     	;# 
  1273  1E1E                     	;# 
  1274  1E1F                     	;# 
  1275  1E20                     	;# 
  1276  1E21                     	;# 
  1277  1E22                     	;# 
  1278  1E23                     	;# 
  1279  1E24                     	;# 
  1280  1E25                     	;# 
  1281  1E26                     	;# 
  1282  1E27                     	;# 
  1283  1E28                     	;# 
  1284  1E29                     	;# 
  1285  1E2A                     	;# 
  1286  1E2B                     	;# 
  1287  1E2C                     	;# 
  1288  1E2D                     	;# 
  1289  1E2E                     	;# 
  1290  1E2F                     	;# 
  1291  1E30                     	;# 
  1292  1E31                     	;# 
  1293  1E32                     	;# 
  1294  1E33                     	;# 
  1295  1E34                     	;# 
  1296  1E35                     	;# 
  1297  1E36                     	;# 
  1298  1E37                     	;# 
  1299  1E8F                     	;# 
  1300  1E90                     	;# 
  1301  1E91                     	;# 
  1302  1E92                     	;# 
  1303  1E93                     	;# 
  1304  1E9C                     	;# 
  1305  1EA1                     	;# 
  1306  1EA2                     	;# 
  1307  1EB1                     	;# 
  1308  1EBB                     	;# 
  1309  1EBC                     	;# 
  1310  1EBD                     	;# 
  1311  1EBE                     	;# 
  1312  1EC3                     	;# 
  1313  1EC5                     	;# 
  1314  1EC6                     	;# 
  1315  1EC7                     	;# 
  1316  1ECB                     	;# 
  1317  1ECC                     	;# 
  1318  1ECD                     	;# 
  1319  1ECE                     	;# 
  1320  1F10                     	;# 
  1321  1F11                     	;# 
  1322  1F12                     	;# 
  1323  1F13                     	;# 
  1324  1F14                     	;# 
  1325  1F15                     	;# 
  1326  1F1C                     	;# 
  1327  1F1D                     	;# 
  1328  1F1E                     	;# 
  1329  1F1F                     	;# 
  1330  1F20                     	;# 
  1331  1F21                     	;# 
  1332  1F22                     	;# 
  1333  1F23                     	;# 
  1334  1F24                     	;# 
  1335  1F25                     	;# 
  1336  1F26                     	;# 
  1337  1F27                     	;# 
  1338  1F38                     	;# 
  1339  1F39                     	;# 
  1340  1F3A                     	;# 
  1341  1F3B                     	;# 
  1342  1F3C                     	;# 
  1343  1F3D                     	;# 
  1344  1F3E                     	;# 
  1345  1F3F                     	;# 
  1346  1F43                     	;# 
  1347  1F44                     	;# 
  1348  1F45                     	;# 
  1349  1F46                     	;# 
  1350  1F47                     	;# 
  1351  1F48                     	;# 
  1352  1F49                     	;# 
  1353  1F4A                     	;# 
  1354  1F4E                     	;# 
  1355  1F4F                     	;# 
  1356  1F50                     	;# 
  1357  1F51                     	;# 
  1358  1F52                     	;# 
  1359  1F53                     	;# 
  1360  1F54                     	;# 
  1361  1F55                     	;# 
  1362  1FE4                     	;# 
  1363  1FE5                     	;# 
  1364  1FE6                     	;# 
  1365  1FE7                     	;# 
  1366  1FE8                     	;# 
  1367  1FE8                     	;# 
  1368  1FE9                     	;# 
  1369  1FEA                     	;# 
  1370  1FEA                     	;# 
  1371  1FEB                     	;# 
  1372  1FED                     	;# 
  1373  1FEE                     	;# 
  1374  1FEF                     	;# 
  1375  0000                     	;# 
  1376  0001                     	;# 
  1377  0002                     	;# 
  1378  0003                     	;# 
  1379  0004                     	;# 
  1380  0005                     	;# 
  1381  0006                     	;# 
  1382  0007                     	;# 
  1383  0008                     	;# 
  1384  0009                     	;# 
  1385  000A                     	;# 
  1386  000B                     	;# 
  1387  000C                     	;# 
  1388  000D                     	;# 
  1389  000E                     	;# 
  1390  0012                     	;# 
  1391  0013                     	;# 
  1392  0014                     	;# 
  1393  0018                     	;# 
  1394  0019                     	;# 
  1395  001A                     	;# 
  1396  009B                     	;# 
  1397  009B                     	;# 
  1398  009C                     	;# 
  1399  009D                     	;# 
  1400  009E                     	;# 
  1401  009F                     	;# 
  1402  0119                     	;# 
  1403  0119                     	;# 
  1404  0119                     	;# 
  1405  011A                     	;# 
  1406  011A                     	;# 
  1407  011A                     	;# 
  1408  011B                     	;# 
  1409  011B                     	;# 
  1410  011B                     	;# 
  1411  011B                     	;# 
  1412  011B                     	;# 
  1413  011C                     	;# 
  1414  011C                     	;# 
  1415  011C                     	;# 
  1416  011D                     	;# 
  1417  011D                     	;# 
  1418  011D                     	;# 
  1419  011E                     	;# 
  1420  011E                     	;# 
  1421  011E                     	;# 
  1422  011F                     	;# 
  1423  011F                     	;# 
  1424  011F                     	;# 
  1425  011F                     	;# 
  1426  011F                     	;# 
  1427  018C                     	;# 
  1428  018D                     	;# 
  1429  018E                     	;# 
  1430  018F                     	;# 
  1431  0190                     	;# 
  1432  0191                     	;# 
  1433  0192                     	;# 
  1434  020C                     	;# 
  1435  020C                     	;# 
  1436  020D                     	;# 
  1437  020E                     	;# 
  1438  020F                     	;# 
  1439  020F                     	;# 
  1440  0210                     	;# 
  1441  0210                     	;# 
  1442  0211                     	;# 
  1443  0211                     	;# 
  1444  028C                     	;# 
  1445  028C                     	;# 
  1446  028D                     	;# 
  1447  028D                     	;# 
  1448  028E                     	;# 
  1449  028F                     	;# 
  1450  0290                     	;# 
  1451  0291                     	;# 
  1452  030C                     	;# 
  1453  030C                     	;# 
  1454  030D                     	;# 
  1455  030E                     	;# 
  1456  030F                     	;# 
  1457  0310                     	;# 
  1458  0310                     	;# 
  1459  0311                     	;# 
  1460  0312                     	;# 
  1461  0313                     	;# 
  1462  0314                     	;# 
  1463  0314                     	;# 
  1464  0315                     	;# 
  1465  0316                     	;# 
  1466  0318                     	;# 
  1467  0318                     	;# 
  1468  0319                     	;# 
  1469  031A                     	;# 
  1470  031C                     	;# 
  1471  031C                     	;# 
  1472  031D                     	;# 
  1473  031E                     	;# 
  1474  038C                     	;# 
  1475  038C                     	;# 
  1476  038D                     	;# 
  1477  038E                     	;# 
  1478  058C                     	;# 
  1479  058C                     	;# 
  1480  058D                     	;# 
  1481  058E                     	;# 
  1482  058F                     	;# 
  1483  058F                     	;# 
  1484  0590                     	;# 
  1485  0591                     	;# 
  1486  0592                     	;# 
  1487  0593                     	;# 
  1488  059C                     	;# 
  1489  059C                     	;# 
  1490  059D                     	;# 
  1491  059D                     	;# 
  1492  059E                     	;# 
  1493  059F                     	;# 
  1494  060C                     	;# 
  1495  060D                     	;# 
  1496  060E                     	;# 
  1497  060F                     	;# 
  1498  0610                     	;# 
  1499  0611                     	;# 
  1500  0612                     	;# 
  1501  0613                     	;# 
  1502  0614                     	;# 
  1503  070C                     	;# 
  1504  070D                     	;# 
  1505  070E                     	;# 
  1506  070F                     	;# 
  1507  0710                     	;# 
  1508  0711                     	;# 
  1509  0712                     	;# 
  1510  0713                     	;# 
  1511  0716                     	;# 
  1512  0717                     	;# 
  1513  0718                     	;# 
  1514  0719                     	;# 
  1515  071A                     	;# 
  1516  071B                     	;# 
  1517  071C                     	;# 
  1518  071D                     	;# 
  1519  0796                     	;# 
  1520  0797                     	;# 
  1521  0798                     	;# 
  1522  0799                     	;# 
  1523  079A                     	;# 
  1524  079B                     	;# 
  1525  080C                     	;# 
  1526  080D                     	;# 
  1527  080E                     	;# 
  1528  080F                     	;# 
  1529  0810                     	;# 
  1530  0811                     	;# 
  1531  0812                     	;# 
  1532  0813                     	;# 
  1533  0814                     	;# 
  1534  081A                     	;# 
  1535  081A                     	;# 
  1536  081B                     	;# 
  1537  081C                     	;# 
  1538  081C                     	;# 
  1539  081D                     	;# 
  1540  081E                     	;# 
  1541  081F                     	;# 
  1542  088C                     	;# 
  1543  088D                     	;# 
  1544  088E                     	;# 
  1545  088F                     	;# 
  1546  0890                     	;# 
  1547  0891                     	;# 
  1548  0892                     	;# 
  1549  0893                     	;# 
  1550  0895                     	;# 
  1551  0896                     	;# 
  1552  090C                     	;# 
  1553  090E                     	;# 
  1554  090F                     	;# 
  1555  091F                     	;# 
  1556  098F                     	;# 
  1557  098F                     	;# 
  1558  0990                     	;# 
  1559  0991                     	;# 
  1560  0992                     	;# 
  1561  0993                     	;# 
  1562  0994                     	;# 
  1563  0995                     	;# 
  1564  0996                     	;# 
  1565  0997                     	;# 
  1566  0A19                     	;# 
  1567  0A19                     	;# 
  1568  0A1A                     	;# 
  1569  0A1A                     	;# 
  1570  0A1B                     	;# 
  1571  0A1B                     	;# 
  1572  0A1B                     	;# 
  1573  0A1C                     	;# 
  1574  0A1C                     	;# 
  1575  0A1D                     	;# 
  1576  0A1D                     	;# 
  1577  0A1E                     	;# 
  1578  0A1E                     	;# 
  1579  0A1F                     	;# 
  1580  0A1F                     	;# 
  1581  0A1F                     	;# 
  1582  1E0F                     	;# 
  1583  1E10                     	;# 
  1584  1E11                     	;# 
  1585  1E12                     	;# 
  1586  1E13                     	;# 
  1587  1E14                     	;# 
  1588  1E15                     	;# 
  1589  1E16                     	;# 
  1590  1E17                     	;# 
  1591  1E18                     	;# 
  1592  1E19                     	;# 
  1593  1E1A                     	;# 
  1594  1E1B                     	;# 
  1595  1E1C                     	;# 
  1596  1E1D                     	;# 
  1597  1E1E                     	;# 
  1598  1E1F                     	;# 
  1599  1E20                     	;# 
  1600  1E21                     	;# 
  1601  1E22                     	;# 
  1602  1E23                     	;# 
  1603  1E24                     	;# 
  1604  1E25                     	;# 
  1605  1E26                     	;# 
  1606  1E27                     	;# 
  1607  1E28                     	;# 
  1608  1E29                     	;# 
  1609  1E2A                     	;# 
  1610  1E2B                     	;# 
  1611  1E2C                     	;# 
  1612  1E2D                     	;# 
  1613  1E2E                     	;# 
  1614  1E2F                     	;# 
  1615  1E30                     	;# 
  1616  1E31                     	;# 
  1617  1E32                     	;# 
  1618  1E33                     	;# 
  1619  1E34                     	;# 
  1620  1E35                     	;# 
  1621  1E36                     	;# 
  1622  1E37                     	;# 
  1623  1E8F                     	;# 
  1624  1E90                     	;# 
  1625  1E91                     	;# 
  1626  1E92                     	;# 
  1627  1E93                     	;# 
  1628  1E9C                     	;# 
  1629  1EA1                     	;# 
  1630  1EA2                     	;# 
  1631  1EB1                     	;# 
  1632  1EBB                     	;# 
  1633  1EBC                     	;# 
  1634  1EBD                     	;# 
  1635  1EBE                     	;# 
  1636  1EC3                     	;# 
  1637  1EC5                     	;# 
  1638  1EC6                     	;# 
  1639  1EC7                     	;# 
  1640  1ECB                     	;# 
  1641  1ECC                     	;# 
  1642  1ECD                     	;# 
  1643  1ECE                     	;# 
  1644  1F10                     	;# 
  1645  1F11                     	;# 
  1646  1F12                     	;# 
  1647  1F13                     	;# 
  1648  1F14                     	;# 
  1649  1F15                     	;# 
  1650  1F1C                     	;# 
  1651  1F1D                     	;# 
  1652  1F1E                     	;# 
  1653  1F1F                     	;# 
  1654  1F20                     	;# 
  1655  1F21                     	;# 
  1656  1F22                     	;# 
  1657  1F23                     	;# 
  1658  1F24                     	;# 
  1659  1F25                     	;# 
  1660  1F26                     	;# 
  1661  1F27                     	;# 
  1662  1F38                     	;# 
  1663  1F39                     	;# 
  1664  1F3A                     	;# 
  1665  1F3B                     	;# 
  1666  1F3C                     	;# 
  1667  1F3D                     	;# 
  1668  1F3E                     	;# 
  1669  1F3F                     	;# 
  1670  1F43                     	;# 
  1671  1F44                     	;# 
  1672  1F45                     	;# 
  1673  1F46                     	;# 
  1674  1F47                     	;# 
  1675  1F48                     	;# 
  1676  1F49                     	;# 
  1677  1F4A                     	;# 
  1678  1F4E                     	;# 
  1679  1F4F                     	;# 
  1680  1F50                     	;# 
  1681  1F51                     	;# 
  1682  1F52                     	;# 
  1683  1F53                     	;# 
  1684  1F54                     	;# 
  1685  1F55                     	;# 
  1686  1FE4                     	;# 
  1687  1FE5                     	;# 
  1688  1FE6                     	;# 
  1689  1FE7                     	;# 
  1690  1FE8                     	;# 
  1691  1FE8                     	;# 
  1692  1FE9                     	;# 
  1693  1FEA                     	;# 
  1694  1FEA                     	;# 
  1695  1FEB                     	;# 
  1696  1FED                     	;# 
  1697  1FEE                     	;# 
  1698  1FEF                     	;# 
  1699  0000                     	;# 
  1700  0001                     	;# 
  1701  0002                     	;# 
  1702  0003                     	;# 
  1703  0004                     	;# 
  1704  0005                     	;# 
  1705  0006                     	;# 
  1706  0007                     	;# 
  1707  0008                     	;# 
  1708  0009                     	;# 
  1709  000A                     	;# 
  1710  000B                     	;# 
  1711  000C                     	;# 
  1712  000D                     	;# 
  1713  000E                     	;# 
  1714  0012                     	;# 
  1715  0013                     	;# 
  1716  0014                     	;# 
  1717  0018                     	;# 
  1718  0019                     	;# 
  1719  001A                     	;# 
  1720  009B                     	;# 
  1721  009B                     	;# 
  1722  009C                     	;# 
  1723  009D                     	;# 
  1724  009E                     	;# 
  1725  009F                     	;# 
  1726  0119                     	;# 
  1727  0119                     	;# 
  1728  0119                     	;# 
  1729  011A                     	;# 
  1730  011A                     	;# 
  1731  011A                     	;# 
  1732  011B                     	;# 
  1733  011B                     	;# 
  1734  011B                     	;# 
  1735  011B                     	;# 
  1736  011B                     	;# 
  1737  011C                     	;# 
  1738  011C                     	;# 
  1739  011C                     	;# 
  1740  011D                     	;# 
  1741  011D                     	;# 
  1742  011D                     	;# 
  1743  011E                     	;# 
  1744  011E                     	;# 
  1745  011E                     	;# 
  1746  011F                     	;# 
  1747  011F                     	;# 
  1748  011F                     	;# 
  1749  011F                     	;# 
  1750  011F                     	;# 
  1751  018C                     	;# 
  1752  018D                     	;# 
  1753  018E                     	;# 
  1754  018F                     	;# 
  1755  0190                     	;# 
  1756  0191                     	;# 
  1757  0192                     	;# 
  1758  020C                     	;# 
  1759  020C                     	;# 
  1760  020D                     	;# 
  1761  020E                     	;# 
  1762  020F                     	;# 
  1763  020F                     	;# 
  1764  0210                     	;# 
  1765  0210                     	;# 
  1766  0211                     	;# 
  1767  0211                     	;# 
  1768  028C                     	;# 
  1769  028C                     	;# 
  1770  028D                     	;# 
  1771  028D                     	;# 
  1772  028E                     	;# 
  1773  028F                     	;# 
  1774  0290                     	;# 
  1775  0291                     	;# 
  1776  030C                     	;# 
  1777  030C                     	;# 
  1778  030D                     	;# 
  1779  030E                     	;# 
  1780  030F                     	;# 
  1781  0310                     	;# 
  1782  0310                     	;# 
  1783  0311                     	;# 
  1784  0312                     	;# 
  1785  0313                     	;# 
  1786  0314                     	;# 
  1787  0314                     	;# 
  1788  0315                     	;# 
  1789  0316                     	;# 
  1790  0318                     	;# 
  1791  0318                     	;# 
  1792  0319                     	;# 
  1793  031A                     	;# 
  1794  031C                     	;# 
  1795  031C                     	;# 
  1796  031D                     	;# 
  1797  031E                     	;# 
  1798  038C                     	;# 
  1799  038C                     	;# 
  1800  038D                     	;# 
  1801  038E                     	;# 
  1802  058C                     	;# 
  1803  058C                     	;# 
  1804  058D                     	;# 
  1805  058E                     	;# 
  1806  058F                     	;# 
  1807  058F                     	;# 
  1808  0590                     	;# 
  1809  0591                     	;# 
  1810  0592                     	;# 
  1811  0593                     	;# 
  1812  059C                     	;# 
  1813  059C                     	;# 
  1814  059D                     	;# 
  1815  059D                     	;# 
  1816  059E                     	;# 
  1817  059F                     	;# 
  1818  060C                     	;# 
  1819  060D                     	;# 
  1820  060E                     	;# 
  1821  060F                     	;# 
  1822  0610                     	;# 
  1823  0611                     	;# 
  1824  0612                     	;# 
  1825  0613                     	;# 
  1826  0614                     	;# 
  1827  070C                     	;# 
  1828  070D                     	;# 
  1829  070E                     	;# 
  1830  070F                     	;# 
  1831  0710                     	;# 
  1832  0711                     	;# 
  1833  0712                     	;# 
  1834  0713                     	;# 
  1835  0716                     	;# 
  1836  0717                     	;# 
  1837  0718                     	;# 
  1838  0719                     	;# 
  1839  071A                     	;# 
  1840  071B                     	;# 
  1841  071C                     	;# 
  1842  071D                     	;# 
  1843  0796                     	;# 
  1844  0797                     	;# 
  1845  0798                     	;# 
  1846  0799                     	;# 
  1847  079A                     	;# 
  1848  079B                     	;# 
  1849  080C                     	;# 
  1850  080D                     	;# 
  1851  080E                     	;# 
  1852  080F                     	;# 
  1853  0810                     	;# 
  1854  0811                     	;# 
  1855  0812                     	;# 
  1856  0813                     	;# 
  1857  0814                     	;# 
  1858  081A                     	;# 
  1859  081A                     	;# 
  1860  081B                     	;# 
  1861  081C                     	;# 
  1862  081C                     	;# 
  1863  081D                     	;# 
  1864  081E                     	;# 
  1865  081F                     	;# 
  1866  088C                     	;# 
  1867  088D                     	;# 
  1868  088E                     	;# 
  1869  088F                     	;# 
  1870  0890                     	;# 
  1871  0891                     	;# 
  1872  0892                     	;# 
  1873  0893                     	;# 
  1874  0895                     	;# 
  1875  0896                     	;# 
  1876  090C                     	;# 
  1877  090E                     	;# 
  1878  090F                     	;# 
  1879  091F                     	;# 
  1880  098F                     	;# 
  1881  098F                     	;# 
  1882  0990                     	;# 
  1883  0991                     	;# 
  1884  0992                     	;# 
  1885  0993                     	;# 
  1886  0994                     	;# 
  1887  0995                     	;# 
  1888  0996                     	;# 
  1889  0997                     	;# 
  1890  0A19                     	;# 
  1891  0A19                     	;# 
  1892  0A1A                     	;# 
  1893  0A1A                     	;# 
  1894  0A1B                     	;# 
  1895  0A1B                     	;# 
  1896  0A1B                     	;# 
  1897  0A1C                     	;# 
  1898  0A1C                     	;# 
  1899  0A1D                     	;# 
  1900  0A1D                     	;# 
  1901  0A1E                     	;# 
  1902  0A1E                     	;# 
  1903  0A1F                     	;# 
  1904  0A1F                     	;# 
  1905  0A1F                     	;# 
  1906  1E0F                     	;# 
  1907  1E10                     	;# 
  1908  1E11                     	;# 
  1909  1E12                     	;# 
  1910  1E13                     	;# 
  1911  1E14                     	;# 
  1912  1E15                     	;# 
  1913  1E16                     	;# 
  1914  1E17                     	;# 
  1915  1E18                     	;# 
  1916  1E19                     	;# 
  1917  1E1A                     	;# 
  1918  1E1B                     	;# 
  1919  1E1C                     	;# 
  1920  1E1D                     	;# 
  1921  1E1E                     	;# 
  1922  1E1F                     	;# 
  1923  1E20                     	;# 
  1924  1E21                     	;# 
  1925  1E22                     	;# 
  1926  1E23                     	;# 
  1927  1E24                     	;# 
  1928  1E25                     	;# 
  1929  1E26                     	;# 
  1930  1E27                     	;# 
  1931  1E28                     	;# 
  1932  1E29                     	;# 
  1933  1E2A                     	;# 
  1934  1E2B                     	;# 
  1935  1E2C                     	;# 
  1936  1E2D                     	;# 
  1937  1E2E                     	;# 
  1938  1E2F                     	;# 
  1939  1E30                     	;# 
  1940  1E31                     	;# 
  1941  1E32                     	;# 
  1942  1E33                     	;# 
  1943  1E34                     	;# 
  1944  1E35                     	;# 
  1945  1E36                     	;# 
  1946  1E37                     	;# 
  1947  1E8F                     	;# 
  1948  1E90                     	;# 
  1949  1E91                     	;# 
  1950  1E92                     	;# 
  1951  1E93                     	;# 
  1952  1E9C                     	;# 
  1953  1EA1                     	;# 
  1954  1EA2                     	;# 
  1955  1EB1                     	;# 
  1956  1EBB                     	;# 
  1957  1EBC                     	;# 
  1958  1EBD                     	;# 
  1959  1EBE                     	;# 
  1960  1EC3                     	;# 
  1961  1EC5                     	;# 
  1962  1EC6                     	;# 
  1963  1EC7                     	;# 
  1964  1ECB                     	;# 
  1965  1ECC                     	;# 
  1966  1ECD                     	;# 
  1967  1ECE                     	;# 
  1968  1F10                     	;# 
  1969  1F11                     	;# 
  1970  1F12                     	;# 
  1971  1F13                     	;# 
  1972  1F14                     	;# 
  1973  1F15                     	;# 
  1974  1F1C                     	;# 
  1975  1F1D                     	;# 
  1976  1F1E                     	;# 
  1977  1F1F                     	;# 
  1978  1F20                     	;# 
  1979  1F21                     	;# 
  1980  1F22                     	;# 
  1981  1F23                     	;# 
  1982  1F24                     	;# 
  1983  1F25                     	;# 
  1984  1F26                     	;# 
  1985  1F27                     	;# 
  1986  1F38                     	;# 
  1987  1F39                     	;# 
  1988  1F3A                     	;# 
  1989  1F3B                     	;# 
  1990  1F3C                     	;# 
  1991  1F3D                     	;# 
  1992  1F3E                     	;# 
  1993  1F3F                     	;# 
  1994  1F43                     	;# 
  1995  1F44                     	;# 
  1996  1F45                     	;# 
  1997  1F46                     	;# 
  1998  1F47                     	;# 
  1999  1F48                     	;# 
  2000  1F49                     	;# 
  2001  1F4A                     	;# 
  2002  1F4E                     	;# 
  2003  1F4F                     	;# 
  2004  1F50                     	;# 
  2005  1F51                     	;# 
  2006  1F52                     	;# 
  2007  1F53                     	;# 
  2008  1F54                     	;# 
  2009  1F55                     	;# 
  2010  1FE4                     	;# 
  2011  1FE5                     	;# 
  2012  1FE6                     	;# 
  2013  1FE7                     	;# 
  2014  1FE8                     	;# 
  2015  1FE8                     	;# 
  2016  1FE9                     	;# 
  2017  1FEA                     	;# 
  2018  1FEA                     	;# 
  2019  1FEB                     	;# 
  2020  1FED                     	;# 
  2021  1FEE                     	;# 
  2022  1FEF                     	;# 
  2023                           
  2024                           	psect	stringtext1
  2025  0369                     __pstringtext1:
  2026  0369                     _stateTable:
  2027  0369  3469               	retlw	105
  2028  036A  3441               	retlw	65
  2029  036B  3461               	retlw	97
  2030  036C  3457               	retlw	87
  2031  036D                     __end_of_stateTable:
  2032                           
  2033                           	psect	nvCOMMON
  2034  007B                     __pnvCOMMON:
  2035  007B                     _eusart1TxBufferRemaining:
  2036  007B                     	ds	1
  2037                           
  2038                           	psect	nvBANK0
  2039  003D                     __pnvBANK0:
  2040  003D                     _EUSART1_ErrorHandler:
  2041  003D                     	ds	2
  2042  003F                     _EUSART1_OverrunErrorHandler:
  2043  003F                     	ds	2
  2044  0041                     _EUSART1_FramingErrorHandler:
  2045  0041                     	ds	2
  2046  0043                     _EUSART1_RxDefaultInterruptHandler:
  2047  0043                     	ds	2
  2048  0045                     _EUSART1_TxDefaultInterruptHandler:
  2049  0045                     	ds	2
  2050  0047                     _TMR2_InterruptHandler:
  2051  0047                     	ds	2
  2052  000D                     _PORTBbits	set	13
  2053  000E                     _PORTCbits	set	14
  2054  000C                     _PORTAbits	set	12
  2055  0018                     _LATAbits	set	24
  2056  0012                     _TRISAbits	set	18
  2057  0014                     _TRISC	set	20
  2058  0013                     _TRISB	set	19
  2059  0012                     _TRISA	set	18
  2060  001A                     _LATC	set	26
  2061  0019                     _LATB	set	25
  2062  0018                     _LATA	set	24
  2063  000B                     _INTCONbits	set	11
  2064  0119                     _RC1REG	set	281
  2065  011D                     _RC1STAbits	set	285
  2066  011A                     _TX1REG	set	282
  2067  011E                     _TX1STAbits	set	286
  2068  011C                     _SP1BRGH	set	284
  2069  011B                     _SP1BRGL	set	283
  2070  011E                     _TX1STA	set	286
  2071  011D                     _RC1STA	set	285
  2072  011F                     _BAUD1CON	set	287
  2073  028D                     _PR2	set	653
  2074  028C                     _TMR2	set	652
  2075  028E                     _T2CONbits	set	654
  2076  0291                     _T2RSTbits	set	657
  2077  028F                     _T2HLTbits	set	655
  2078  028E                     _T2CON	set	654
  2079  028C                     _T2TMR	set	652
  2080  028D                     _T2PR	set	653
  2081  0291                     _T2RST	set	657
  2082  028F                     _T2HLT	set	655
  2083  0290                     _T2CLKCON	set	656
  2084  070F                     _PIR3bits	set	1807
  2085  0719                     _PIE3bits	set	1817
  2086  071A                     _PIE4bits	set	1818
  2087  0710                     _PIR4bits	set	1808
  2088  079B                     _PMD5	set	1947
  2089  079A                     _PMD4	set	1946
  2090  0799                     _PMD3	set	1945
  2091  0798                     _PMD2	set	1944
  2092  0797                     _PMD1	set	1943
  2093  0796                     _PMD0	set	1942
  2094  0892                     _OSCTUNE	set	2194
  2095  0890                     _OSCSTAT	set	2192
  2096  0893                     _OSCFRQ	set	2195
  2097  0891                     _OSCEN	set	2193
  2098  088F                     _OSCCON3	set	2191
  2099  088D                     _OSCCON1	set	2189
  2100  1F12                     _RA2PPS	set	7954
  2101  1F52                     _INLVLC	set	8018
  2102  1F47                     _INLVLB	set	8007
  2103  1F3C                     _INLVLA	set	7996
  2104  1F51                     _SLRCONC	set	8017
  2105  1F46                     _SLRCONB	set	8006
  2106  1F3B                     _SLRCONA	set	7995
  2107  1F50                     _ODCONC	set	8016
  2108  1F45                     _ODCONB	set	8005
  2109  1F3A                     _ODCONA	set	7994
  2110  1F4F                     _WPUC	set	8015
  2111  1F39                     _WPUA	set	7993
  2112  1F44                     _WPUB	set	8004
  2113  1F38                     _ANSELA	set	7992
  2114  1F43                     _ANSELB	set	8003
  2115  1F4E                     _ANSELC	set	8014
  2116                           
  2117                           	psect	cinit
  2118  0039                     start_initialization:	
  2119                           ; #config settings
  2120                           
  2121  0039                     __initialization:
  2122                           
  2123                           ; Clear objects allocated to COMMON
  2124  0039  01F0               	clrf	__pbssCOMMON& (0+127)
  2125  003A  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  2126  003B  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  2127  003C  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  2128  003D  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  2129  003E  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  2130                           
  2131                           ; Clear objects allocated to BANK0
  2132  003F  3020               	movlw	low __pbssBANK0
  2133  0040  0084               	movwf	4
  2134  0041  3000               	movlw	high __pbssBANK0
  2135  0042  0085               	movwf	5
  2136  0043  301D               	movlw	29
  2137  0044  3183  2333  3180   	fcall	clear_ram0
  2138                           
  2139                           ; Clear objects allocated to BANK1
  2140  0047  30A0               	movlw	low __pbssBANK1
  2141  0048  0084               	movwf	4
  2142  0049  3000               	movlw	high __pbssBANK1
  2143  004A  0085               	movwf	5
  2144  004B  3040               	movlw	64
  2145  004C  3183  2333  3180   	fcall	clear_ram0
  2146  004F                     end_of_initialization:	
  2147                           ;End of C runtime variable initialization code
  2148                           
  2149  004F                     __end_of__initialization:
  2150  004F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2151  0050  0140               	movlb	0
  2152  0051  3180  2853         	ljmp	_main	;jump to C main() function
  2153                           
  2154                           	psect	bssCOMMON
  2155  0070                     __pbssCOMMON:
  2156  0070                     _eusart1RxLastError:
  2157  0070                     	ds	1
  2158  0071                     _eusart1RxCount:
  2159  0071                     	ds	1
  2160  0072                     _eusart1RxTail:
  2161  0072                     	ds	1
  2162  0073                     _eusart1RxHead:
  2163  0073                     	ds	1
  2164  0074                     _eusart1TxTail:
  2165  0074                     	ds	1
  2166  0075                     _eusart1TxHead:
  2167  0075                     	ds	1
  2168                           
  2169                           	psect	bssBANK0
  2170  0020                     __pbssBANK0:
  2171  0020                     _target:
  2172  0020                     	ds	8
  2173  0028                     _eusart1RxStatusBuffer:
  2174  0028                     	ds	8
  2175  0030                     _eusart1RxBuffer:
  2176  0030                     	ds	8
  2177  0038                     _scan:
  2178  0038                     	ds	5
  2179                           
  2180                           	psect	bssBANK1
  2181  00A0                     __pbssBANK1:
  2182  00A0                     _eusart1TxBuffer:
  2183  00A0                     	ds	64
  2184                           
  2185                           	psect	clrtext
  2186  0333                     clear_ram0:	
  2187                           ;	Called with FSR0 containing the base address, and
  2188                           ;	WREG with the size to clear
  2189                           
  2190  0333  0064               	clrwdt	;clear the watchdog before getting into this loop
  2191  0334                     clrloop0:
  2192  0334  0180               	clrf	0	;clear RAM location pointed to by FSR
  2193  0335  3101               	addfsr 0,1
  2194  0336  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2195  0337  2B34               	goto	clrloop0	;have we reached the end yet?
  2196  0338  3400               	retlw	0	;all done for this memory range, return
  2197                           
  2198                           	psect	cstackCOMMON
  2199  0076                     __pcstackCOMMON:
  2200  0076                     ?_TMR2_DefaultInterruptHandler:
  2201  0076                     ??_TMR2_DefaultInterruptHandler:	
  2202                           ; 1 bytes @ 0x0
  2203                           
  2204  0076                     ?_TMR2_CallBack:	
  2205                           ; 1 bytes @ 0x0
  2206                           
  2207  0076                     ?_PMD_Initialize:	
  2208                           ; 1 bytes @ 0x0
  2209                           
  2210  0076                     ?_PIN_MANAGER_Initialize:	
  2211                           ; 1 bytes @ 0x0
  2212                           
  2213  0076                     ?_OSCILLATOR_Initialize:	
  2214                           ; 1 bytes @ 0x0
  2215                           
  2216  0076                     ?_EUSART1_Initialize:	
  2217                           ; 1 bytes @ 0x0
  2218                           
  2219  0076                     ?_EUSART1_Receive_ISR:	
  2220                           ; 1 bytes @ 0x0
  2221                           
  2222  0076                     ?_EUSART1_Transmit_ISR:	
  2223                           ; 1 bytes @ 0x0
  2224                           
  2225  0076                     ??_EUSART1_Transmit_ISR:	
  2226                           ; 1 bytes @ 0x0
  2227                           
  2228  0076                     ?_EUSART1_DefaultFramingErrorHandler:	
  2229                           ; 1 bytes @ 0x0
  2230                           
  2231  0076                     ??_EUSART1_DefaultFramingErrorHandler:	
  2232                           ; 1 bytes @ 0x0
  2233                           
  2234  0076                     ?_EUSART1_DefaultOverrunErrorHandler:	
  2235                           ; 1 bytes @ 0x0
  2236                           
  2237  0076                     ??_EUSART1_DefaultOverrunErrorHandler:	
  2238                           ; 1 bytes @ 0x0
  2239                           
  2240  0076                     ?_EUSART1_DefaultErrorHandler:	
  2241                           ; 1 bytes @ 0x0
  2242                           
  2243  0076                     ?_EUSART1_RxDataHandler:	
  2244                           ; 1 bytes @ 0x0
  2245                           
  2246  0076                     ??_EUSART1_RxDataHandler:	
  2247                           ; 1 bytes @ 0x0
  2248                           
  2249  0076                     ?_scanInput:	
  2250                           ; 1 bytes @ 0x0
  2251                           
  2252  0076                     ??_scanInput:	
  2253                           ; 1 bytes @ 0x0
  2254                           
  2255  0076                     ?_setState:	
  2256                           ; 1 bytes @ 0x0
  2257                           
  2258  0076                     ?_resetEdges:	
  2259                           ; 1 bytes @ 0x0
  2260                           
  2261  0076                     ?_countTargets:	
  2262                           ; 1 bytes @ 0x0
  2263                           
  2264  0076                     ?_TMR2_Initialize:	
  2265                           ; 1 bytes @ 0x0
  2266                           
  2267  0076                     ?_TMR2_ISR:	
  2268                           ; 1 bytes @ 0x0
  2269                           
  2270  0076                     ?_INTERRUPT_InterruptManager:	
  2271                           ; 1 bytes @ 0x0
  2272                           
  2273  0076                     ?_SYSTEM_Initialize:	
  2274                           ; 1 bytes @ 0x0
  2275                           
  2276  0076                     ?_isr_1ms:	
  2277                           ; 1 bytes @ 0x0
  2278                           
  2279  0076                     ?_main:	
  2280                           ; 1 bytes @ 0x0
  2281                           
  2282                           
  2283                           ; 1 bytes @ 0x0
  2284  0076                     	ds	1
  2285  0077                     ??_EUSART1_Receive_ISR:
  2286  0077                     ??_EUSART1_DefaultErrorHandler:	
  2287                           ; 1 bytes @ 0x1
  2288                           
  2289                           
  2290                           ; 1 bytes @ 0x1
  2291  0077                     	ds	1
  2292  0078                     ?_TMR2_SetInterruptHandler:
  2293  0078                     ??_TMR2_CallBack:	
  2294                           ; 1 bytes @ 0x2
  2295                           
  2296  0078                     ??_PMD_Initialize:	
  2297                           ; 1 bytes @ 0x2
  2298                           
  2299  0078                     ??_PIN_MANAGER_Initialize:	
  2300                           ; 1 bytes @ 0x2
  2301                           
  2302  0078                     ??_OSCILLATOR_Initialize:	
  2303                           ; 1 bytes @ 0x2
  2304                           
  2305  0078                     ?_EUSART1_SetRxInterruptHandler:	
  2306                           ; 1 bytes @ 0x2
  2307                           
  2308  0078                     ?_EUSART1_SetTxInterruptHandler:	
  2309                           ; 1 bytes @ 0x2
  2310                           
  2311  0078                     ?_EUSART1_SetFramingErrorHandler:	
  2312                           ; 1 bytes @ 0x2
  2313                           
  2314  0078                     ?_EUSART1_SetOverrunErrorHandler:	
  2315                           ; 1 bytes @ 0x2
  2316                           
  2317  0078                     ?_EUSART1_SetErrorHandler:	
  2318                           ; 1 bytes @ 0x2
  2319                           
  2320  0078                     ??_setState:	
  2321                           ; 1 bytes @ 0x2
  2322                           
  2323  0078                     ??_resetEdges:	
  2324                           ; 1 bytes @ 0x2
  2325                           
  2326  0078                     ??_countTargets:	
  2327                           ; 1 bytes @ 0x2
  2328                           
  2329  0078                     ??_TMR2_ISR:	
  2330                           ; 1 bytes @ 0x2
  2331                           
  2332  0078                     ??_INTERRUPT_InterruptManager:	
  2333                           ; 1 bytes @ 0x2
  2334                           
  2335  0078                     ??_isr_1ms:	
  2336                           ; 1 bytes @ 0x2
  2337                           
  2338  0078                     TMR2_SetInterruptHandler@InterruptHandler:	
  2339                           ; 1 bytes @ 0x2
  2340                           
  2341  0078                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  2342                           ; 2 bytes @ 0x2
  2343                           
  2344  0078                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  2345                           ; 2 bytes @ 0x2
  2346                           
  2347  0078                     EUSART1_SetErrorHandler@interruptHandler:	
  2348                           ; 2 bytes @ 0x2
  2349                           
  2350  0078                     EUSART1_SetTxInterruptHandler@interruptHandler:	
  2351                           ; 2 bytes @ 0x2
  2352                           
  2353  0078                     EUSART1_SetRxInterruptHandler@interruptHandler:	
  2354                           ; 2 bytes @ 0x2
  2355                           
  2356                           
  2357                           ; 2 bytes @ 0x2
  2358  0078                     	ds	1
  2359  0079                     setState@s:
  2360                           
  2361                           ; 1 bytes @ 0x3
  2362  0079                     	ds	1
  2363  007A                     ??_TMR2_SetInterruptHandler:
  2364  007A                     ??_EUSART1_Initialize:	
  2365                           ; 1 bytes @ 0x4
  2366                           
  2367  007A                     ??_EUSART1_SetRxInterruptHandler:	
  2368                           ; 1 bytes @ 0x4
  2369                           
  2370  007A                     ??_EUSART1_SetTxInterruptHandler:	
  2371                           ; 1 bytes @ 0x4
  2372                           
  2373  007A                     ??_EUSART1_SetFramingErrorHandler:	
  2374                           ; 1 bytes @ 0x4
  2375                           
  2376  007A                     ??_EUSART1_SetOverrunErrorHandler:	
  2377                           ; 1 bytes @ 0x4
  2378                           
  2379  007A                     ??_EUSART1_SetErrorHandler:	
  2380                           ; 1 bytes @ 0x4
  2381                           
  2382  007A                     ??_TMR2_Initialize:	
  2383                           ; 1 bytes @ 0x4
  2384                           
  2385                           
  2386                           ; 1 bytes @ 0x4
  2387  007A                     	ds	1
  2388  007B                     ??_SYSTEM_Initialize:
  2389                           
  2390                           	psect	cstackBANK0
  2391  0049                     __pcstackBANK0:	
  2392                           ; 1 bytes @ 0x5
  2393                           
  2394  0049                     ??_main:
  2395                           
  2396                           ; 1 bytes @ 0x0
  2397  0049                     	ds	2
  2398                           
  2399                           	psect	maintext
  2400  0053                     __pmaintext:	
  2401 ;;
  2402 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2403 ;;
  2404 ;; *************** function _main *****************
  2405 ;; Defined at:
  2406 ;;		line 121 in file "main.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;		None
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;		None
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  1    wreg      void 
  2413 ;; Registers used:
  2414 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2415 ;; Tracked objects:
  2416 ;;		On entry : B3F/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2422 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2423 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2424 ;;Total ram usage:        2 bytes
  2425 ;; Hardware stack levels required when called:    8
  2426 ;; This function calls:
  2427 ;;		_SYSTEM_Initialize
  2428 ;;		_TMR2_SetInterruptHandler
  2429 ;;		_countTargets
  2430 ;;		_resetEdges
  2431 ;;		_setState
  2432 ;; This function is called by:
  2433 ;;		Startup code after reset
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           
  2438                           ;psect for function _main
  2439  0053                     _main:
  2440  0053                     l2012:	
  2441                           ;incstack = 0
  2442                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2443                           
  2444                           
  2445                           ;main.c: 123:     SYSTEM_Initialize();
  2446  0053  3182  22FA  3180   	fcall	_SYSTEM_Initialize
  2447                           
  2448                           ;main.c: 124:     TMR2_SetInterruptHandler(isr_1ms);
  2449  0056  30CC               	movlw	low _isr_1ms
  2450  0057  00F8               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2451  0058  3002               	movlw	high _isr_1ms
  2452  0059  00F9               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2453  005A  3183  233F  3180   	fcall	_TMR2_SetInterruptHandler
  2454  005D                     l2014:
  2455                           
  2456                           ;main.c: 129:     (INTCONbits.GIE = 1);
  2457  005D  178B               	bsf	11,7	;volatile
  2458  005E                     l2016:
  2459                           
  2460                           ;main.c: 132:     (INTCONbits.PEIE = 1);
  2461  005E  170B               	bsf	11,6	;volatile
  2462  005F                     l2018:
  2463                           
  2464                           ;main.c: 140:     target.dwellCount = 3000u;
  2465  005F  30B8               	movlw	184
  2466  0060  0140               	movlb	0	; select bank0
  2467  0061  00A5               	movwf	_target+5
  2468  0062  300B               	movlw	11
  2469  0063  00A6               	movwf	_target+6
  2470  0064                     l2020:
  2471                           
  2472                           ;main.c: 141:     scan.count = 0;
  2473  0064  01B8               	clrf	_scan
  2474  0065                     l2022:
  2475                           
  2476                           ;main.c: 142:     scan.state = SCAN_INPUT_IDLE;
  2477  0065  01BB               	clrf	_scan+3
  2478  0066                     l2024:
  2479                           
  2480                           ;main.c: 144:     setState(TARGET_IDLE);
  2481  0066  3000               	movlw	0
  2482  0067  3183  2317  3180   	fcall	_setState
  2483  006A                     l2026:
  2484                           
  2485                           ;main.c: 147:         if (scan.tick) {
  2486  006A  0140               	movlb	0	; select bank0
  2487  006B  1C3C               	btfss	_scan+4,0
  2488  006C  286E               	goto	u1111
  2489  006D  286F               	goto	u1110
  2490  006E                     u1111:
  2491  006E  286A               	goto	l2026
  2492  006F                     u1110:
  2493  006F                     l2028:
  2494                           
  2495                           ;main.c: 148:             scan.tick = 0;
  2496  006F  103C               	bcf	_scan+4,0
  2497                           
  2498                           ;main.c: 150:             TRISAbits.TRISA2 = 1;
  2499  0070  1512               	bsf	18,2	;volatile
  2500  0071                     l2030:
  2501                           
  2502                           ;main.c: 151:             RC1STA = 0x0;
  2503  0071  0142               	movlb	2	; select bank2
  2504  0072  019D               	clrf	29	;volatile
  2505                           
  2506                           ;main.c: 152:             TX1STA = 0x0;
  2507  0073  019E               	clrf	30	;volatile
  2508                           
  2509                           ;main.c: 169:             switch (target.state) {
  2510  0074  291F               	goto	l2094
  2511  0075                     l2032:
  2512                           
  2513                           ;main.c: 171:                     if (target.dwellCount == 0) {
  2514  0075  0825               	movf	_target+5,w
  2515  0076  0426               	iorwf	_target+6,w
  2516  0077  1D03               	btfss	3,2
  2517  0078  287A               	goto	u1121
  2518  0079  287B               	goto	u1120
  2519  007A                     u1121:
  2520  007A  286A               	goto	l2026
  2521  007B                     u1120:
  2522  007B                     l405:	
  2523                           ;main.c: 173:                         do { LATAbits.LATA4 = 1; } while(0);
  2524                           
  2525  007B  1618               	bsf	24,4	;volatile
  2526  007C                     l407:	
  2527                           ;main.c: 174:                         do { LATAbits.LATA5 = 0; } while(0);
  2528                           
  2529  007C  1298               	bcf	24,5	;volatile
  2530  007D                     l408:
  2531                           
  2532                           ;main.c: 175:                         if (scan.fallingEdge) {
  2533  007D  1D3C               	btfss	_scan+4,2
  2534  007E  2880               	goto	u1131
  2535  007F  2881               	goto	u1130
  2536  0080                     u1131:
  2537  0080  289D               	goto	l2046
  2538  0081                     u1130:
  2539  0081                     l2034:
  2540                           
  2541                           ;main.c: 176:                             resetEdges();
  2542  0081  3183  2339  3180   	fcall	_resetEdges
  2543  0084                     l2036:
  2544                           
  2545                           ;main.c: 177:                             if (target.count > 0) {
  2546  0084  0140               	movlb	0	; select bank0
  2547  0085  0820               	movf	_target,w
  2548  0086  0421               	iorwf	_target+1,w
  2549  0087  1903               	btfsc	3,2
  2550  0088  288A               	goto	u1141
  2551  0089  288B               	goto	u1140
  2552  008A                     u1141:
  2553  008A  2898               	goto	l2044
  2554  008B                     u1140:
  2555  008B                     l411:	
  2556                           ;main.c: 179:                                 do { LATAbits.LATA5 = 1; } while(0);
  2557                           
  2558  008B  1698               	bsf	24,5	;volatile
  2559  008C                     l2038:
  2560                           
  2561                           ;main.c: 181:                                 target.count--;
  2562  008C  3001               	movlw	1
  2563  008D  02A0               	subwf	_target,f
  2564  008E  3000               	movlw	0
  2565  008F  3BA1               	subwfb	_target+1,f
  2566  0090                     l2040:
  2567                           
  2568                           ;main.c: 182:                                 setState(TARGET_ACTIVE);
  2569  0090  3001               	movlw	1
  2570  0091  3183  2317  3180   	fcall	_setState
  2571  0094                     l2042:
  2572                           
  2573                           ;main.c: 183:                                 target.modulo = 1;
  2574  0094  0140               	movlb	0	; select bank0
  2575  0095  01A2               	clrf	_target+2
  2576  0096  0AA2               	incf	_target+2,f
  2577                           
  2578                           ;main.c: 186:                             } else
  2579  0097  286A               	goto	l2026
  2580  0098                     l2044:
  2581                           
  2582                           ;main.c: 187:                             {;main.c: 188:                                
      +                           setState(TARGET_ASSERT_15TH_POSITION);
  2583  0098  3002               	movlw	2
  2584  0099  3183  2317  3180   	fcall	_setState
  2585  009C  286A               	goto	l2026
  2586  009D                     l2046:
  2587                           
  2588                           ;main.c: 191:                             countTargets();
  2589  009D  3181  2139  3180   	fcall	_countTargets
  2590  00A0  286A               	goto	l2026
  2591  00A1                     l416:	
  2592                           ;main.c: 196:                 case TARGET_ACTIVE:
  2593                           
  2594                           
  2595                           ;main.c: 197:                     if (scan.fallingEdge) {
  2596  00A1  1D3C               	btfss	_scan+4,2
  2597  00A2  28A4               	goto	u1151
  2598  00A3  28A5               	goto	u1150
  2599  00A4                     u1151:
  2600  00A4  28D7               	goto	l2066
  2601  00A5                     u1150:
  2602  00A5                     l2048:
  2603                           
  2604                           ;main.c: 198:                         resetEdges();
  2605  00A5  3183  2339  3180   	fcall	_resetEdges
  2606  00A8                     l2050:
  2607                           
  2608                           ;main.c: 199:                         if (target.count == 0) {
  2609  00A8  0140               	movlb	0	; select bank0
  2610  00A9  0820               	movf	_target,w
  2611  00AA  0421               	iorwf	_target+1,w
  2612  00AB  1D03               	btfss	3,2
  2613  00AC  28AE               	goto	u1161
  2614  00AD  28AF               	goto	u1160
  2615  00AE                     u1161:
  2616  00AE  28C7               	goto	l2060
  2617  00AF                     u1160:
  2618  00AF                     l419:	
  2619                           ;main.c: 200:                             do { LATAbits.LATA5 = 0; } while(0);
  2620                           
  2621  00AF  1298               	bcf	24,5	;volatile
  2622  00B0                     l2052:
  2623                           
  2624                           ;main.c: 201:                             if (target.modulo == 5 || target.modulo == 10 
      +                          || target.modulo >= 15) {
  2625  00B0  3005               	movlw	5
  2626  00B1  0622               	xorwf	_target+2,w
  2627  00B2  1903               	btfsc	3,2
  2628  00B3  28B5               	goto	u1171
  2629  00B4  28B6               	goto	u1170
  2630  00B5                     u1171:
  2631  00B5  28C2               	goto	l2058
  2632  00B6                     u1170:
  2633  00B6                     l2054:
  2634  00B6  300A               	movlw	10
  2635  00B7  0622               	xorwf	_target+2,w
  2636  00B8  1903               	btfsc	3,2
  2637  00B9  28BB               	goto	u1181
  2638  00BA  28BC               	goto	u1180
  2639  00BB                     u1181:
  2640  00BB  28C2               	goto	l2058
  2641  00BC                     u1180:
  2642  00BC                     l2056:
  2643  00BC  300F               	movlw	15
  2644  00BD  0222               	subwf	_target+2,w
  2645  00BE  1C03               	skipc
  2646  00BF  28C1               	goto	u1191
  2647  00C0  28C2               	goto	u1190
  2648  00C1                     u1191:
  2649  00C1  28D2               	goto	l2064
  2650  00C2                     u1190:
  2651  00C2                     l2058:
  2652                           
  2653                           ;main.c: 202:                                 setState(TARGET_ASSERT_15TH_POSITION);
  2654  00C2  3002               	movlw	2
  2655  00C3  3183  2317  3180   	fcall	_setState
  2656  00C6  28D2               	goto	l2064
  2657  00C7                     l2060:
  2658                           
  2659                           ;main.c: 205:                             if (target.dwellCount == 0) {
  2660  00C7  0825               	movf	_target+5,w
  2661  00C8  0426               	iorwf	_target+6,w
  2662  00C9  1D03               	btfss	3,2
  2663  00CA  28CC               	goto	u1201
  2664  00CB  28CD               	goto	u1200
  2665  00CC                     u1201:
  2666  00CC  28CE               	goto	l2062
  2667  00CD                     u1200:
  2668  00CD                     l426:	
  2669                           ;main.c: 206:                                 do { LATAbits.LATA5 = 1; } while(0);
  2670                           
  2671  00CD  1698               	bsf	24,5	;volatile
  2672  00CE                     l2062:
  2673                           
  2674                           ;main.c: 208:                             --target.count;
  2675  00CE  3001               	movlw	1
  2676  00CF  02A0               	subwf	_target,f
  2677  00D0  3000               	movlw	0
  2678  00D1  3BA1               	subwfb	_target+1,f
  2679  00D2                     l2064:
  2680                           
  2681                           ;main.c: 210:                         target.modulo++;
  2682  00D2  3001               	movlw	1
  2683  00D3  0140               	movlb	0	; select bank0
  2684  00D4  00C9               	movwf	??_main
  2685  00D5  0849               	movf	??_main,w
  2686  00D6  07A2               	addwf	_target+2,f
  2687  00D7                     l2066:
  2688                           
  2689                           ;main.c: 215:                     ++target.stuckCount;
  2690  00D7  3001               	movlw	1
  2691  00D8  07A3               	addwf	_target+3,f
  2692  00D9  3000               	movlw	0
  2693  00DA  3DA4               	addwfc	_target+4,f
  2694  00DB                     l2068:
  2695                           
  2696                           ;main.c: 216:                     if (target.stuckCount > 500u) setState(TARGET_IDLE);
  2697  00DB  3001               	movlw	1
  2698  00DC  0224               	subwf	_target+4,w
  2699  00DD  30F5               	movlw	245
  2700  00DE  1903               	skipnz
  2701  00DF  0223               	subwf	_target+3,w
  2702  00E0  1C03               	skipc
  2703  00E1  28E3               	goto	u1211
  2704  00E2  28E4               	goto	u1210
  2705  00E3                     u1211:
  2706  00E3  2936               	goto	l401
  2707  00E4                     u1210:
  2708  00E4                     l2070:
  2709  00E4  3000               	movlw	0
  2710  00E5  3183  2317  3180   	fcall	_setState
  2711  00E8  286A               	goto	l2026
  2712  00E9                     l429:	
  2713                           ;main.c: 219:                 case TARGET_ASSERT_15TH_POSITION:
  2714                           
  2715                           
  2716                           ;main.c: 220:                     if (scan.fallingEdge) {
  2717  00E9  1D3C               	btfss	_scan+4,2
  2718  00EA  28EC               	goto	u1221
  2719  00EB  28ED               	goto	u1220
  2720  00EC                     u1221:
  2721  00EC  28FB               	goto	l2080
  2722  00ED                     u1220:
  2723  00ED                     l2072:
  2724                           
  2725                           ;main.c: 221:                         resetEdges();
  2726  00ED  3183  2339  3180   	fcall	_resetEdges
  2727  00F0                     l2074:
  2728  00F0  0140               	movlb	0	; select bank0
  2729  00F1  1218               	bcf	24,4	;volatile
  2730  00F2                     l2076:
  2731  00F2  1298               	bcf	24,5	;volatile
  2732  00F3                     l2078:
  2733                           
  2734                           ;main.c: 225:                         target.dwellCount = 3000u;
  2735  00F3  30B8               	movlw	184
  2736  00F4  00A5               	movwf	_target+5
  2737  00F5  300B               	movlw	11
  2738  00F6  00A6               	movwf	_target+6
  2739                           
  2740                           ;main.c: 226:                         setState(TARGET_WAIT_15TH_POSITION);
  2741  00F7  3003               	movlw	3
  2742  00F8  3183  2317  3180   	fcall	_setState
  2743  00FB                     l2080:
  2744                           
  2745                           ;main.c: 231:                     ++target.stuckCount;
  2746  00FB  3001               	movlw	1
  2747  00FC  0140               	movlb	0	; select bank0
  2748  00FD  07A3               	addwf	_target+3,f
  2749  00FE  3000               	movlw	0
  2750  00FF  3DA4               	addwfc	_target+4,f
  2751  0100                     l2082:
  2752                           
  2753                           ;main.c: 232:                     if (target.stuckCount > 500u) setState(TARGET_IDLE);
  2754  0100  3001               	movlw	1
  2755  0101  0224               	subwf	_target+4,w
  2756  0102  30F5               	movlw	245
  2757  0103  1903               	skipnz
  2758  0104  0223               	subwf	_target+3,w
  2759  0105  1C03               	skipc
  2760  0106  2908               	goto	u1231
  2761  0107  2909               	goto	u1230
  2762  0108                     u1231:
  2763  0108  2936               	goto	l401
  2764  0109                     u1230:
  2765  0109                     l2084:
  2766  0109  3000               	movlw	0
  2767  010A  3183  2317  3180   	fcall	_setState
  2768  010D  286A               	goto	l2026
  2769  010E                     l2086:
  2770                           
  2771                           ;main.c: 236:                     if (target.dwellCount == 0) {
  2772  010E  0825               	movf	_target+5,w
  2773  010F  0426               	iorwf	_target+6,w
  2774  0110  1D03               	btfss	3,2
  2775  0111  2913               	goto	u1241
  2776  0112  2914               	goto	u1240
  2777  0113                     u1241:
  2778  0113  2936               	goto	l401
  2779  0114                     u1240:
  2780  0114                     l438:	
  2781                           ;main.c: 239:                         do { LATAbits.LATA4 = 1; } while(0);
  2782                           
  2783  0114  1618               	bsf	24,4	;volatile
  2784  0115                     l2088:
  2785                           
  2786                           ;main.c: 240:                         setState(TARGET_IDLE);
  2787  0115  3000               	movlw	0
  2788  0116  3183  2317  3180   	fcall	_setState
  2789  0119  286A               	goto	l2026
  2790  011A                     l2090:
  2791                           
  2792                           ;main.c: 245:                     setState(TARGET_IDLE);
  2793  011A  3000               	movlw	0
  2794  011B  3183  2317  3180   	fcall	_setState
  2795                           
  2796                           ;main.c: 246:                     break;
  2797  011E  286A               	goto	l2026
  2798  011F                     l2094:
  2799  011F  0140               	movlb	0	; select bank0
  2800  0120  0827               	movf	_target+7,w
  2801  0121  00C9               	movwf	??_main
  2802  0122  01CA               	clrf	??_main+1
  2803                           
  2804                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2805                           ; Switch size 1, requested type "simple"
  2806                           ; Number of cases is 1, Range of values is 0 to 0
  2807                           ; switch strategies available:
  2808                           ; Name         Instructions Cycles
  2809                           ; simple_byte            4     3 (average)
  2810                           ; direct_byte            8     6 (fixed)
  2811                           ; jumptable            260     6 (fixed)
  2812                           ;	Chosen strategy is simple_byte
  2813  0123  084A               	movf	??_main+1,w
  2814  0124  3A00               	xorlw	0	; case 0
  2815  0125  1903               	skipnz
  2816  0126  2928               	goto	l2140
  2817  0127  291A               	goto	l2090
  2818  0128                     l2140:
  2819                           
  2820                           ; Switch size 1, requested type "simple"
  2821                           ; Number of cases is 4, Range of values is 0 to 3
  2822                           ; switch strategies available:
  2823                           ; Name         Instructions Cycles
  2824                           ; simple_byte           13     7 (average)
  2825                           ; direct_byte           14     6 (fixed)
  2826                           ; jumptable            260     6 (fixed)
  2827                           ;	Chosen strategy is simple_byte
  2828  0128  0849               	movf	??_main,w
  2829  0129  3A00               	xorlw	0	; case 0
  2830  012A  1903               	skipnz
  2831  012B  2875               	goto	l2032
  2832  012C  3A01               	xorlw	1	; case 1
  2833  012D  1903               	skipnz
  2834  012E  28A1               	goto	l416
  2835  012F  3A03               	xorlw	3	; case 2
  2836  0130  1903               	skipnz
  2837  0131  28E9               	goto	l429
  2838  0132  3A01               	xorlw	1	; case 3
  2839  0133  1903               	skipnz
  2840  0134  290E               	goto	l2086
  2841  0135  291A               	goto	l2090
  2842  0136                     l401:	
  2843                           ;main.c: 248:         }
  2844                           
  2845  0136  286A               	goto	l2026
  2846  0137  3180  2837         	ljmp	start
  2847  0139                     __end_of_main:
  2848                           
  2849                           	psect	text1
  2850  0317                     __ptext1:	
  2851 ;; *************** function _setState *****************
  2852 ;; Defined at:
  2853 ;;		line 254 in file "main.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;  s               1    wreg     enum E7175
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;  s               1    3[COMMON] enum E7175
  2858 ;; Return value:  Size  Location     Type
  2859 ;;                  1    wreg      void 
  2860 ;; Registers used:
  2861 ;;		wreg, status,2, status,0, pclath, cstack
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2868 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2869 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2870 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2871 ;;Total ram usage:        2 bytes
  2872 ;; Hardware stack levels used:    1
  2873 ;; Hardware stack levels required when called:    6
  2874 ;; This function calls:
  2875 ;;		_resetEdges
  2876 ;; This function is called by:
  2877 ;;		_main
  2878 ;; This function uses a non-reentrant model
  2879 ;;
  2880                           
  2881                           
  2882                           ;psect for function _setState
  2883  0317                     _setState:
  2884                           
  2885                           ;incstack = 0
  2886                           ; Regs used in _setState: [wreg+status,2+status,0+pclath+cstack]
  2887                           ;setState@s stored from wreg
  2888  0317  00F9               	movwf	setState@s
  2889  0318                     l1796:
  2890                           
  2891                           ;main.c: 255:     target.state = s;
  2892  0318  0879               	movf	setState@s,w
  2893  0319  00F8               	movwf	??_setState
  2894  031A  0878               	movf	??_setState,w
  2895  031B  0140               	movlb	0	; select bank0
  2896  031C  00A7               	movwf	_target+7
  2897  031D                     l1798:
  2898                           
  2899                           ;main.c: 256:     resetEdges();
  2900  031D  3183  2339  3183   	fcall	_resetEdges
  2901  0320                     l448:
  2902  0320  0008               	return
  2903  0321                     __end_of_setState:
  2904                           
  2905                           	psect	text2
  2906  0339                     __ptext2:	
  2907 ;; *************** function _resetEdges *****************
  2908 ;; Defined at:
  2909 ;;		line 262 in file "main.c"
  2910 ;; Parameters:    Size  Location     Type
  2911 ;;		None
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;		None
  2914 ;; Return value:  Size  Location     Type
  2915 ;;                  1    wreg      void 
  2916 ;; Registers used:
  2917 ;;		status,2
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2927 ;;Total ram usage:        0 bytes
  2928 ;; Hardware stack levels used:    1
  2929 ;; Hardware stack levels required when called:    5
  2930 ;; This function calls:
  2931 ;;		Nothing
  2932 ;; This function is called by:
  2933 ;;		_main
  2934 ;;		_setState
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           
  2939                           ;psect for function _resetEdges
  2940  0339                     _resetEdges:
  2941  0339                     l1704:	
  2942                           ;incstack = 0
  2943                           ; Regs used in _resetEdges: [status,2]
  2944                           
  2945                           
  2946                           ;main.c: 263:     target.stuckCount = 0;
  2947  0339  0140               	movlb	0	; select bank0
  2948  033A  01A3               	clrf	_target+3
  2949  033B  01A4               	clrf	_target+4
  2950  033C                     l1706:
  2951                           
  2952                           ;main.c: 264:     scan.risingEdge = 0;
  2953  033C  10BC               	bcf	_scan+4,1
  2954  033D                     l1708:
  2955                           
  2956                           ;main.c: 265:     scan.fallingEdge = 0;
  2957  033D  113C               	bcf	_scan+4,2
  2958  033E                     l451:
  2959  033E  0008               	return
  2960  033F                     __end_of_resetEdges:
  2961                           
  2962                           	psect	text3
  2963  0139                     __ptext3:	
  2964 ;; *************** function _countTargets *****************
  2965 ;; Defined at:
  2966 ;;		line 302 in file "main.c"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;		None
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;		None
  2971 ;; Return value:  Size  Location     Type
  2972 ;;                  1    wreg      void 
  2973 ;; Registers used:
  2974 ;;		wreg, status,2
  2975 ;; Tracked objects:
  2976 ;;		On entry : 0/0
  2977 ;;		On exit  : 0/0
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2984 ;;Total ram usage:        0 bytes
  2985 ;; Hardware stack levels used:    1
  2986 ;; Hardware stack levels required when called:    5
  2987 ;; This function calls:
  2988 ;;		Nothing
  2989 ;; This function is called by:
  2990 ;;		_main
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994                           
  2995                           ;psect for function _countTargets
  2996  0139                     _countTargets:
  2997  0139                     l1800:	
  2998                           ;incstack = 0
  2999                           ; Regs used in _countTargets: [wreg+status,2]
  3000                           
  3001                           
  3002                           ;main.c: 303:     target.count = 0;
  3003  0139  0140               	movlb	0	; select bank0
  3004  013A  01A0               	clrf	_target
  3005  013B  01A1               	clrf	_target+1
  3006  013C                     l1802:
  3007                           
  3008                           ;main.c: 304:     if (PORTCbits.RC5 == 0) {
  3009  013C  1A8E               	btfsc	14,5	;volatile
  3010  013D  293F               	goto	u751
  3011  013E  2940               	goto	u750
  3012  013F                     u751:
  3013  013F  2944               	goto	l1806
  3014  0140                     u750:
  3015  0140                     l1804:
  3016                           
  3017                           ;main.c: 305:         target.count++;
  3018  0140  3001               	movlw	1
  3019  0141  07A0               	addwf	_target,f
  3020  0142  3000               	movlw	0
  3021  0143  3DA1               	addwfc	_target+1,f
  3022  0144                     l1806:
  3023                           
  3024                           ;main.c: 307:     if (PORTCbits.RC4 == 0) {
  3025  0144  1A0E               	btfsc	14,4	;volatile
  3026  0145  2947               	goto	u761
  3027  0146  2948               	goto	u760
  3028  0147                     u761:
  3029  0147  294C               	goto	l1810
  3030  0148                     u760:
  3031  0148                     l1808:
  3032                           
  3033                           ;main.c: 308:         target.count++;
  3034  0148  3001               	movlw	1
  3035  0149  07A0               	addwf	_target,f
  3036  014A  3000               	movlw	0
  3037  014B  3DA1               	addwfc	_target+1,f
  3038  014C                     l1810:
  3039                           
  3040                           ;main.c: 310:     if (PORTCbits.RC3 == 0) {
  3041  014C  198E               	btfsc	14,3	;volatile
  3042  014D  294F               	goto	u771
  3043  014E  2950               	goto	u770
  3044  014F                     u771:
  3045  014F  2954               	goto	l1814
  3046  0150                     u770:
  3047  0150                     l1812:
  3048                           
  3049                           ;main.c: 311:         target.count++;
  3050  0150  3001               	movlw	1
  3051  0151  07A0               	addwf	_target,f
  3052  0152  3000               	movlw	0
  3053  0153  3DA1               	addwfc	_target+1,f
  3054  0154                     l1814:
  3055                           
  3056                           ;main.c: 313:     if (PORTCbits.RC6 == 0) {
  3057  0154  1B0E               	btfsc	14,6	;volatile
  3058  0155  2957               	goto	u781
  3059  0156  2958               	goto	u780
  3060  0157                     u781:
  3061  0157  295C               	goto	l1818
  3062  0158                     u780:
  3063  0158                     l1816:
  3064                           
  3065                           ;main.c: 314:         target.count++;
  3066  0158  3001               	movlw	1
  3067  0159  07A0               	addwf	_target,f
  3068  015A  3000               	movlw	0
  3069  015B  3DA1               	addwfc	_target+1,f
  3070  015C                     l1818:
  3071                           
  3072                           ;main.c: 316:     if (PORTCbits.RC7 == 0) {
  3073  015C  1B8E               	btfsc	14,7	;volatile
  3074  015D  295F               	goto	u791
  3075  015E  2960               	goto	u790
  3076  015F                     u791:
  3077  015F  2964               	goto	l1822
  3078  0160                     u790:
  3079  0160                     l1820:
  3080                           
  3081                           ;main.c: 317:         target.count++;
  3082  0160  3001               	movlw	1
  3083  0161  07A0               	addwf	_target,f
  3084  0162  3000               	movlw	0
  3085  0163  3DA1               	addwfc	_target+1,f
  3086  0164                     l1822:
  3087                           
  3088                           ;main.c: 319:     if (PORTBbits.RB7 == 0) {
  3089  0164  1B8D               	btfsc	13,7	;volatile
  3090  0165  2967               	goto	u801
  3091  0166  2968               	goto	u800
  3092  0167                     u801:
  3093  0167  296C               	goto	l1826
  3094  0168                     u800:
  3095  0168                     l1824:
  3096                           
  3097                           ;main.c: 320:         target.count++;
  3098  0168  3001               	movlw	1
  3099  0169  07A0               	addwf	_target,f
  3100  016A  3000               	movlw	0
  3101  016B  3DA1               	addwfc	_target+1,f
  3102  016C                     l1826:
  3103                           
  3104                           ;main.c: 322:     if (PORTCbits.RC0 == 0) {
  3105  016C  180E               	btfsc	14,0	;volatile
  3106  016D  296F               	goto	u811
  3107  016E  2970               	goto	u810
  3108  016F                     u811:
  3109  016F  2974               	goto	l1830
  3110  0170                     u810:
  3111  0170                     l1828:
  3112                           
  3113                           ;main.c: 323:         target.count++;
  3114  0170  3001               	movlw	1
  3115  0171  07A0               	addwf	_target,f
  3116  0172  3000               	movlw	0
  3117  0173  3DA1               	addwfc	_target+1,f
  3118  0174                     l1830:
  3119                           
  3120                           ;main.c: 325:     if (PORTCbits.RC1 == 0) {
  3121  0174  188E               	btfsc	14,1	;volatile
  3122  0175  2977               	goto	u821
  3123  0176  2978               	goto	u820
  3124  0177                     u821:
  3125  0177  297C               	goto	l1834
  3126  0178                     u820:
  3127  0178                     l1832:
  3128                           
  3129                           ;main.c: 326:         target.count++;
  3130  0178  3001               	movlw	1
  3131  0179  07A0               	addwf	_target,f
  3132  017A  3000               	movlw	0
  3133  017B  3DA1               	addwfc	_target+1,f
  3134  017C                     l1834:
  3135                           
  3136                           ;main.c: 328:     if (PORTCbits.RC2 == 0) {
  3137  017C  190E               	btfsc	14,2	;volatile
  3138  017D  297F               	goto	u831
  3139  017E  2980               	goto	u830
  3140  017F                     u831:
  3141  017F  2984               	goto	l1838
  3142  0180                     u830:
  3143  0180                     l1836:
  3144                           
  3145                           ;main.c: 329:         target.count++;
  3146  0180  3001               	movlw	1
  3147  0181  07A0               	addwf	_target,f
  3148  0182  3000               	movlw	0
  3149  0183  3DA1               	addwfc	_target+1,f
  3150  0184                     l1838:
  3151                           
  3152                           ;main.c: 331:     if (PORTBbits.RB4 == 0) {
  3153  0184  1A0D               	btfsc	13,4	;volatile
  3154  0185  2987               	goto	u841
  3155  0186  2988               	goto	u840
  3156  0187                     u841:
  3157  0187  298C               	goto	l1842
  3158  0188                     u840:
  3159  0188                     l1840:
  3160                           
  3161                           ;main.c: 332:         target.count++;
  3162  0188  3001               	movlw	1
  3163  0189  07A0               	addwf	_target,f
  3164  018A  3000               	movlw	0
  3165  018B  3DA1               	addwfc	_target+1,f
  3166  018C                     l1842:
  3167                           
  3168                           ;main.c: 334:     if (PORTBbits.RB5 == 0) {
  3169  018C  1A8D               	btfsc	13,5	;volatile
  3170  018D  298F               	goto	u851
  3171  018E  2990               	goto	u850
  3172  018F                     u851:
  3173  018F  2994               	goto	l1846
  3174  0190                     u850:
  3175  0190                     l1844:
  3176                           
  3177                           ;main.c: 335:         target.count++;
  3178  0190  3001               	movlw	1
  3179  0191  07A0               	addwf	_target,f
  3180  0192  3000               	movlw	0
  3181  0193  3DA1               	addwfc	_target+1,f
  3182  0194                     l1846:
  3183                           
  3184                           ;main.c: 337:     if (PORTBbits.RB6 == 0) {
  3185  0194  1B0D               	btfsc	13,6	;volatile
  3186  0195  2997               	goto	u861
  3187  0196  2998               	goto	u860
  3188  0197                     u861:
  3189  0197  299C               	goto	l1850
  3190  0198                     u860:
  3191  0198                     l1848:
  3192                           
  3193                           ;main.c: 338:         target.count++;
  3194  0198  3001               	movlw	1
  3195  0199  07A0               	addwf	_target,f
  3196  019A  3000               	movlw	0
  3197  019B  3DA1               	addwfc	_target+1,f
  3198  019C                     l1850:
  3199                           
  3200                           ;main.c: 341:     if (PORTAbits.RA2 == 0) {
  3201  019C  190C               	btfsc	12,2	;volatile
  3202  019D  299F               	goto	u871
  3203  019E  29A0               	goto	u870
  3204  019F                     u871:
  3205  019F  29A4               	goto	l1854
  3206  01A0                     u870:
  3207  01A0                     l1852:
  3208                           
  3209                           ;main.c: 342:         target.count++;
  3210  01A0  3001               	movlw	1
  3211  01A1  07A0               	addwf	_target,f
  3212  01A2  3000               	movlw	0
  3213  01A3  3DA1               	addwfc	_target+1,f
  3214  01A4                     l1854:
  3215                           
  3216                           ;main.c: 345:     if (PORTAbits.RA1 == 0) {
  3217  01A4  188C               	btfsc	12,1	;volatile
  3218  01A5  29A7               	goto	u881
  3219  01A6  29A8               	goto	u880
  3220  01A7                     u881:
  3221  01A7  29AC               	goto	l1858
  3222  01A8                     u880:
  3223  01A8                     l1856:
  3224                           
  3225                           ;main.c: 346:         target.count++;
  3226  01A8  3001               	movlw	1
  3227  01A9  07A0               	addwf	_target,f
  3228  01AA  3000               	movlw	0
  3229  01AB  3DA1               	addwfc	_target+1,f
  3230  01AC                     l1858:
  3231                           
  3232                           ;main.c: 348:     if (PORTAbits.RA0 == 0) {
  3233  01AC  180C               	btfsc	12,0	;volatile
  3234  01AD  29AF               	goto	u891
  3235  01AE  29B0               	goto	u890
  3236  01AF                     u891:
  3237  01AF  29B4               	goto	l484
  3238  01B0                     u890:
  3239  01B0                     l1860:
  3240                           
  3241                           ;main.c: 349:         target.count++;
  3242  01B0  3001               	movlw	1
  3243  01B1  07A0               	addwf	_target,f
  3244  01B2  3000               	movlw	0
  3245  01B3  3DA1               	addwfc	_target+1,f
  3246  01B4                     l484:
  3247  01B4  0008               	return
  3248  01B5                     __end_of_countTargets:
  3249                           
  3250                           	psect	text4
  3251  02FA                     __ptext4:	
  3252 ;; *************** function _SYSTEM_Initialize *****************
  3253 ;; Defined at:
  3254 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3255 ;; Parameters:    Size  Location     Type
  3256 ;;		None
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;		None
  3259 ;; Return value:  Size  Location     Type
  3260 ;;                  1    wreg      void 
  3261 ;; Registers used:
  3262 ;;		wreg, status,2, status,0, pclath, cstack
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/0
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3272 ;;Total ram usage:        0 bytes
  3273 ;; Hardware stack levels used:    1
  3274 ;; Hardware stack levels required when called:    7
  3275 ;; This function calls:
  3276 ;;		_EUSART1_Initialize
  3277 ;;		_OSCILLATOR_Initialize
  3278 ;;		_PIN_MANAGER_Initialize
  3279 ;;		_PMD_Initialize
  3280 ;;		_TMR2_Initialize
  3281 ;; This function is called by:
  3282 ;;		_main
  3283 ;; This function uses a non-reentrant model
  3284 ;;
  3285                           
  3286                           
  3287                           ;psect for function _SYSTEM_Initialize
  3288  02FA                     _SYSTEM_Initialize:
  3289  02FA                     l1714:	
  3290                           ;incstack = 0
  3291                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3292                           
  3293                           
  3294                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  3295  02FA  3183  232B  3182   	fcall	_PMD_Initialize
  3296  02FD                     l1716:
  3297                           
  3298                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  3299  02FD  3182  2272  3182   	fcall	_PIN_MANAGER_Initialize
  3300  0300                     l1718:
  3301                           
  3302                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  3303  0300  3183  2321  3182   	fcall	_OSCILLATOR_Initialize
  3304  0303                     l1720:
  3305                           
  3306                           ;mcc_generated_files/mcc.c: 55:     TMR2_Initialize();
  3307  0303  3182  22E4  3182   	fcall	_TMR2_Initialize
  3308  0306                     l1722:
  3309                           
  3310                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  3311  0306  3181  21FB  3182   	fcall	_EUSART1_Initialize
  3312  0309                     l152:
  3313  0309  0008               	return
  3314  030A                     __end_of_SYSTEM_Initialize:
  3315                           
  3316                           	psect	text5
  3317  02E4                     __ptext5:	
  3318 ;; *************** function _TMR2_Initialize *****************
  3319 ;; Defined at:
  3320 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  3321 ;; Parameters:    Size  Location     Type
  3322 ;;		None
  3323 ;; Auto vars:     Size  Location     Type
  3324 ;;		None
  3325 ;; Return value:  Size  Location     Type
  3326 ;;                  1    wreg      void 
  3327 ;; Registers used:
  3328 ;;		wreg, status,2, status,0, pclath, cstack
  3329 ;; Tracked objects:
  3330 ;;		On entry : 0/0
  3331 ;;		On exit  : 0/0
  3332 ;;		Unchanged: 0/0
  3333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3338 ;;Total ram usage:        0 bytes
  3339 ;; Hardware stack levels used:    1
  3340 ;; Hardware stack levels required when called:    6
  3341 ;; This function calls:
  3342 ;;		_TMR2_SetInterruptHandler
  3343 ;; This function is called by:
  3344 ;;		_SYSTEM_Initialize
  3345 ;; This function uses a non-reentrant model
  3346 ;;
  3347                           
  3348                           
  3349                           ;psect for function _TMR2_Initialize
  3350  02E4                     _TMR2_Initialize:
  3351  02E4                     l1602:	
  3352                           ;incstack = 0
  3353                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3354                           
  3355                           
  3356                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x01;
  3357  02E4  3001               	movlw	1
  3358  02E5  0145               	movlb	5	; select bank5
  3359  02E6  0090               	movwf	16	;volatile
  3360  02E7                     l1604:
  3361                           
  3362                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x00;
  3363  02E7  018F               	clrf	15	;volatile
  3364  02E8                     l1606:
  3365                           
  3366                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
  3367  02E8  0191               	clrf	17	;volatile
  3368                           
  3369                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0x7C;
  3370  02E9  307C               	movlw	124
  3371  02EA  008D               	movwf	13	;volatile
  3372  02EB                     l1608:
  3373                           
  3374                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
  3375  02EB  018C               	clrf	12	;volatile
  3376  02EC                     l1610:
  3377                           
  3378                           ;mcc_generated_files/tmr2.c: 84:     PIR4bits.TMR2IF = 0;
  3379  02EC  014E               	movlb	14	; select bank14
  3380  02ED  1090               	bcf	16,1	;volatile
  3381  02EE                     l1612:
  3382                           
  3383                           ;mcc_generated_files/tmr2.c: 87:     PIE4bits.TMR2IE = 1;
  3384  02EE  149A               	bsf	26,1	;volatile
  3385  02EF                     l1614:
  3386                           
  3387                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  3388  02EF  3075               	movlw	low _TMR2_DefaultInterruptHandler
  3389  02F0  00F8               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  3390  02F1  3003               	movlw	high _TMR2_DefaultInterruptHandler
  3391  02F2  00F9               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  3392  02F3  3183  233F  3182   	fcall	_TMR2_SetInterruptHandler
  3393  02F6                     l1616:
  3394                           
  3395                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0xE0;
  3396  02F6  30E0               	movlw	224
  3397  02F7  0145               	movlb	5	; select bank5
  3398  02F8  008E               	movwf	14	;volatile
  3399  02F9                     l37:
  3400  02F9  0008               	return
  3401  02FA                     __end_of_TMR2_Initialize:
  3402                           
  3403                           	psect	text6
  3404  033F                     __ptext6:	
  3405 ;; *************** function _TMR2_SetInterruptHandler *****************
  3406 ;; Defined at:
  3407 ;;		line 186 in file "mcc_generated_files/tmr2.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  3410 ;;		 -> isr_1ms(1), TMR2_DefaultInterruptHandler(1), 
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;		None
  3413 ;; Return value:  Size  Location     Type
  3414 ;;                  1    wreg      void 
  3415 ;; Registers used:
  3416 ;;		wreg
  3417 ;; Tracked objects:
  3418 ;;		On entry : 0/0
  3419 ;;		On exit  : 0/0
  3420 ;;		Unchanged: 0/0
  3421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3422 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3425 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3426 ;;Total ram usage:        2 bytes
  3427 ;; Hardware stack levels used:    1
  3428 ;; Hardware stack levels required when called:    5
  3429 ;; This function calls:
  3430 ;;		Nothing
  3431 ;; This function is called by:
  3432 ;;		_TMR2_Initialize
  3433 ;;		_main
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437                           
  3438                           ;psect for function _TMR2_SetInterruptHandler
  3439  033F                     _TMR2_SetInterruptHandler:
  3440  033F                     l1570:	
  3441                           ;incstack = 0
  3442                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  3443                           
  3444                           
  3445                           ;mcc_generated_files/tmr2.c: 187:     TMR2_InterruptHandler = InterruptHandler;
  3446  033F  0879               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  3447  0340  0140               	movlb	0	; select bank0
  3448  0341  00C8               	movwf	_TMR2_InterruptHandler+1
  3449  0342  0878               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  3450  0343  00C7               	movwf	_TMR2_InterruptHandler
  3451  0344                     l83:
  3452  0344  0008               	return
  3453  0345                     __end_of_TMR2_SetInterruptHandler:
  3454                           
  3455                           	psect	text7
  3456  032B                     __ptext7:	
  3457 ;; *************** function _PMD_Initialize *****************
  3458 ;; Defined at:
  3459 ;;		line 75 in file "mcc_generated_files/mcc.c"
  3460 ;; Parameters:    Size  Location     Type
  3461 ;;		None
  3462 ;; Auto vars:     Size  Location     Type
  3463 ;;		None
  3464 ;; Return value:  Size  Location     Type
  3465 ;;                  1    wreg      void 
  3466 ;; Registers used:
  3467 ;;		status,2
  3468 ;; Tracked objects:
  3469 ;;		On entry : 0/0
  3470 ;;		On exit  : 0/0
  3471 ;;		Unchanged: 0/0
  3472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3477 ;;Total ram usage:        0 bytes
  3478 ;; Hardware stack levels used:    1
  3479 ;; Hardware stack levels required when called:    5
  3480 ;; This function calls:
  3481 ;;		Nothing
  3482 ;; This function is called by:
  3483 ;;		_SYSTEM_Initialize
  3484 ;; This function uses a non-reentrant model
  3485 ;;
  3486                           
  3487                           
  3488                           ;psect for function _PMD_Initialize
  3489  032B                     _PMD_Initialize:
  3490  032B                     l1622:	
  3491                           ;incstack = 0
  3492                           ; Regs used in _PMD_Initialize: [status,2]
  3493                           
  3494                           
  3495                           ;mcc_generated_files/mcc.c: 78:     PMD0 = 0x00;
  3496  032B  014F               	movlb	15	; select bank15
  3497  032C  0196               	clrf	22	;volatile
  3498                           
  3499                           ;mcc_generated_files/mcc.c: 80:     PMD1 = 0x00;
  3500  032D  0197               	clrf	23	;volatile
  3501                           
  3502                           ;mcc_generated_files/mcc.c: 82:     PMD2 = 0x00;
  3503  032E  0198               	clrf	24	;volatile
  3504                           
  3505                           ;mcc_generated_files/mcc.c: 84:     PMD3 = 0x00;
  3506  032F  0199               	clrf	25	;volatile
  3507                           
  3508                           ;mcc_generated_files/mcc.c: 86:     PMD4 = 0x00;
  3509  0330  019A               	clrf	26	;volatile
  3510                           
  3511                           ;mcc_generated_files/mcc.c: 88:     PMD5 = 0x00;
  3512  0331  019B               	clrf	27	;volatile
  3513  0332                     l158:
  3514  0332  0008               	return
  3515  0333                     __end_of_PMD_Initialize:
  3516                           
  3517                           	psect	text8
  3518  0272                     __ptext8:	
  3519 ;; *************** function _PIN_MANAGER_Initialize *****************
  3520 ;; Defined at:
  3521 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3522 ;; Parameters:    Size  Location     Type
  3523 ;;		None
  3524 ;; Auto vars:     Size  Location     Type
  3525 ;;		None
  3526 ;; Return value:  Size  Location     Type
  3527 ;;                  1    wreg      void 
  3528 ;; Registers used:
  3529 ;;		wreg, status,2
  3530 ;; Tracked objects:
  3531 ;;		On entry : 0/0
  3532 ;;		On exit  : 0/0
  3533 ;;		Unchanged: 0/0
  3534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3539 ;;Total ram usage:        0 bytes
  3540 ;; Hardware stack levels used:    1
  3541 ;; Hardware stack levels required when called:    5
  3542 ;; This function calls:
  3543 ;;		Nothing
  3544 ;; This function is called by:
  3545 ;;		_SYSTEM_Initialize
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548                           
  3549                           
  3550                           ;psect for function _PIN_MANAGER_Initialize
  3551  0272                     _PIN_MANAGER_Initialize:
  3552  0272                     l1624:	
  3553                           ;incstack = 0
  3554                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3555                           
  3556                           
  3557                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3558  0272  0140               	movlb	0	; select bank0
  3559  0273  0198               	clrf	24	;volatile
  3560                           
  3561                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3562  0274  0199               	clrf	25	;volatile
  3563                           
  3564                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  3565  0275  019A               	clrf	26	;volatile
  3566  0276                     l1626:
  3567                           
  3568                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x07;
  3569  0276  3007               	movlw	7
  3570  0277  0092               	movwf	18	;volatile
  3571  0278                     l1628:
  3572                           
  3573                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
  3574  0278  30F0               	movlw	240
  3575  0279  0093               	movwf	19	;volatile
  3576  027A                     l1630:
  3577                           
  3578                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
  3579  027A  30FF               	movlw	255
  3580  027B  0094               	movwf	20	;volatile
  3581  027C                     l1632:
  3582                           
  3583                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x00;
  3584  027C  017E               	movlb	62	; select bank62
  3585  027D  01CE               	clrf	78	;volatile
  3586  027E                     l1634:
  3587                           
  3588                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
  3589  027E  01C3               	clrf	67	;volatile
  3590  027F                     l1636:
  3591                           
  3592                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x00;
  3593  027F  01B8               	clrf	56	;volatile
  3594  0280                     l1638:
  3595                           
  3596                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  3597  0280  01C4               	clrf	68	;volatile
  3598  0281                     l1640:
  3599                           
  3600                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  3601  0281  01B9               	clrf	57	;volatile
  3602  0282                     l1642:
  3603                           
  3604                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  3605  0282  01CF               	clrf	79	;volatile
  3606  0283                     l1644:
  3607                           
  3608                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  3609  0283  01BA               	clrf	58	;volatile
  3610  0284                     l1646:
  3611                           
  3612                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  3613  0284  01C5               	clrf	69	;volatile
  3614  0285                     l1648:
  3615                           
  3616                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  3617  0285  01D0               	clrf	80	;volatile
  3618                           
  3619                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x1F;
  3620  0286  301F               	movlw	31
  3621  0287  00BB               	movwf	59	;volatile
  3622  0288                     l1650:
  3623                           
  3624                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0x00;
  3625  0288  01C6               	clrf	70	;volatile
  3626  0289                     l1652:
  3627                           
  3628                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0x3F;
  3629  0289  303F               	movlw	63
  3630  028A  00D1               	movwf	81	;volatile
  3631  028B                     l1654:
  3632                           
  3633                           ;mcc_generated_files/pin_manager.c: 102:     INLVLA = 0x3F;
  3634  028B  303F               	movlw	63
  3635  028C  00BC               	movwf	60	;volatile
  3636  028D                     l1656:
  3637                           
  3638                           ;mcc_generated_files/pin_manager.c: 103:     INLVLB = 0x00;
  3639  028D  01C7               	clrf	71	;volatile
  3640                           
  3641                           ;mcc_generated_files/pin_manager.c: 104:     INLVLC = 0x3F;
  3642  028E  303F               	movlw	63
  3643  028F  00D2               	movwf	82	;volatile
  3644                           
  3645                           ;mcc_generated_files/pin_manager.c: 113:     RA2PPS = 0x0F;
  3646  0290  300F               	movlw	15
  3647  0291  0092               	movwf	18	;volatile
  3648  0292                     l205:
  3649  0292  0008               	return
  3650  0293                     __end_of_PIN_MANAGER_Initialize:
  3651                           
  3652                           	psect	text9
  3653  0321                     __ptext9:	
  3654 ;; *************** function _OSCILLATOR_Initialize *****************
  3655 ;; Defined at:
  3656 ;;		line 59 in file "mcc_generated_files/mcc.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;		None
  3659 ;; Auto vars:     Size  Location     Type
  3660 ;;		None
  3661 ;; Return value:  Size  Location     Type
  3662 ;;                  1    wreg      void 
  3663 ;; Registers used:
  3664 ;;		wreg, status,2
  3665 ;; Tracked objects:
  3666 ;;		On entry : 0/0
  3667 ;;		On exit  : 0/0
  3668 ;;		Unchanged: 0/0
  3669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3674 ;;Total ram usage:        0 bytes
  3675 ;; Hardware stack levels used:    1
  3676 ;; Hardware stack levels required when called:    5
  3677 ;; This function calls:
  3678 ;;		Nothing
  3679 ;; This function is called by:
  3680 ;;		_SYSTEM_Initialize
  3681 ;; This function uses a non-reentrant model
  3682 ;;
  3683                           
  3684                           
  3685                           ;psect for function _OSCILLATOR_Initialize
  3686  0321                     _OSCILLATOR_Initialize:
  3687  0321                     l1658:	
  3688                           ;incstack = 0
  3689                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3690                           
  3691                           
  3692                           ;mcc_generated_files/mcc.c: 62:     OSCCON1 = 0x60;
  3693  0321  3060               	movlw	96
  3694  0322  0151               	movlb	17	; select bank17
  3695  0323  008D               	movwf	13	;volatile
  3696  0324                     l1660:
  3697                           
  3698                           ;mcc_generated_files/mcc.c: 64:     OSCCON3 = 0x00;
  3699  0324  018F               	clrf	15	;volatile
  3700  0325                     l1662:
  3701                           
  3702                           ;mcc_generated_files/mcc.c: 66:     OSCEN = 0x00;
  3703  0325  0191               	clrf	17	;volatile
  3704                           
  3705                           ;mcc_generated_files/mcc.c: 68:     OSCFRQ = 0x06;
  3706  0326  3006               	movlw	6
  3707  0327  0093               	movwf	19	;volatile
  3708  0328                     l1664:
  3709                           
  3710                           ;mcc_generated_files/mcc.c: 70:     OSCSTAT = 0x00;
  3711  0328  0190               	clrf	16	;volatile
  3712  0329                     l1666:
  3713                           
  3714                           ;mcc_generated_files/mcc.c: 72:     OSCTUNE = 0x00;
  3715  0329  0192               	clrf	18	;volatile
  3716  032A                     l155:
  3717  032A  0008               	return
  3718  032B                     __end_of_OSCILLATOR_Initialize:
  3719                           
  3720                           	psect	text10
  3721  01FB                     __ptext10:	
  3722 ;; *************** function _EUSART1_Initialize *****************
  3723 ;; Defined at:
  3724 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;		None
  3727 ;; Auto vars:     Size  Location     Type
  3728 ;;		None
  3729 ;; Return value:  Size  Location     Type
  3730 ;;                  1    wreg      void 
  3731 ;; Registers used:
  3732 ;;		wreg, status,2, status,0, pclath, cstack
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3740 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3741 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3742 ;;Total ram usage:        1 bytes
  3743 ;; Hardware stack levels used:    1
  3744 ;; Hardware stack levels required when called:    6
  3745 ;; This function calls:
  3746 ;;		_EUSART1_SetErrorHandler
  3747 ;;		_EUSART1_SetFramingErrorHandler
  3748 ;;		_EUSART1_SetOverrunErrorHandler
  3749 ;;		_EUSART1_SetRxInterruptHandler
  3750 ;;		_EUSART1_SetTxInterruptHandler
  3751 ;; This function is called by:
  3752 ;;		_SYSTEM_Initialize
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756                           
  3757                           ;psect for function _EUSART1_Initialize
  3758  01FB                     _EUSART1_Initialize:
  3759  01FB                     l1668:	
  3760                           ;incstack = 0
  3761                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3762                           
  3763                           
  3764                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
  3765  01FB  014E               	movlb	14	; select bank14
  3766  01FC  1299               	bcf	25,5	;volatile
  3767  01FD                     l1670:
  3768                           
  3769                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  3770  01FD  3039               	movlw	low _EUSART1_Receive_ISR
  3771  01FE  00F8               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  3772  01FF  3002               	movlw	high _EUSART1_Receive_ISR
  3773  0200  00F9               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  3774  0201  3183  234B  3181   	fcall	_EUSART1_SetRxInterruptHandler
  3775  0204                     l1672:
  3776                           
  3777                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
  3778  0204  014E               	movlb	14	; select bank14
  3779  0205  1219               	bcf	25,4	;volatile
  3780                           
  3781                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  3782  0206  3093               	movlw	low _EUSART1_Transmit_ISR
  3783  0207  00F8               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
  3784  0208  3002               	movlw	high _EUSART1_Transmit_ISR
  3785  0209  00F9               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
  3786  020A  3183  2345  3181   	fcall	_EUSART1_SetTxInterruptHandler
  3787  020D                     l1674:
  3788                           
  3789                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
  3790  020D  3008               	movlw	8
  3791  020E  0142               	movlb	2	; select bank2
  3792  020F  009F               	movwf	31	;volatile
  3793  0210                     l1676:
  3794                           
  3795                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x80;
  3796  0210  3080               	movlw	128
  3797  0211  009D               	movwf	29	;volatile
  3798  0212                     l1678:
  3799                           
  3800                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
  3801  0212  3024               	movlw	36
  3802  0213  009E               	movwf	30	;volatile
  3803  0214                     l1680:
  3804                           
  3805                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x44;
  3806  0214  3044               	movlw	68
  3807  0215  009B               	movwf	27	;volatile
  3808  0216                     l1682:
  3809                           
  3810                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x00;
  3811  0216  019C               	clrf	28	;volatile
  3812  0217                     l1684:
  3813                           
  3814                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  3815  0217  3076               	movlw	low _EUSART1_DefaultFramingErrorHandler
  3816  0218  00F8               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
  3817  0219  3003               	movlw	high _EUSART1_DefaultFramingErrorHandler
  3818  021A  00F9               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
  3819  021B  3183  2357  3181   	fcall	_EUSART1_SetFramingErrorHandler
  3820  021E                     l1686:
  3821                           
  3822                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  3823  021E  306D               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  3824  021F  00F8               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
  3825  0220  3003               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  3826  0221  00F9               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
  3827  0222  3183  2351  3181   	fcall	_EUSART1_SetOverrunErrorHandler
  3828  0225                     l1688:
  3829                           
  3830                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  3831  0225  3071               	movlw	low _EUSART1_DefaultErrorHandler
  3832  0226  00F8               	movwf	EUSART1_SetErrorHandler@interruptHandler
  3833  0227  3003               	movlw	high _EUSART1_DefaultErrorHandler
  3834  0228  00F9               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
  3835  0229  3183  235D  3181   	fcall	_EUSART1_SetErrorHandler
  3836                           
  3837                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  3838  022C  01F0               	clrf	_eusart1RxLastError	;volatile
  3839                           
  3840                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  3841  022D  01F5               	clrf	_eusart1TxHead	;volatile
  3842                           
  3843                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  3844  022E  01F4               	clrf	_eusart1TxTail	;volatile
  3845  022F                     l1690:
  3846                           
  3847                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  3848  022F  3040               	movlw	64
  3849  0230  00FA               	movwf	??_EUSART1_Initialize
  3850  0231  087A               	movf	??_EUSART1_Initialize,w
  3851  0232  00FB               	movwf	_eusart1TxBufferRemaining	;volatile
  3852  0233                     l1692:
  3853                           
  3854                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  3855  0233  01F3               	clrf	_eusart1RxHead	;volatile
  3856  0234                     l1694:
  3857                           
  3858                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  3859  0234  01F2               	clrf	_eusart1RxTail	;volatile
  3860  0235                     l1696:
  3861                           
  3862                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  3863  0235  01F1               	clrf	_eusart1RxCount	;volatile
  3864  0236                     l1698:
  3865                           
  3866                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
  3867  0236  014E               	movlb	14	; select bank14
  3868  0237  1699               	bsf	25,5	;volatile
  3869  0238                     l283:
  3870  0238  0008               	return
  3871  0239                     __end_of_EUSART1_Initialize:
  3872                           
  3873                           	psect	text11
  3874  0345                     __ptext11:	
  3875 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  3876 ;; Defined at:
  3877 ;;		line 285 in file "mcc_generated_files/eusart1.c"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  3880 ;;		 -> EUSART1_Transmit_ISR(1), 
  3881 ;; Auto vars:     Size  Location     Type
  3882 ;;		None
  3883 ;; Return value:  Size  Location     Type
  3884 ;;                  1    wreg      void 
  3885 ;; Registers used:
  3886 ;;		wreg
  3887 ;; Tracked objects:
  3888 ;;		On entry : 0/0
  3889 ;;		On exit  : 0/0
  3890 ;;		Unchanged: 0/0
  3891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3892 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3895 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3896 ;;Total ram usage:        2 bytes
  3897 ;; Hardware stack levels used:    1
  3898 ;; Hardware stack levels required when called:    5
  3899 ;; This function calls:
  3900 ;;		Nothing
  3901 ;; This function is called by:
  3902 ;;		_EUSART1_Initialize
  3903 ;; This function uses a non-reentrant model
  3904 ;;
  3905                           
  3906                           
  3907                           ;psect for function _EUSART1_SetTxInterruptHandler
  3908  0345                     _EUSART1_SetTxInterruptHandler:
  3909  0345                     l1574:	
  3910                           ;incstack = 0
  3911                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
  3912                           
  3913                           
  3914                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  3915  0345  0879               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
  3916  0346  0140               	movlb	0	; select bank0
  3917  0347  00C6               	movwf	_EUSART1_TxDefaultInterruptHandler+1
  3918  0348  0878               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
  3919  0349  00C5               	movwf	_EUSART1_TxDefaultInterruptHandler
  3920  034A                     l355:
  3921  034A  0008               	return
  3922  034B                     __end_of_EUSART1_SetTxInterruptHandler:
  3923                           
  3924                           	psect	text12
  3925  034B                     __ptext12:	
  3926 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  3927 ;; Defined at:
  3928 ;;		line 289 in file "mcc_generated_files/eusart1.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  3931 ;;		 -> EUSART1_Receive_ISR(1), 
  3932 ;; Auto vars:     Size  Location     Type
  3933 ;;		None
  3934 ;; Return value:  Size  Location     Type
  3935 ;;                  1    wreg      void 
  3936 ;; Registers used:
  3937 ;;		wreg
  3938 ;; Tracked objects:
  3939 ;;		On entry : 0/0
  3940 ;;		On exit  : 0/0
  3941 ;;		Unchanged: 0/0
  3942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3943 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3946 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3947 ;;Total ram usage:        2 bytes
  3948 ;; Hardware stack levels used:    1
  3949 ;; Hardware stack levels required when called:    5
  3950 ;; This function calls:
  3951 ;;		Nothing
  3952 ;; This function is called by:
  3953 ;;		_EUSART1_Initialize
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956                           
  3957                           
  3958                           ;psect for function _EUSART1_SetRxInterruptHandler
  3959  034B                     _EUSART1_SetRxInterruptHandler:
  3960  034B                     l1572:	
  3961                           ;incstack = 0
  3962                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
  3963                           
  3964                           
  3965                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  3966  034B  0879               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
  3967  034C  0140               	movlb	0	; select bank0
  3968  034D  00C4               	movwf	_EUSART1_RxDefaultInterruptHandler+1
  3969  034E  0878               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
  3970  034F  00C3               	movwf	_EUSART1_RxDefaultInterruptHandler
  3971  0350                     l358:
  3972  0350  0008               	return
  3973  0351                     __end_of_EUSART1_SetRxInterruptHandler:
  3974                           
  3975                           	psect	text13
  3976  0351                     __ptext13:	
  3977 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  3978 ;; Defined at:
  3979 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  3980 ;; Parameters:    Size  Location     Type
  3981 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  3982 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  3983 ;; Auto vars:     Size  Location     Type
  3984 ;;		None
  3985 ;; Return value:  Size  Location     Type
  3986 ;;                  1    wreg      void 
  3987 ;; Registers used:
  3988 ;;		wreg
  3989 ;; Tracked objects:
  3990 ;;		On entry : 0/0
  3991 ;;		On exit  : 0/0
  3992 ;;		Unchanged: 0/0
  3993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3994 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3997 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3998 ;;Total ram usage:        2 bytes
  3999 ;; Hardware stack levels used:    1
  4000 ;; Hardware stack levels required when called:    5
  4001 ;; This function calls:
  4002 ;;		Nothing
  4003 ;; This function is called by:
  4004 ;;		_EUSART1_Initialize
  4005 ;; This function uses a non-reentrant model
  4006 ;;
  4007                           
  4008                           
  4009                           ;psect for function _EUSART1_SetOverrunErrorHandler
  4010  0351                     _EUSART1_SetOverrunErrorHandler:
  4011  0351                     l1578:	
  4012                           ;incstack = 0
  4013                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
  4014                           
  4015                           
  4016                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
  4017  0351  0879               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
  4018  0352  0140               	movlb	0	; select bank0
  4019  0353  00C0               	movwf	_EUSART1_OverrunErrorHandler+1
  4020  0354  0878               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
  4021  0355  00BF               	movwf	_EUSART1_OverrunErrorHandler
  4022  0356                     l349:
  4023  0356  0008               	return
  4024  0357                     __end_of_EUSART1_SetOverrunErrorHandler:
  4025                           
  4026                           	psect	text14
  4027  0357                     __ptext14:	
  4028 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  4029 ;; Defined at:
  4030 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  4031 ;; Parameters:    Size  Location     Type
  4032 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  4033 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  4034 ;; Auto vars:     Size  Location     Type
  4035 ;;		None
  4036 ;; Return value:  Size  Location     Type
  4037 ;;                  1    wreg      void 
  4038 ;; Registers used:
  4039 ;;		wreg
  4040 ;; Tracked objects:
  4041 ;;		On entry : 0/0
  4042 ;;		On exit  : 0/0
  4043 ;;		Unchanged: 0/0
  4044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4045 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4048 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4049 ;;Total ram usage:        2 bytes
  4050 ;; Hardware stack levels used:    1
  4051 ;; Hardware stack levels required when called:    5
  4052 ;; This function calls:
  4053 ;;		Nothing
  4054 ;; This function is called by:
  4055 ;;		_EUSART1_Initialize
  4056 ;; This function uses a non-reentrant model
  4057 ;;
  4058                           
  4059                           
  4060                           ;psect for function _EUSART1_SetFramingErrorHandler
  4061  0357                     _EUSART1_SetFramingErrorHandler:
  4062  0357                     l1576:	
  4063                           ;incstack = 0
  4064                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
  4065                           
  4066                           
  4067                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
  4068  0357  0879               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
  4069  0358  0140               	movlb	0	; select bank0
  4070  0359  00C2               	movwf	_EUSART1_FramingErrorHandler+1
  4071  035A  0878               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
  4072  035B  00C1               	movwf	_EUSART1_FramingErrorHandler
  4073  035C                     l346:
  4074  035C  0008               	return
  4075  035D                     __end_of_EUSART1_SetFramingErrorHandler:
  4076                           
  4077                           	psect	text15
  4078  035D                     __ptext15:	
  4079 ;; *************** function _EUSART1_SetErrorHandler *****************
  4080 ;; Defined at:
  4081 ;;		line 281 in file "mcc_generated_files/eusart1.c"
  4082 ;; Parameters:    Size  Location     Type
  4083 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  4084 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;		None
  4087 ;; Return value:  Size  Location     Type
  4088 ;;                  1    wreg      void 
  4089 ;; Registers used:
  4090 ;;		wreg
  4091 ;; Tracked objects:
  4092 ;;		On entry : 0/0
  4093 ;;		On exit  : 0/0
  4094 ;;		Unchanged: 0/0
  4095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4096 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4099 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4100 ;;Total ram usage:        2 bytes
  4101 ;; Hardware stack levels used:    1
  4102 ;; Hardware stack levels required when called:    5
  4103 ;; This function calls:
  4104 ;;		Nothing
  4105 ;; This function is called by:
  4106 ;;		_EUSART1_Initialize
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110                           
  4111                           ;psect for function _EUSART1_SetErrorHandler
  4112  035D                     _EUSART1_SetErrorHandler:
  4113  035D                     l1580:	
  4114                           ;incstack = 0
  4115                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
  4116                           
  4117                           
  4118                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
  4119  035D  0879               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
  4120  035E  0140               	movlb	0	; select bank0
  4121  035F  00BE               	movwf	_EUSART1_ErrorHandler+1
  4122  0360  0878               	movf	EUSART1_SetErrorHandler@interruptHandler,w
  4123  0361  00BD               	movwf	_EUSART1_ErrorHandler
  4124  0362                     l352:
  4125  0362  0008               	return
  4126  0363                     __end_of_EUSART1_SetErrorHandler:
  4127                           
  4128                           	psect	intentry
  4129  0004                     __pintentry:	
  4130 ;; *************** function _INTERRUPT_InterruptManager *****************
  4131 ;; Defined at:
  4132 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4133 ;; Parameters:    Size  Location     Type
  4134 ;;		None
  4135 ;; Auto vars:     Size  Location     Type
  4136 ;;		None
  4137 ;; Return value:  Size  Location     Type
  4138 ;;                  1    wreg      void 
  4139 ;; Registers used:
  4140 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4141 ;; Tracked objects:
  4142 ;;		On entry : 0/0
  4143 ;;		On exit  : 0/0
  4144 ;;		Unchanged: 0/0
  4145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4150 ;;Total ram usage:        0 bytes
  4151 ;; Hardware stack levels used:    1
  4152 ;; Hardware stack levels required when called:    4
  4153 ;; This function calls:
  4154 ;;		Absolute function
  4155 ;;		_EUSART1_Receive_ISR
  4156 ;;		_EUSART1_Transmit_ISR
  4157 ;;		_TMR2_ISR
  4158 ;; This function is called by:
  4159 ;;		Interrupt level 1
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163  0004                     _INTERRUPT_InterruptManager:
  4164                           
  4165                           ;incstack = 0
  4166  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4167                           
  4168                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4169  0005  3180               	pagesel	$
  4170  0006                     i1l1862:
  4171                           
  4172                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  4173  0006  1F0B               	btfss	11,6	;volatile
  4174  0007  2809               	goto	u90_21
  4175  0008  280A               	goto	u90_20
  4176  0009                     u90_21:
  4177  0009  2835               	goto	i1l115
  4178  000A                     u90_20:
  4179  000A                     i1l1864:
  4180                           
  4181                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE3bits.TX1IE == 1 && PIR3bits.TX1IF == 1)
  4182  000A  014E               	movlb	14	; select bank14
  4183  000B  1E19               	btfss	25,4	;volatile
  4184  000C  280E               	goto	u91_21
  4185  000D  280F               	goto	u91_20
  4186  000E                     u91_21:
  4187  000E  281A               	goto	i1l108
  4188  000F                     u91_20:
  4189  000F                     i1l1866:
  4190  000F  1E0F               	btfss	15,4	;volatile
  4191  0010  2812               	goto	u92_21
  4192  0011  2813               	goto	u92_20
  4193  0012                     u92_21:
  4194  0012  281A               	goto	i1l108
  4195  0013                     u92_20:
  4196  0013                     i1l1868:
  4197                           
  4198                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART1_TxDefaultInterruptHandler();
  4199  0013  0140               	movlb	0	; select bank0
  4200  0014  0846               	movf	_EUSART1_TxDefaultInterruptHandler+1,w
  4201  0015  008A               	movwf	10
  4202  0016  0845               	movf	_EUSART1_TxDefaultInterruptHandler,w
  4203  0017  000A               	callw
  4204  0018  3180               	pagesel	$
  4205                           
  4206                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  4207  0019  2835               	goto	i1l115
  4208  001A                     i1l108:	
  4209                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
  4210                           
  4211  001A  1E99               	btfss	25,5	;volatile
  4212  001B  281D               	goto	u93_21
  4213  001C  281E               	goto	u93_20
  4214  001D                     u93_21:
  4215  001D  2829               	goto	i1l110
  4216  001E                     u93_20:
  4217  001E                     i1l1870:
  4218  001E  1E8F               	btfss	15,5	;volatile
  4219  001F  2821               	goto	u94_21
  4220  0020  2822               	goto	u94_20
  4221  0021                     u94_21:
  4222  0021  2829               	goto	i1l110
  4223  0022                     u94_20:
  4224  0022                     i1l1872:
  4225                           
  4226                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART1_RxDefaultInterruptHandler();
  4227  0022  0140               	movlb	0	; select bank0
  4228  0023  0844               	movf	_EUSART1_RxDefaultInterruptHandler+1,w
  4229  0024  008A               	movwf	10
  4230  0025  0843               	movf	_EUSART1_RxDefaultInterruptHandler,w
  4231  0026  000A               	callw
  4232  0027  3180               	pagesel	$
  4233                           
  4234                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  4235  0028  2835               	goto	i1l115
  4236  0029                     i1l110:	
  4237                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE4bits.TMR2IE == 1 && PI
      +                          R4bits.TMR2IF == 1)
  4238                           
  4239  0029  1C9A               	btfss	26,1	;volatile
  4240  002A  282C               	goto	u95_21
  4241  002B  282D               	goto	u95_20
  4242  002C                     u95_21:
  4243  002C  2835               	goto	i1l109
  4244  002D                     u95_20:
  4245  002D                     i1l1874:
  4246  002D  1C90               	btfss	16,1	;volatile
  4247  002E  2830               	goto	u96_21
  4248  002F  2831               	goto	u96_20
  4249  0030                     u96_21:
  4250  0030  2835               	goto	i1l109
  4251  0031                     u96_20:
  4252  0031                     i1l1876:
  4253                           
  4254                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR2_ISR();
  4255  0031  3183  2363  3180   	fcall	_TMR2_ISR
  4256                           
  4257                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  4258  0034  2835               	goto	i1l115
  4259  0035                     i1l109:
  4260  0035                     i1l115:	
  4261                           ;mcc_generated_files/interrupt_manager.c: 73:     }
  4262                           
  4263  0035  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4264  0036  0009               	retfie
  4265  0037                     __end_of_INTERRUPT_InterruptManager:
  4266                           
  4267                           	psect	text17
  4268  0363                     __ptext17:	
  4269 ;; *************** function _TMR2_ISR *****************
  4270 ;; Defined at:
  4271 ;;		line 165 in file "mcc_generated_files/tmr2.c"
  4272 ;; Parameters:    Size  Location     Type
  4273 ;;		None
  4274 ;; Auto vars:     Size  Location     Type
  4275 ;;		None
  4276 ;; Return value:  Size  Location     Type
  4277 ;;                  1    wreg      void 
  4278 ;; Registers used:
  4279 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4280 ;; Tracked objects:
  4281 ;;		On entry : 0/0
  4282 ;;		On exit  : 0/0
  4283 ;;		Unchanged: 0/0
  4284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4289 ;;Total ram usage:        0 bytes
  4290 ;; Hardware stack levels used:    1
  4291 ;; Hardware stack levels required when called:    3
  4292 ;; This function calls:
  4293 ;;		_TMR2_CallBack
  4294 ;; This function is called by:
  4295 ;;		_INTERRUPT_InterruptManager
  4296 ;; This function uses a non-reentrant model
  4297 ;;
  4298                           
  4299                           
  4300                           ;psect for function _TMR2_ISR
  4301  0363                     _TMR2_ISR:
  4302  0363                     i1l1710:	
  4303                           ;incstack = 0
  4304                           ; Regs used in _TMR2_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4305                           
  4306                           
  4307                           ;mcc_generated_files/tmr2.c: 169:     PIR4bits.TMR2IF = 0;
  4308  0363  014E               	movlb	14	; select bank14
  4309  0364  1090               	bcf	16,1	;volatile
  4310  0365                     i1l1712:
  4311                           
  4312                           ;mcc_generated_files/tmr2.c: 173:     TMR2_CallBack();
  4313  0365  3183  230A  3183   	fcall	_TMR2_CallBack
  4314  0368                     i1l76:
  4315  0368  0008               	return
  4316  0369                     __end_of_TMR2_ISR:
  4317                           
  4318                           	psect	text18
  4319  030A                     __ptext18:	
  4320 ;; *************** function _TMR2_CallBack *****************
  4321 ;; Defined at:
  4322 ;;		line 176 in file "mcc_generated_files/tmr2.c"
  4323 ;; Parameters:    Size  Location     Type
  4324 ;;		None
  4325 ;; Auto vars:     Size  Location     Type
  4326 ;;		None
  4327 ;; Return value:  Size  Location     Type
  4328 ;;                  1    wreg      void 
  4329 ;; Registers used:
  4330 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4331 ;; Tracked objects:
  4332 ;;		On entry : 0/0
  4333 ;;		On exit  : 0/0
  4334 ;;		Unchanged: 0/0
  4335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4340 ;;Total ram usage:        0 bytes
  4341 ;; Hardware stack levels used:    1
  4342 ;; Hardware stack levels required when called:    2
  4343 ;; This function calls:
  4344 ;;		Absolute function
  4345 ;;		_TMR2_DefaultInterruptHandler
  4346 ;;		_isr_1ms
  4347 ;; This function is called by:
  4348 ;;		_TMR2_ISR
  4349 ;; This function uses a non-reentrant model
  4350 ;;
  4351                           
  4352                           
  4353                           ;psect for function _TMR2_CallBack
  4354  030A                     _TMR2_CallBack:
  4355  030A                     i1l1618:	
  4356                           ;incstack = 0
  4357                           ; Regs used in _TMR2_CallBack: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4358                           
  4359                           
  4360                           ;mcc_generated_files/tmr2.c: 180:     if(TMR2_InterruptHandler)
  4361  030A  0140               	movlb	0	; select bank0
  4362  030B  0847               	movf	_TMR2_InterruptHandler,w
  4363  030C  0448               	iorwf	_TMR2_InterruptHandler+1,w
  4364  030D  1903               	btfsc	3,2
  4365  030E  2B10               	goto	u64_21
  4366  030F  2B11               	goto	u64_20
  4367  0310                     u64_21:
  4368  0310  2B16               	goto	i1l80
  4369  0311                     u64_20:
  4370  0311                     i1l1620:
  4371                           
  4372                           ;mcc_generated_files/tmr2.c: 181:     {;mcc_generated_files/tmr2.c: 182:         TMR2_In
      +                          terruptHandler();
  4373  0311  0848               	movf	_TMR2_InterruptHandler+1,w
  4374  0312  008A               	movwf	10
  4375  0313  0847               	movf	_TMR2_InterruptHandler,w
  4376  0314  000A               	callw
  4377  0315  3183               	pagesel	$
  4378  0316                     i1l80:
  4379  0316  0008               	return
  4380  0317                     __end_of_TMR2_CallBack:
  4381                           
  4382                           	psect	text19
  4383  0375                     __ptext19:	
  4384 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  4385 ;; Defined at:
  4386 ;;		line 190 in file "mcc_generated_files/tmr2.c"
  4387 ;; Parameters:    Size  Location     Type
  4388 ;;		None
  4389 ;; Auto vars:     Size  Location     Type
  4390 ;;		None
  4391 ;; Return value:  Size  Location     Type
  4392 ;;                  1    wreg      void 
  4393 ;; Registers used:
  4394 ;;		None
  4395 ;; Tracked objects:
  4396 ;;		On entry : 0/0
  4397 ;;		On exit  : 0/0
  4398 ;;		Unchanged: 0/0
  4399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4404 ;;Total ram usage:        0 bytes
  4405 ;; Hardware stack levels used:    1
  4406 ;; This function calls:
  4407 ;;		Nothing
  4408 ;; This function is called by:
  4409 ;;		_TMR2_Initialize
  4410 ;;		_TMR2_CallBack
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           
  4414                           
  4415                           ;psect for function _TMR2_DefaultInterruptHandler
  4416  0375                     _TMR2_DefaultInterruptHandler:
  4417  0375                     i1l86:	
  4418                           ;incstack = 0
  4419                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  4420                           
  4421  0375  0008               	return
  4422  0376                     __end_of_TMR2_DefaultInterruptHandler:
  4423                           
  4424                           	psect	text20
  4425  02CC                     __ptext20:	
  4426 ;; *************** function _isr_1ms *****************
  4427 ;; Defined at:
  4428 ;;		line 106 in file "main.c"
  4429 ;; Parameters:    Size  Location     Type
  4430 ;;		None
  4431 ;; Auto vars:     Size  Location     Type
  4432 ;;		None
  4433 ;; Return value:  Size  Location     Type
  4434 ;;                  1    wreg      void 
  4435 ;; Registers used:
  4436 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4437 ;; Tracked objects:
  4438 ;;		On entry : 0/0
  4439 ;;		On exit  : 0/0
  4440 ;;		Unchanged: 0/0
  4441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4446 ;;Total ram usage:        0 bytes
  4447 ;; Hardware stack levels used:    1
  4448 ;; Hardware stack levels required when called:    1
  4449 ;; This function calls:
  4450 ;;		_scanInput
  4451 ;; This function is called by:
  4452 ;;		_main
  4453 ;;		_TMR2_CallBack
  4454 ;; This function uses a non-reentrant model
  4455 ;;
  4456                           
  4457                           
  4458                           ;psect for function _isr_1ms
  4459  02CC                     _isr_1ms:
  4460  02CC                     i1l1592:	
  4461                           ;incstack = 0
  4462                           ; Regs used in _isr_1ms: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4463                           
  4464                           
  4465                           ;main.c: 107:     scan.tick = 1;
  4466  02CC  0140               	movlb	0	; select bank0
  4467  02CD  143C               	bsf	_scan+4,0
  4468  02CE                     i1l1594:
  4469                           
  4470                           ;main.c: 108:     scanInput();
  4471  02CE  3181  21B5  3182   	fcall	_scanInput
  4472  02D1                     i1l1596:
  4473                           
  4474                           ;main.c: 113:     if (scan.count > 0) {
  4475  02D1  0140               	movlb	0	; select bank0
  4476  02D2  0838               	movf	_scan,w
  4477  02D3  1903               	btfsc	3,2
  4478  02D4  2AD6               	goto	u62_21
  4479  02D5  2AD7               	goto	u62_20
  4480  02D6                     u62_21:
  4481  02D6  2AD9               	goto	i1l393
  4482  02D7                     u62_20:
  4483  02D7                     i1l1598:
  4484                           
  4485                           ;main.c: 114:         scan.count--;
  4486  02D7  3001               	movlw	1
  4487  02D8  02B8               	subwf	_scan,f
  4488  02D9                     i1l393:	
  4489                           ;main.c: 115:     }
  4490                           
  4491                           
  4492                           ;main.c: 116:     if (target.dwellCount > 0) {
  4493  02D9  0825               	movf	_target+5,w
  4494  02DA  0426               	iorwf	_target+6,w
  4495  02DB  1903               	btfsc	3,2
  4496  02DC  2ADE               	goto	u63_21
  4497  02DD  2ADF               	goto	u63_20
  4498  02DE                     u63_21:
  4499  02DE  2AE3               	goto	i1l395
  4500  02DF                     u63_20:
  4501  02DF                     i1l1600:
  4502                           
  4503                           ;main.c: 117:         target.dwellCount--;
  4504  02DF  3001               	movlw	1
  4505  02E0  02A5               	subwf	_target+5,f
  4506  02E1  3000               	movlw	0
  4507  02E2  3BA6               	subwfb	_target+6,f
  4508  02E3                     i1l395:
  4509  02E3  0008               	return
  4510  02E4                     __end_of_isr_1ms:
  4511                           
  4512                           	psect	text21
  4513  01B5                     __ptext21:	
  4514 ;; *************** function _scanInput *****************
  4515 ;; Defined at:
  4516 ;;		line 268 in file "main.c"
  4517 ;; Parameters:    Size  Location     Type
  4518 ;;		None
  4519 ;; Auto vars:     Size  Location     Type
  4520 ;;		None
  4521 ;; Return value:  Size  Location     Type
  4522 ;;                  1    wreg      void 
  4523 ;; Registers used:
  4524 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4525 ;; Tracked objects:
  4526 ;;		On entry : 0/0
  4527 ;;		On exit  : 0/0
  4528 ;;		Unchanged: 0/0
  4529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4532 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4533 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4534 ;;Total ram usage:        2 bytes
  4535 ;; Hardware stack levels used:    1
  4536 ;; This function calls:
  4537 ;;		Nothing
  4538 ;; This function is called by:
  4539 ;;		_isr_1ms
  4540 ;; This function uses a non-reentrant model
  4541 ;;
  4542                           
  4543                           
  4544                           ;psect for function _scanInput
  4545  01B5                     _scanInput:
  4546  01B5                     i1l1542:	
  4547                           ;incstack = 0
  4548                           ; Regs used in _scanInput: [wreg-fsr0h+status,2+status,0]
  4549                           
  4550                           
  4551                           ;main.c: 269:     switch (scan.state) {
  4552  01B5  29E6               	goto	i1l1564
  4553  01B6                     i1l455:	
  4554                           ;main.c: 270:         case SCAN_INPUT_IDLE:
  4555                           
  4556                           
  4557                           ;main.c: 271:             if (PORTAbits.RA3 == 1) {
  4558  01B6  1D8C               	btfss	12,3	;volatile
  4559  01B7  29B9               	goto	u56_21
  4560  01B8  29BA               	goto	u56_20
  4561  01B9                     u56_21:
  4562  01B9  29FA               	goto	i1l466
  4563  01BA                     u56_20:
  4564  01BA                     i1l1544:
  4565                           
  4566                           ;main.c: 272:                 scan.count = 4;
  4567  01BA  3004               	movlw	4
  4568  01BB  00F6               	movwf	??_scanInput
  4569  01BC  0876               	movf	??_scanInput,w
  4570  01BD  00B8               	movwf	_scan
  4571  01BE                     i1l1546:
  4572                           
  4573                           ;main.c: 273:                 scan.state = SCAN_INPUT_DEBOUNCE;
  4574  01BE  01BB               	clrf	_scan+3
  4575  01BF  0ABB               	incf	_scan+3,f
  4576  01C0  29FA               	goto	i1l466
  4577  01C1                     i1l458:	
  4578                           ;main.c: 277:         case SCAN_INPUT_DEBOUNCE:
  4579                           
  4580                           
  4581                           ;main.c: 278:             if (PORTAbits.RA3 == 1) {
  4582  01C1  1D8C               	btfss	12,3	;volatile
  4583  01C2  29C4               	goto	u57_21
  4584  01C3  29C5               	goto	u57_20
  4585  01C4                     u57_21:
  4586  01C4  29D4               	goto	i1l1554
  4587  01C5                     u57_20:
  4588  01C5                     i1l1548:
  4589                           
  4590                           ;main.c: 279:                 if (scan.count == 0) {
  4591  01C5  0838               	movf	_scan,w
  4592  01C6  1D03               	btfss	3,2
  4593  01C7  29C9               	goto	u58_21
  4594  01C8  29CA               	goto	u58_20
  4595  01C9                     u58_21:
  4596  01C9  29FA               	goto	i1l466
  4597  01CA                     u58_20:
  4598  01CA                     i1l1550:
  4599                           
  4600                           ;main.c: 280:                     scan.risingEdge = 1;
  4601  01CA  14BC               	bsf	_scan+4,1
  4602  01CB                     i1l1552:
  4603                           
  4604                           ;main.c: 281:                     scan.state = SCAN_INPUT_ASSERTED;
  4605  01CB  3002               	movlw	2
  4606  01CC  00F6               	movwf	??_scanInput
  4607  01CD  0876               	movf	??_scanInput,w
  4608  01CE  00BB               	movwf	_scan+3
  4609                           
  4610                           ;main.c: 282:                     scan.count = 15;
  4611  01CF  300F               	movlw	15
  4612  01D0  00F6               	movwf	??_scanInput
  4613  01D1  0876               	movf	??_scanInput,w
  4614  01D2  00B8               	movwf	_scan
  4615  01D3  29FA               	goto	i1l466
  4616  01D4                     i1l1554:
  4617                           
  4618                           ;main.c: 285:                 scan.state = SCAN_INPUT_IDLE;
  4619  01D4  01BB               	clrf	_scan+3
  4620  01D5  29FA               	goto	i1l466
  4621  01D6                     i1l462:	
  4622                           ;main.c: 289:         case SCAN_INPUT_ASSERTED:
  4623                           
  4624                           
  4625                           ;main.c: 290:             if (PORTAbits.RA3 == 0) {
  4626  01D6  198C               	btfsc	12,3	;volatile
  4627  01D7  29D9               	goto	u59_21
  4628  01D8  29DA               	goto	u59_20
  4629  01D9                     u59_21:
  4630  01D9  29E1               	goto	i1l1562
  4631  01DA                     u59_20:
  4632  01DA                     i1l1556:
  4633                           
  4634                           ;main.c: 291:                 if (scan.count == 0) {
  4635  01DA  0838               	movf	_scan,w
  4636  01DB  1D03               	btfss	3,2
  4637  01DC  29DE               	goto	u60_21
  4638  01DD  29DF               	goto	u60_20
  4639  01DE                     u60_21:
  4640  01DE  29FA               	goto	i1l466
  4641  01DF                     u60_20:
  4642  01DF                     i1l1558:
  4643                           
  4644                           ;main.c: 292:                     scan.fallingEdge = 1;
  4645  01DF  153C               	bsf	_scan+4,2
  4646  01E0  29D4               	goto	i1l1554
  4647  01E1                     i1l1562:
  4648                           
  4649                           ;main.c: 296:                 scan.count = 15;
  4650  01E1  300F               	movlw	15
  4651  01E2  00F6               	movwf	??_scanInput
  4652  01E3  0876               	movf	??_scanInput,w
  4653  01E4  00B8               	movwf	_scan
  4654  01E5  29FA               	goto	i1l466
  4655  01E6                     i1l1564:
  4656  01E6  0140               	movlb	0	; select bank0
  4657  01E7  083B               	movf	_scan+3,w
  4658  01E8  00F6               	movwf	??_scanInput
  4659  01E9  01F7               	clrf	??_scanInput+1
  4660                           
  4661                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4662                           ; Switch size 1, requested type "simple"
  4663                           ; Number of cases is 1, Range of values is 0 to 0
  4664                           ; switch strategies available:
  4665                           ; Name         Instructions Cycles
  4666                           ; simple_byte            4     3 (average)
  4667                           ; direct_byte            8     6 (fixed)
  4668                           ; jumptable            260     6 (fixed)
  4669                           ;	Chosen strategy is simple_byte
  4670  01EA  0877               	movf	??_scanInput+1,w
  4671  01EB  3A00               	xorlw	0	; case 0
  4672  01EC  1903               	skipnz
  4673  01ED  29EF               	goto	i1l2142
  4674  01EE  29FA               	goto	i1l466
  4675  01EF                     i1l2142:
  4676                           
  4677                           ; Switch size 1, requested type "simple"
  4678                           ; Number of cases is 3, Range of values is 0 to 2
  4679                           ; switch strategies available:
  4680                           ; Name         Instructions Cycles
  4681                           ; simple_byte           10     6 (average)
  4682                           ; direct_byte           12     6 (fixed)
  4683                           ; jumptable            260     6 (fixed)
  4684                           ;	Chosen strategy is simple_byte
  4685  01EF  0876               	movf	??_scanInput,w
  4686  01F0  3A00               	xorlw	0	; case 0
  4687  01F1  1903               	skipnz
  4688  01F2  29B6               	goto	i1l455
  4689  01F3  3A01               	xorlw	1	; case 1
  4690  01F4  1903               	skipnz
  4691  01F5  29C1               	goto	i1l458
  4692  01F6  3A03               	xorlw	3	; case 2
  4693  01F7  1903               	skipnz
  4694  01F8  29D6               	goto	i1l462
  4695  01F9  29FA               	goto	i1l466
  4696  01FA                     i1l466:
  4697  01FA  0008               	return
  4698  01FB                     __end_of_scanInput:
  4699                           
  4700                           	psect	text22
  4701  0293                     __ptext22:	
  4702 ;; *************** function _EUSART1_Transmit_ISR *****************
  4703 ;; Defined at:
  4704 ;;		line 206 in file "mcc_generated_files/eusart1.c"
  4705 ;; Parameters:    Size  Location     Type
  4706 ;;		None
  4707 ;; Auto vars:     Size  Location     Type
  4708 ;;		None
  4709 ;; Return value:  Size  Location     Type
  4710 ;;                  1    wreg      void 
  4711 ;; Registers used:
  4712 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4713 ;; Tracked objects:
  4714 ;;		On entry : 0/0
  4715 ;;		On exit  : 0/0
  4716 ;;		Unchanged: 0/0
  4717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4720 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4721 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4722 ;;Total ram usage:        1 bytes
  4723 ;; Hardware stack levels used:    1
  4724 ;; This function calls:
  4725 ;;		Nothing
  4726 ;; This function is called by:
  4727 ;;		_EUSART1_Initialize
  4728 ;;		_INTERRUPT_InterruptManager
  4729 ;; This function uses a non-reentrant model
  4730 ;;
  4731                           
  4732                           
  4733                           ;psect for function _EUSART1_Transmit_ISR
  4734  0293                     _EUSART1_Transmit_ISR:
  4735  0293                     i1l1764:	
  4736                           ;incstack = 0
  4737                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  4738                           
  4739                           
  4740                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  4741  0293  3040               	movlw	64
  4742  0294  027B               	subwf	_eusart1TxBufferRemaining,w	;volatile
  4743  0295  1803               	skipnc
  4744  0296  2A98               	goto	u70_21
  4745  0297  2A99               	goto	u70_20
  4746  0298                     u70_21:
  4747  0298  2AB0               	goto	i1l320
  4748  0299                     u70_20:
  4749  0299                     i1l1766:
  4750                           
  4751                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
  4752  0299  0874               	movf	_eusart1TxTail,w
  4753  029A  3EA0               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
  4754  029B  0086               	movwf	6
  4755  029C  0187               	clrf	7
  4756  029D  0801               	movf	1,w
  4757  029E  0142               	movlb	2	; select bank2
  4758  029F  009A               	movwf	26	;volatile
  4759  02A0                     i1l1768:
  4760  02A0  3001               	movlw	1
  4761  02A1  00F6               	movwf	??_EUSART1_Transmit_ISR
  4762  02A2  0876               	movf	??_EUSART1_Transmit_ISR,w
  4763  02A3  07F4               	addwf	_eusart1TxTail,f	;volatile
  4764  02A4                     i1l1770:
  4765                           
  4766                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  4767  02A4  3040               	movlw	64
  4768  02A5  0274               	subwf	_eusart1TxTail,w	;volatile
  4769  02A6  1C03               	skipc
  4770  02A7  2AA9               	goto	u71_21
  4771  02A8  2AAA               	goto	u71_20
  4772  02A9                     u71_21:
  4773  02A9  2AAB               	goto	i1l1774
  4774  02AA                     u71_20:
  4775  02AA                     i1l1772:
  4776                           
  4777                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
  4778  02AA  01F4               	clrf	_eusart1TxTail	;volatile
  4779  02AB                     i1l1774:
  4780                           
  4781                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
  4782  02AB  3001               	movlw	1
  4783  02AC  00F6               	movwf	??_EUSART1_Transmit_ISR
  4784  02AD  0876               	movf	??_EUSART1_Transmit_ISR,w
  4785  02AE  07FB               	addwf	_eusart1TxBufferRemaining,f	;volatile
  4786                           
  4787                           ;mcc_generated_files/eusart1.c: 218:     }
  4788  02AF  2AB2               	goto	i1l323
  4789  02B0                     i1l320:	
  4790                           ;mcc_generated_files/eusart1.c: 219:     else
  4791                           
  4792                           
  4793                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE3bits.TX1IE = 0;
  4794  02B0  014E               	movlb	14	; select bank14
  4795  02B1  1219               	bcf	25,4	;volatile
  4796  02B2                     i1l323:
  4797  02B2  0008               	return
  4798  02B3                     __end_of_EUSART1_Transmit_ISR:
  4799                           
  4800                           	psect	text23
  4801  0239                     __ptext23:	
  4802 ;; *************** function _EUSART1_Receive_ISR *****************
  4803 ;; Defined at:
  4804 ;;		line 225 in file "mcc_generated_files/eusart1.c"
  4805 ;; Parameters:    Size  Location     Type
  4806 ;;		None
  4807 ;; Auto vars:     Size  Location     Type
  4808 ;;		None
  4809 ;; Return value:  Size  Location     Type
  4810 ;;                  1    wreg      void 
  4811 ;; Registers used:
  4812 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4813 ;; Tracked objects:
  4814 ;;		On entry : 0/0
  4815 ;;		On exit  : 0/0
  4816 ;;		Unchanged: 0/0
  4817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4822 ;;Total ram usage:        0 bytes
  4823 ;; Hardware stack levels used:    1
  4824 ;; Hardware stack levels required when called:    2
  4825 ;; This function calls:
  4826 ;;		Absolute function
  4827 ;;		_EUSART1_DefaultErrorHandler
  4828 ;;		_EUSART1_DefaultFramingErrorHandler
  4829 ;;		_EUSART1_DefaultOverrunErrorHandler
  4830 ;;		_EUSART1_RxDataHandler
  4831 ;; This function is called by:
  4832 ;;		_EUSART1_Initialize
  4833 ;;		_INTERRUPT_InterruptManager
  4834 ;; This function uses a non-reentrant model
  4835 ;;
  4836                           
  4837                           
  4838                           ;psect for function _EUSART1_Receive_ISR
  4839  0239                     _EUSART1_Receive_ISR:
  4840  0239                     i1l1776:	
  4841                           ;incstack = 0
  4842                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4843                           
  4844                           
  4845                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  4846  0239  0873               	movf	_eusart1RxHead,w	;volatile
  4847  023A  3E28               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
  4848  023B  0086               	movwf	6
  4849  023C  0187               	clrf	7
  4850  023D  0181               	clrf	1
  4851  023E                     i1l1778:
  4852                           
  4853                           ;mcc_generated_files/eusart1.c: 230:     if(RC1STAbits.FERR){
  4854  023E  0142               	movlb	2	; select bank2
  4855  023F  1D1D               	btfss	29,2	;volatile
  4856  0240  2A42               	goto	u72_21
  4857  0241  2A43               	goto	u72_20
  4858  0242                     u72_21:
  4859  0242  2A4E               	goto	i1l1784
  4860  0243                     u72_20:
  4861  0243                     i1l1780:
  4862                           
  4863                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  4864  0243  0873               	movf	_eusart1RxHead,w	;volatile
  4865  0244  3E28               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
  4866  0245  0086               	movwf	6
  4867  0246  0187               	clrf	7
  4868  0247  1481               	bsf	1,1
  4869  0248                     i1l1782:
  4870                           
  4871                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
  4872  0248  0140               	movlb	0	; select bank0
  4873  0249  0842               	movf	_EUSART1_FramingErrorHandler+1,w
  4874  024A  008A               	movwf	10
  4875  024B  0841               	movf	_EUSART1_FramingErrorHandler,w
  4876  024C  000A               	callw
  4877  024D  3182               	pagesel	$
  4878  024E                     i1l1784:
  4879                           
  4880                           ;mcc_generated_files/eusart1.c: 235:     if(RC1STAbits.OERR){
  4881  024E  0142               	movlb	2	; select bank2
  4882  024F  1C9D               	btfss	29,1	;volatile
  4883  0250  2A52               	goto	u73_21
  4884  0251  2A53               	goto	u73_20
  4885  0252                     u73_21:
  4886  0252  2A5E               	goto	i1l1790
  4887  0253                     u73_20:
  4888  0253                     i1l1786:
  4889                           
  4890                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  4891  0253  0873               	movf	_eusart1RxHead,w	;volatile
  4892  0254  3E28               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
  4893  0255  0086               	movwf	6
  4894  0256  0187               	clrf	7
  4895  0257  1501               	bsf	1,2
  4896  0258                     i1l1788:
  4897                           
  4898                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
  4899  0258  0140               	movlb	0	; select bank0
  4900  0259  0840               	movf	_EUSART1_OverrunErrorHandler+1,w
  4901  025A  008A               	movwf	10
  4902  025B  083F               	movf	_EUSART1_OverrunErrorHandler,w
  4903  025C  000A               	callw
  4904  025D  3182               	pagesel	$
  4905  025E                     i1l1790:
  4906                           
  4907                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  4908  025E  0873               	movf	_eusart1RxHead,w	;volatile
  4909  025F  3E28               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
  4910  0260  0086               	movwf	6
  4911  0261  0187               	clrf	7
  4912  0262  0801               	movf	1,w
  4913  0263  1903               	btfsc	3,2
  4914  0264  2A66               	goto	u74_21
  4915  0265  2A67               	goto	u74_20
  4916  0266                     u74_21:
  4917  0266  2A6E               	goto	i1l1794
  4918  0267                     u74_20:
  4919  0267                     i1l1792:
  4920                           
  4921                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
  4922  0267  0140               	movlb	0	; select bank0
  4923  0268  083E               	movf	_EUSART1_ErrorHandler+1,w
  4924  0269  008A               	movwf	10
  4925  026A  083D               	movf	_EUSART1_ErrorHandler,w
  4926  026B  000A               	callw
  4927  026C  3182               	pagesel	$
  4928                           
  4929                           ;mcc_generated_files/eusart1.c: 242:     } else {
  4930  026D  2A71               	goto	i1l330
  4931  026E                     i1l1794:
  4932                           
  4933                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
  4934  026E  3182  22B3  3182   	fcall	_EUSART1_RxDataHandler
  4935  0271                     i1l330:
  4936  0271  0008               	return
  4937  0272                     __end_of_EUSART1_Receive_ISR:
  4938                           
  4939                           	psect	text24
  4940  036D                     __ptext24:	
  4941 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  4942 ;; Defined at:
  4943 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  4944 ;; Parameters:    Size  Location     Type
  4945 ;;		None
  4946 ;; Auto vars:     Size  Location     Type
  4947 ;;		None
  4948 ;; Return value:  Size  Location     Type
  4949 ;;                  1    wreg      void 
  4950 ;; Registers used:
  4951 ;;		None
  4952 ;; Tracked objects:
  4953 ;;		On entry : 0/0
  4954 ;;		On exit  : 0/0
  4955 ;;		Unchanged: 0/0
  4956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4961 ;;Total ram usage:        0 bytes
  4962 ;; Hardware stack levels used:    1
  4963 ;; This function calls:
  4964 ;;		Nothing
  4965 ;; This function is called by:
  4966 ;;		_EUSART1_Initialize
  4967 ;;		_EUSART1_Receive_ISR
  4968 ;; This function uses a non-reentrant model
  4969 ;;
  4970                           
  4971                           
  4972                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
  4973  036D                     _EUSART1_DefaultOverrunErrorHandler:
  4974  036D                     i1l1700:	
  4975                           ;incstack = 0
  4976                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
  4977                           
  4978                           
  4979                           ;mcc_generated_files/eusart1.c: 264:     RC1STAbits.CREN = 0;
  4980  036D  0142               	movlb	2	; select bank2
  4981  036E  121D               	bcf	29,4	;volatile
  4982                           
  4983                           ;mcc_generated_files/eusart1.c: 265:     RC1STAbits.CREN = 1;
  4984  036F  161D               	bsf	29,4	;volatile
  4985  0370                     i1l340:
  4986  0370  0008               	return
  4987  0371                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  4988                           
  4989                           	psect	text25
  4990  0376                     __ptext25:	
  4991 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  4992 ;; Defined at:
  4993 ;;		line 259 in file "mcc_generated_files/eusart1.c"
  4994 ;; Parameters:    Size  Location     Type
  4995 ;;		None
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;		None
  4998 ;; Return value:  Size  Location     Type
  4999 ;;                  1    wreg      void 
  5000 ;; Registers used:
  5001 ;;		None
  5002 ;; Tracked objects:
  5003 ;;		On entry : 0/0
  5004 ;;		On exit  : 0/0
  5005 ;;		Unchanged: 0/0
  5006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5011 ;;Total ram usage:        0 bytes
  5012 ;; Hardware stack levels used:    1
  5013 ;; This function calls:
  5014 ;;		Nothing
  5015 ;; This function is called by:
  5016 ;;		_EUSART1_Initialize
  5017 ;;		_EUSART1_Receive_ISR
  5018 ;; This function uses a non-reentrant model
  5019 ;;
  5020                           
  5021                           
  5022                           ;psect for function _EUSART1_DefaultFramingErrorHandler
  5023  0376                     _EUSART1_DefaultFramingErrorHandler:
  5024  0376                     i1l337:	
  5025                           ;incstack = 0
  5026                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
  5027                           
  5028  0376  0008               	return
  5029  0377                     __end_of_EUSART1_DefaultFramingErrorHandler:
  5030                           
  5031                           	psect	text26
  5032  0371                     __ptext26:	
  5033 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  5034 ;; Defined at:
  5035 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  5036 ;; Parameters:    Size  Location     Type
  5037 ;;		None
  5038 ;; Auto vars:     Size  Location     Type
  5039 ;;		None
  5040 ;; Return value:  Size  Location     Type
  5041 ;;                  1    wreg      void 
  5042 ;; Registers used:
  5043 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5044 ;; Tracked objects:
  5045 ;;		On entry : 0/0
  5046 ;;		On exit  : 0/0
  5047 ;;		Unchanged: 0/0
  5048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5053 ;;Total ram usage:        0 bytes
  5054 ;; Hardware stack levels used:    1
  5055 ;; Hardware stack levels required when called:    1
  5056 ;; This function calls:
  5057 ;;		_EUSART1_RxDataHandler
  5058 ;; This function is called by:
  5059 ;;		_EUSART1_Initialize
  5060 ;;		_EUSART1_Receive_ISR
  5061 ;; This function uses a non-reentrant model
  5062 ;;
  5063                           
  5064                           
  5065                           ;psect for function _EUSART1_DefaultErrorHandler
  5066  0371                     _EUSART1_DefaultErrorHandler:
  5067  0371                     i1l1702:	
  5068                           ;incstack = 0
  5069                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  5070                           
  5071                           
  5072                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
  5073  0371  3182  22B3  3183   	fcall	_EUSART1_RxDataHandler
  5074  0374                     i1l343:
  5075  0374  0008               	return
  5076  0375                     __end_of_EUSART1_DefaultErrorHandler:
  5077                           
  5078                           	psect	text27
  5079  02B3                     __ptext27:	
  5080 ;; *************** function _EUSART1_RxDataHandler *****************
  5081 ;; Defined at:
  5082 ;;		line 249 in file "mcc_generated_files/eusart1.c"
  5083 ;; Parameters:    Size  Location     Type
  5084 ;;		None
  5085 ;; Auto vars:     Size  Location     Type
  5086 ;;		None
  5087 ;; Return value:  Size  Location     Type
  5088 ;;                  1    wreg      void 
  5089 ;; Registers used:
  5090 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5091 ;; Tracked objects:
  5092 ;;		On entry : 0/0
  5093 ;;		On exit  : 0/0
  5094 ;;		Unchanged: 0/0
  5095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5098 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5099 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5100 ;;Total ram usage:        1 bytes
  5101 ;; Hardware stack levels used:    1
  5102 ;; This function calls:
  5103 ;;		Nothing
  5104 ;; This function is called by:
  5105 ;;		_EUSART1_Receive_ISR
  5106 ;;		_EUSART1_DefaultErrorHandler
  5107 ;; This function uses a non-reentrant model
  5108 ;;
  5109                           
  5110                           
  5111                           ;psect for function _EUSART1_RxDataHandler
  5112  02B3                     _EUSART1_RxDataHandler:
  5113  02B3                     i1l1582:	
  5114                           ;incstack = 0
  5115                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  5116                           
  5117                           
  5118                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
  5119  02B3  0142               	movlb	2	; select bank2
  5120  02B4  0819               	movf	25,w	;volatile
  5121  02B5  00F6               	movwf	??_EUSART1_RxDataHandler
  5122  02B6  0873               	movf	_eusart1RxHead,w
  5123  02B7  3E30               	addlw	(low (_eusart1RxBuffer| 0))& (0+255)
  5124  02B8  0086               	movwf	6
  5125  02B9  0187               	clrf	7
  5126  02BA  0876               	movf	??_EUSART1_RxDataHandler,w
  5127  02BB  0081               	movwf	1
  5128  02BC                     i1l1584:
  5129  02BC  3001               	movlw	1
  5130  02BD  00F6               	movwf	??_EUSART1_RxDataHandler
  5131  02BE  0876               	movf	??_EUSART1_RxDataHandler,w
  5132  02BF  07F3               	addwf	_eusart1RxHead,f	;volatile
  5133  02C0                     i1l1586:
  5134                           
  5135                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  5136  02C0  3008               	movlw	8
  5137  02C1  0273               	subwf	_eusart1RxHead,w	;volatile
  5138  02C2  1C03               	skipc
  5139  02C3  2AC5               	goto	u61_21
  5140  02C4  2AC6               	goto	u61_20
  5141  02C5                     u61_21:
  5142  02C5  2AC7               	goto	i1l1590
  5143  02C6                     u61_20:
  5144  02C6                     i1l1588:
  5145                           
  5146                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
  5147  02C6  01F3               	clrf	_eusart1RxHead	;volatile
  5148  02C7                     i1l1590:
  5149                           
  5150                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
  5151  02C7  3001               	movlw	1
  5152  02C8  00F6               	movwf	??_EUSART1_RxDataHandler
  5153  02C9  0876               	movf	??_EUSART1_RxDataHandler,w
  5154  02CA  07F1               	addwf	_eusart1RxCount,f	;volatile
  5155  02CB                     i1l334:
  5156  02CB  0008               	return
  5157  02CC                     __end_of_EUSART1_RxDataHandler:
  5158  007E                     btemp	set	126	;btemp
  5159  007E                     int$flags	set	126
  5160  007E                     wtemp0	set	126
  5161                           
  5162                           	psect	config
  5163                           
  5164                           ;Config register CONFIG1 @ 0x8007
  5165                           ;	External Oscillator mode selection bits
  5166                           ;	FEXTOSC = OFF, Oscillator not enabled
  5167                           ;	Power-up default value for COSC bits
  5168                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
  5169                           ;	Clock Out Enable bit
  5170                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  5171                           ;	Clock Switch Enable bit
  5172                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  5173                           ;	Fail-Safe Clock Monitor Enable bit
  5174                           ;	FCMEN = ON, FSCM timer enabled
  5175  8007                     	org	32775
  5176  8007  3FEC               	dw	16364
  5177                           
  5178                           ;Config register CONFIG2 @ 0x8008
  5179                           ;	Master Clear Enable bit
  5180                           ;	MCLRE = OFF, MCLR pin function is port defined function
  5181                           ;	Power-up Timer Enable bit
  5182                           ;	PWRTE = ON, PWRT enabled
  5183                           ;	Low-Power BOR enable bit
  5184                           ;	LPBOREN = OFF, ULPBOR disabled
  5185                           ;	Brown-out reset enable bits
  5186                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  5187                           ;	Brown-out Reset Voltage Selection
  5188                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
  5189                           ;	Zero-cross detect disable
  5190                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
  5191                           ;	Peripheral Pin Select one-way control
  5192                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
  5193                           ;	Stack Overflow/Underflow Reset Enable bit
  5194                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  5195  8008                     	org	32776
  5196  8008  3FFC               	dw	16380
  5197                           
  5198                           ;Config register CONFIG3 @ 0x8009
  5199                           ;	WDT Period Select bits
  5200                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  5201                           ;	WDT operating mode
  5202                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  5203                           ;	WDT Window Select bits
  5204                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  5205                           ;	WDT input clock selector
  5206                           ;	WDTCCS = SC, Software Control
  5207  8009                     	org	32777
  5208  8009  3F9F               	dw	16287
  5209                           
  5210                           ;Config register CONFIG4 @ 0x800A
  5211                           ;	Boot Block Size Selection bits
  5212                           ;	BBSIZE = BB512, 512 words boot block size
  5213                           ;	Boot Block Enable bit
  5214                           ;	BBEN = OFF, Boot Block disabled
  5215                           ;	SAF Enable bit
  5216                           ;	SAFEN = OFF, SAF disabled
  5217                           ;	Application Block Write Protection bit
  5218                           ;	WRTAPP = OFF, Application Block not write protected
  5219                           ;	Boot Block Write Protection bit
  5220                           ;	WRTB = OFF, Boot Block not write protected
  5221                           ;	Configuration Register Write Protection bit
  5222                           ;	WRTC = OFF, Configuration Register not write protected
  5223                           ;	Storage Area Flash Write Protection bit
  5224                           ;	WRTSAF = OFF, SAF not write protected
  5225                           ;	Low Voltage Programming Enable bit
  5226                           ;	LVP = OFF, High Voltage on MCLR/Vpp must be used for programming
  5227  800A                     	org	32778
  5228  800A  1FFF               	dw	8191
  5229                           
  5230                           ;Config register CONFIG5 @ 0x800B
  5231                           ;	UserNVM Program memory code protection bit
  5232                           ;	CP = OFF, UserNVM code protection disabled
  5233  800B                     	org	32779
  5234  800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    4
    Data        0
    BSS         99
    Persistent  45
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      12
    BANK0            80      2      43
    BANK1            80      0      64
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), Absolute function(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> isr_1ms(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> isr_1ms(), Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _SYSTEM_Initialize->_EUSART1_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _isr_1ms->_scanInput
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     860
                                              0 BANK0      2     2      0
                  _SYSTEM_Initialize
           _TMR2_SetInterruptHandler
                       _countTargets
                         _resetEdges
                           _setState
 ---------------------------------------------------------------------------------
 (1) _setState                                             2     2      0      22
                                              2 COMMON     2     2      0
                         _resetEdges
 ---------------------------------------------------------------------------------
 (2) _resetEdges                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _countTargets                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     664
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   1     1      0     490
                                              4 COMMON     1     1      0
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0       0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR2_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                            _isr_1ms *
 ---------------------------------------------------------------------------------
 (7) _isr_1ms                                              0     0      0       0
                          _scanInput
 ---------------------------------------------------------------------------------
 (8) _scanInput                                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultErrorHandler                          0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART1_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _countTargets
   _resetEdges
   _setState
     _resetEdges

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR2_ISR *
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
       _isr_1ms *
         _scanInput

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      77       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2      2B       6       53.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      40       8       80.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      77      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Nov 06 07:31:30 2020

              __end_of_TMR2_SetInterruptHandler 0345                        _eusart1TxBufferRemaining 007B  
                                            l37 02F9                                              l83 0344  
                                           l205 0292                                             l152 0309  
                                           l401 0136                                             l155 032A  
                                           l411 008B                                             l405 007B  
                                           l158 0332                                             l407 007C  
                                           l352 0362                                             l416 00A1  
                                           l408 007D                                             l346 035C  
                                           l426 00CD                                             l355 034A  
                                           l283 0238                                             l451 033E  
                                           l419 00AF                                             l349 0356  
                                           l429 00E9                                             l358 0350  
                                           l438 0114                                             l448 0320  
                                           l484 01B4                                             _PR2 028D  
                                           u800 0168                                             u801 0167  
                                           u810 0170                                             u811 016F  
                                           u820 0178                                             u821 0177  
                                           u830 0180                                             u750 0140  
                                           u831 017F                                             u751 013F  
                                           u840 0188                                             u760 0148  
                                           u841 0187                                             u761 0147  
                                           u850 0190                                             u770 0150  
                                           u851 018F                                             u771 014F  
                                           u860 0198                                             u780 0158  
                                           u861 0197                                             u781 0157  
                                           u870 01A0                                             u790 0160  
                                           u871 019F                                             u791 015F  
                                           u880 01A8                                             u881 01A7  
                                           u890 01B0                                             u891 01AF  
                       __size_of_PMD_Initialize 0008                                 _TMR2_Initialize 02E4  
                                           wreg 0009                                            l2020 0064  
                                          l2012 0053                                            l2030 0071  
                                          l2022 0065                                            l2014 005D  
                                          l2040 0090                                            l2032 0075  
                                          l2024 0066                                            l2016 005E  
                                          l2050 00A8                                            l2042 0094  
                                          l2034 0081                                            l2026 006A  
                                          l2018 005F                                            l2140 0128  
                                          l2052 00B0                                            l2060 00C7  
                                          l2044 0098                                            l2036 0084  
                                          l2028 006F                                            l2070 00E4  
                                          l2062 00CE                                            l2054 00B6  
                                          l2038 008C                                            l2046 009D  
                                          l2072 00ED                                            l2080 00FB  
                                          l2064 00D2                                            l2056 00BC  
                                          l2048 00A5                                            l1610 02EC  
                                          l1602 02E4                                            l2090 011A  
                                          l2082 0100                                            l2074 00F0  
                                          l2058 00C2                                            l2066 00D7  
                                          l1612 02EE                                            l1604 02E7  
                                          l2084 0109                                            l2076 00F2  
                                          l2068 00DB                                            l1630 027A  
                                          l1622 032B                                            l1614 02EF  
                                          l1606 02E8                                            l2086 010E  
                                          l2078 00F3                                            l2094 011F  
                                          l1640 0281                                            l1632 027C  
                                          l1624 0272                                            l1616 02F6  
                                          l1608 02EB                                            l1720 0303  
                                          l1800 0139                                            l1704 0339  
                                          l2088 0115                                            l1650 0288  
                                          l1642 0282                                            l1634 027E  
                                          l1626 0276                                            l1570 033F  
                                          l1722 0306                                            l1714 02FA  
                                          l1810 014C                                            l1802 013C  
                                          l1706 033C                                            l1580 035D  
                                          l1572 034B                                            l1660 0324  
                                          l1652 0289                                            l1644 0283  
                                          l1636 027F                                            l1628 0278  
                                          l1716 02FD                                            l1820 0160  
                                          l1812 0150                                            l1804 0140  
                                          l1708 033D                                            l1574 0345  
                                          l1670 01FD                                            l1662 0325  
                                          l1654 028B                                            l1646 0284  
                                          l1638 0280                                            l1718 0300  
                                          l1830 0174                                            l1822 0164  
                                          l1814 0154                                            l1806 0144  
                                          l1576 0357                                            l1680 0214  
                                          l1672 0204                                            l1664 0328  
                                          l1656 028D                                            l1648 0285  
                                          l1840 0188                                            l1832 0178  
                                          l1824 0168                                            l1816 0158  
                                          l1808 0148                                            l1578 0351  
                                          l1690 022F                                            l1682 0216  
                                          l1674 020D                                            l1666 0329  
                                          l1658 0321                                            l1850 019C  
                                          l1842 018C                                            l1834 017C  
                                          l1826 016C                                            l1818 015C  
                                          l1692 0233                                            l1684 0217  
                                          l1676 0210                                            l1668 01FB  
                                          l1860 01B0                                            l1852 01A0  
                                          l1844 0190                                            l1836 0180  
                                          l1828 0170                                            l1694 0234  
                                          l1686 021E                                            l1678 0212  
                                          l1854 01A4                                            l1846 0194  
                                          l1838 0184                                            l1696 0235  
                                          l1688 0225                                            l1856 01A8  
                                          l1848 0198                                            l1698 0236  
                                          l1858 01AC                                            l1796 0318  
                                          l1798 031D                                            u1110 006F  
                                          u1111 006E                                            u1200 00CD  
                                          u1120 007B                                            u1201 00CC  
                                          u1121 007A                                            u1210 00E4  
                                          u1130 0081                                            u1211 00E3  
                                          u1131 0080                                            u1220 00ED  
                                          u1140 008B                                            u1221 00EC  
                                          u1141 008A                                            u1230 0109  
                                          u1150 00A5                                            u1231 0108  
                                          u1151 00A4                                            u1240 0114  
                                          u1160 00AF                                            u1241 0113  
                                          u1161 00AE                                            u1170 00B6  
                                          u1171 00B5                                            u1180 00BC  
                                          u1181 00BB                                            _LATA 0018  
                                          u1190 00C2                                            _LATB 0019  
                                          u1191 00C1                                            _LATC 001A  
                                          _T2PR 028D                                            _PMD0 0796  
                                          _PMD1 0797                                            _PMD2 0798  
                                          _PMD3 0799                                            _PMD4 079A  
                                          _PMD5 079B                                            i1l80 0316  
                                          i1l76 0368                                            i1l86 0375  
                                          _TMR2 028C                                            _WPUA 1F39  
                                          _WPUB 1F44                                            _WPUC 1F4F  
                                          _main 0053                                            _scan 0038  
                                          fsr0h 0005                                            fsr1h 0007  
                                          indf0 0000                                            fsr0l 0004  
                                          indf1 0001                                            fsr1l 0006  
                                          btemp 007E                                            start 0037  
                __size_of_OSCILLATOR_Initialize 000A                   __end_of_OSCILLATOR_Initialize 032B  
                         _eusart1RxStatusBuffer 0028                                           ?_main 0076  
                                         _T2CON 028E                                           _T2HLT 028F  
                                         i1l110 0029                                           i1l115 0035  
                                         i1l108 001A                                           _T2TMR 028C  
                                         i1l109 0035                                           i1l320 02B0  
                                         i1l330 0271                                           _T2RST 0291  
                                         i1l323 02B2                                           i1l340 0370  
                                         i1l334 02CB                                           i1l343 0374  
                                         i1l337 0376                                           i1l462 01D6  
                                         i1l455 01B6                                           i1l393 02D9  
                                         i1l458 01C1                                           i1l466 01FA  
                                         i1l395 02E3                                           _OSCEN 0891  
                                         u60_20 01DF                                           u60_21 01DE  
                                         u61_20 02C6                                           u61_21 02C5  
                                         u70_20 0299                                           u62_20 02D7  
                                         u70_21 0298                                           u62_21 02D6  
                                         u71_20 02AA                                           u63_20 02DF  
                                         u71_21 02A9                                           u63_21 02DE  
                                         u72_20 0243                                           u56_20 01BA  
                                         u64_20 0311                                           u72_21 0242  
                                         u56_21 01B9                                           u64_21 0310  
                                         u73_20 0253                                           u57_20 01C5  
                                         u73_21 0252                                           u57_21 01C4  
                                         _TRISA 0012                                           _TRISB 0013  
                                         _TRISC 0014                                           u74_20 0267  
                                         u58_20 01CA                                           u90_20 000A  
                                         u74_21 0266                                           u58_21 01C9  
                                         u90_21 0009                                           u59_20 01DA  
                                         u91_20 000F                                           u59_21 01D9  
                                         u91_21 000E                                   ?_countTargets 0076  
                                         u92_20 0013                                           u92_21 0012  
                                         u93_20 001E                                           u93_21 001D  
                                         u94_20 0022                                           u94_21 0021  
                                         u95_20 002D                                           u95_21 002C  
                                         u96_20 0031                                           u96_21 0030  
                          _EUSART1_Transmit_ISR 0293                                __end_of_TMR2_ISR 0369  
                               __end_of_isr_1ms 02E4                                           pclath 000A  
                                         status 0003                                           wtemp0 007E  
    __end_of_EUSART1_DefaultFramingErrorHandler 0377     __size_of_EUSART1_DefaultFramingErrorHandler 0001  
          ??_EUSART1_DefaultFramingErrorHandler 0076             ?_EUSART1_DefaultFramingErrorHandler 0076  
            _EUSART1_DefaultFramingErrorHandler 0376                                 __initialization 0039  
                    __end_of_EUSART1_Initialize 0239                                    __end_of_main 0139  
                       __end_of_TMR2_Initialize 02FA                     ?_INTERRUPT_InterruptManager 0076  
                      _TMR2_SetInterruptHandler 033F                                          ??_main 0049  
                                ??_countTargets 0078                           ?_EUSART1_Transmit_ISR 0076  
                                        _ANSELA 1F38                                          _ANSELB 1F43  
                                        _ANSELC 1F4E                                          _RC1REG 0119  
                                        _RA2PPS 1F12                                          _RC1STA 011D  
                                        i1l2142 01EF                                          i1l1600 02DF  
                                        _ODCONA 1F3A                                          _ODCONB 1F45  
                                        _ODCONC 1F50                                          i1l1700 036D  
                                        i1l1620 0311                                          i1l1702 0371  
                                        i1l1550 01CA                                          i1l1542 01B5  
                                        i1l1710 0363                                          i1l1552 01CB  
                                        i1l1544 01BA                                          i1l1712 0365  
                                        i1l1562 01E1                                          i1l1554 01D4  
                                        i1l1546 01BE                                          i1l1618 030A  
                                        i1l1556 01DA                                          i1l1548 01C5  
                                        i1l1564 01E6                                          i1l1590 02C7  
                                        i1l1582 02B3                                          i1l1558 01DF  
                                        i1l1584 02BC                                          i1l1592 02CC  
                                        i1l1586 02C0                                          i1l1770 02A4  
                                        i1l1594 02CE                                          i1l1588 02C6  
                                        i1l1780 0243                                          i1l1772 02AA  
                                        i1l1764 0293                                          i1l1596 02D1  
                                        i1l1790 025E                                          i1l1782 0248  
                                        i1l1774 02AB                                          i1l1766 0299  
                                        i1l1598 02D7                                          i1l1870 001E  
                                        i1l1862 0006                                          i1l1792 0267  
                                        i1l1784 024E                                          i1l1776 0239  
                                        i1l1768 02A0                                          i1l1872 0022  
                                        i1l1864 000A                                          i1l1794 026E  
                                        i1l1786 0253                                          i1l1778 023E  
                                        i1l1874 002D                                          i1l1866 000F  
                                        i1l1788 0258                                          i1l1876 0031  
                                        i1l1868 0013                                          _INLVLA 1F3C  
                                        _INLVLB 1F47                                          _INLVLC 1F52  
                                        _OSCFRQ 0893                                          _TX1REG 011A  
                                        _TX1STA 011E                        ?_EUSART1_SetErrorHandler 0078  
                                        _target 0020                ??_EUSART1_SetOverrunErrorHandler 007A  
               ?_EUSART1_SetOverrunErrorHandler 0078                                __end_of_setState 0321  
                                _PMD_Initialize 032B                                       ??_isr_1ms 0078  
      TMR2_SetInterruptHandler@InterruptHandler 0078                                 _eusart1RxBuffer 0030  
                               _eusart1TxBuffer 00A0                               _SYSTEM_Initialize 02FA  
                       __end_of__initialization 004F                           __end_of_TMR2_CallBack 0317  
                            ?_SYSTEM_Initialize 0076                  __size_of_EUSART1_RxDataHandler 0019  
                 __end_of_EUSART1_RxDataHandler 02CC                                  __pcstackCOMMON 0076  
                           ??_SYSTEM_Initialize 007B                                       ?_TMR2_ISR 0076  
                              ?_TMR2_Initialize 0076                          __end_of_PMD_Initialize 0333  
                        ??_EUSART1_Transmit_ISR 0076                     __end_of_EUSART1_Receive_ISR 0272  
                     __end_of_SYSTEM_Initialize 030A                                   _eusart1RxHead 0073  
                                 _eusart1TxHead 0075                                   _eusart1RxTail 0072  
                                    __pbssBANK0 0020                                      __pbssBANK1 00A0  
                                 _eusart1TxTail 0074               _EUSART1_TxDefaultInterruptHandler 0045  
               ??_EUSART1_SetRxInterruptHandler 007A                                      __pnvCOMMON 007B  
                          __end_of_countTargets 01B5                              __size_of_scanInput 0046  
               __end_of_EUSART1_SetErrorHandler 0363                                      __pmaintext 0053  
                                    ??_TMR2_ISR 0078                                      __pintentry 0004  
                               ?_PMD_Initialize 0076          __end_of_EUSART1_SetFramingErrorHandler 035D  
       __size_of_EUSART1_SetFramingErrorHandler 0006                  _EUSART1_SetFramingErrorHandler 0357  
                  ?_EUSART1_DefaultErrorHandler 0076                                         _SP1BRGH 011C  
                                       _SP1BRGL 011B                                         _OSCCON1 088D  
                                       _OSCCON3 088F                                         _OSCSTAT 0890  
                                       _OSCTUNE 0892                                         _SLRCONA 1F3B  
                                       _SLRCONB 1F46                                         _SLRCONC 1F51  
                                     ?_setState 0076                      ??_TMR2_SetInterruptHandler 007A  
                                       __ptext1 0317                                         __ptext2 0339  
                                       __ptext3 0139                                         __ptext4 02FA  
                                       __ptext5 02E4                                         __ptext6 033F  
                                       __ptext7 032B                                         __ptext8 0272  
                                       __ptext9 0321                           _OSCILLATOR_Initialize 0321  
                                     _T2CONbits 028E                                         _isr_1ms 02CC  
                             __end_of_scanInput 01FB                              _EUSART1_Initialize 01FB  
                      ??_PIN_MANAGER_Initialize 0078                                       _T2HLTbits 028F  
                 ??_EUSART1_DefaultErrorHandler 0077                      __size_of_SYSTEM_Initialize 0010  
                                       clrloop0 0334                            end_of_initialization 004F  
                                     _T2RSTbits 0291                             ?_EUSART1_Initialize 0076  
                   _EUSART1_OverrunErrorHandler 003F                                      _resetEdges 0339  
         __end_of_EUSART1_SetRxInterruptHandler 0351          __size_of_EUSART1_SetRxInterruptHandler 0006  
                 _EUSART1_SetRxInterruptHandler 034B                                      ??_setState 0078  
                          ??_EUSART1_Initialize 007A                                       _PORTAbits 000C  
                                     _PORTBbits 000D                                       _PORTCbits 000E  
                                     _TRISAbits 0012                                      _stateTable 0369  
              __size_of_EUSART1_SetErrorHandler 0006                           __size_of_countTargets 007C  
          __size_of_EUSART1_DefaultErrorHandler 0004            __end_of_TMR2_DefaultInterruptHandler 0376  
         __size_of_TMR2_DefaultInterruptHandler 0001                    _TMR2_DefaultInterruptHandler 0375  
                             __size_of_TMR2_ISR 0006                          ?_OSCILLATOR_Initialize 0076  
                                  _countTargets 0139                             start_initialization 0039  
               __size_of_PIN_MANAGER_Initialize 0021   EUSART1_SetRxInterruptHandler@interruptHandler 0078  
 EUSART1_SetTxInterruptHandler@interruptHandler 0078                                     ?_resetEdges 0076  
                              ??_PMD_Initialize 0078                           _EUSART1_RxDataHandler 02B3  
                ?_EUSART1_SetRxInterruptHandler 0078                   ?_TMR2_DefaultInterruptHandler 0076  
                                _eusart1RxCount 0071                          __size_of_TMR2_CallBack 000D  
                                   __pbssCOMMON 0070               _EUSART1_RxDefaultInterruptHandler 0043  
                                     ___latbits 0002                   __size_of_EUSART1_Transmit_ISR 0020  
                                 __pcstackBANK0 0049                        __size_of_TMR2_Initialize 0016  
               ??_EUSART1_SetTxInterruptHandler 007A                ??_EUSART1_SetFramingErrorHandler 007A  
               ?_EUSART1_SetFramingErrorHandler 0078                    __size_of_EUSART1_Receive_ISR 0039  
                                     __pnvBANK0 003D                          _PIN_MANAGER_Initialize 0272  
                             __size_of_setState 000A                    ??_INTERRUPT_InterruptManager 0078  
                                      _BAUD1CON 011F                                        ?_isr_1ms 0076  
    __end_of_EUSART1_DefaultOverrunErrorHandler 0371     __size_of_EUSART1_DefaultOverrunErrorHandler 0004  
          ??_EUSART1_DefaultOverrunErrorHandler 0076             ?_EUSART1_DefaultOverrunErrorHandler 0076  
            _EUSART1_DefaultOverrunErrorHandler 036D                             __size_of_resetEdges 0006  
                          _EUSART1_ErrorHandler 003D                         _EUSART1_SetErrorHandler 035D  
                                      _T2CLKCON 0290                                       _scanInput 01B5  
                                      _LATAbits 0018         EUSART1_SetErrorHandler@interruptHandler 0078  
                                     clear_ram0 0333                                   _TMR2_CallBack 030A  
                                      _PIE3bits 0719                                        _PIE4bits 071A  
           __size_of_INTERRUPT_InterruptManager 0033                                        _PIR3bits 070F  
                                      _PIR4bits 0710                          ?_EUSART1_RxDataHandler 0076  
                                      _TMR2_ISR 0363                  ??_TMR2_DefaultInterruptHandler 0076  
             __size_of_TMR2_SetInterruptHandler 0006                       ?_TMR2_SetInterruptHandler 0078  
                                    ?_scanInput 0076                               ??_TMR2_Initialize 007A  
                                ?_TMR2_CallBack 0076           __end_of_EUSART1_SetTxInterruptHandler 034B  
        __size_of_EUSART1_SetTxInterruptHandler 0006                   _EUSART1_SetTxInterruptHandler 0345  
                       ??_OSCILLATOR_Initialize 0078                     __size_of_EUSART1_Initialize 003E  
                     ??_EUSART1_SetErrorHandler 007A             __end_of_EUSART1_DefaultErrorHandler 0375  
                   _EUSART1_DefaultErrorHandler 0371                                __size_of_isr_1ms 0018  
                                      __ptext10 01FB                                        __ptext11 0345  
                                      __ptext20 02CC                                        __ptext12 034B  
                                      __ptext21 01B5                                        __ptext13 0351  
                                      __ptext22 0293                                        __ptext14 0357  
                                      __ptext23 0239                                        __ptext15 035D  
                                      __ptext24 036D                                        __ptext25 0376  
                                      __ptext17 0363                                        __ptext26 0371  
                                      __ptext18 030A                                        __ptext27 02B3  
                                      __ptext19 0375                                       setState@s 0079  
                                 __size_of_main 00E6                                    ??_resetEdges 0078  
                                      _setState 0317                                      _RC1STAbits 011D  
EUSART1_SetOverrunErrorHandler@interruptHandler 0078                                        int$flags 007E  
            __end_of_INTERRUPT_InterruptManager 0037                      _INTERRUPT_InterruptManager 0004  
                   _EUSART1_FramingErrorHandler 0041                             _EUSART1_Receive_ISR 0239  
                                    _INTCONbits 000B                              __end_of_resetEdges 033F  
                                   ??_scanInput 0076                                        intlevel1 0000  
                               ??_TMR2_CallBack 0078                            ?_EUSART1_Receive_ISR 0076  
                       ?_PIN_MANAGER_Initialize 0076          __end_of_EUSART1_SetOverrunErrorHandler 0357  
       __size_of_EUSART1_SetOverrunErrorHandler 0006                  _EUSART1_SetOverrunErrorHandler 0351  
                  __end_of_EUSART1_Transmit_ISR 02B3  EUSART1_SetFramingErrorHandler@interruptHandler 0078  
                ?_EUSART1_SetTxInterruptHandler 0078                              __end_of_stateTable 036D  
                            _eusart1RxLastError 0070                                   __pstringtext1 0369  
                                    _TX1STAbits 011E                           ??_EUSART1_Receive_ISR 0077  
                __end_of_PIN_MANAGER_Initialize 0293                           _TMR2_InterruptHandler 0047  
                       ??_EUSART1_RxDataHandler 0076  
