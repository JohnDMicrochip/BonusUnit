

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Jul 17 15:44:03 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F15345
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 2.05
    44                           ; Generated 20/12/2018 GMT
    45                           ; 
    46                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F15345 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  009B                     	;# 
    99  009B                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  0119                     	;# 
   105  0119                     	;# 
   106  0119                     	;# 
   107  011A                     	;# 
   108  011A                     	;# 
   109  011A                     	;# 
   110  011B                     	;# 
   111  011B                     	;# 
   112  011B                     	;# 
   113  011B                     	;# 
   114  011B                     	;# 
   115  011C                     	;# 
   116  011C                     	;# 
   117  011C                     	;# 
   118  011D                     	;# 
   119  011D                     	;# 
   120  011D                     	;# 
   121  011E                     	;# 
   122  011E                     	;# 
   123  011E                     	;# 
   124  011F                     	;# 
   125  011F                     	;# 
   126  011F                     	;# 
   127  011F                     	;# 
   128  011F                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  018E                     	;# 
   132  018F                     	;# 
   133  0190                     	;# 
   134  0191                     	;# 
   135  0192                     	;# 
   136  020C                     	;# 
   137  020C                     	;# 
   138  020D                     	;# 
   139  020E                     	;# 
   140  020F                     	;# 
   141  020F                     	;# 
   142  0210                     	;# 
   143  0210                     	;# 
   144  0211                     	;# 
   145  0211                     	;# 
   146  028C                     	;# 
   147  028C                     	;# 
   148  028D                     	;# 
   149  028D                     	;# 
   150  028E                     	;# 
   151  028F                     	;# 
   152  0290                     	;# 
   153  0291                     	;# 
   154  030C                     	;# 
   155  030C                     	;# 
   156  030D                     	;# 
   157  030E                     	;# 
   158  030F                     	;# 
   159  0310                     	;# 
   160  0310                     	;# 
   161  0311                     	;# 
   162  0312                     	;# 
   163  0313                     	;# 
   164  0314                     	;# 
   165  0314                     	;# 
   166  0315                     	;# 
   167  0316                     	;# 
   168  0318                     	;# 
   169  0318                     	;# 
   170  0319                     	;# 
   171  031A                     	;# 
   172  031C                     	;# 
   173  031C                     	;# 
   174  031D                     	;# 
   175  031E                     	;# 
   176  038C                     	;# 
   177  038C                     	;# 
   178  038D                     	;# 
   179  038E                     	;# 
   180  058C                     	;# 
   181  058C                     	;# 
   182  058D                     	;# 
   183  058E                     	;# 
   184  058F                     	;# 
   185  058F                     	;# 
   186  0590                     	;# 
   187  0591                     	;# 
   188  0592                     	;# 
   189  0593                     	;# 
   190  059C                     	;# 
   191  059C                     	;# 
   192  059D                     	;# 
   193  059D                     	;# 
   194  059E                     	;# 
   195  059F                     	;# 
   196  060C                     	;# 
   197  060D                     	;# 
   198  060E                     	;# 
   199  060F                     	;# 
   200  0610                     	;# 
   201  0611                     	;# 
   202  0612                     	;# 
   203  0613                     	;# 
   204  0614                     	;# 
   205  070C                     	;# 
   206  070D                     	;# 
   207  070E                     	;# 
   208  070F                     	;# 
   209  0710                     	;# 
   210  0711                     	;# 
   211  0712                     	;# 
   212  0713                     	;# 
   213  0716                     	;# 
   214  0717                     	;# 
   215  0718                     	;# 
   216  0719                     	;# 
   217  071A                     	;# 
   218  071B                     	;# 
   219  071C                     	;# 
   220  071D                     	;# 
   221  0796                     	;# 
   222  0797                     	;# 
   223  0798                     	;# 
   224  0799                     	;# 
   225  079A                     	;# 
   226  079B                     	;# 
   227  080C                     	;# 
   228  080D                     	;# 
   229  080E                     	;# 
   230  080F                     	;# 
   231  0810                     	;# 
   232  0811                     	;# 
   233  0812                     	;# 
   234  0813                     	;# 
   235  0814                     	;# 
   236  081A                     	;# 
   237  081A                     	;# 
   238  081B                     	;# 
   239  081C                     	;# 
   240  081C                     	;# 
   241  081D                     	;# 
   242  081E                     	;# 
   243  081F                     	;# 
   244  088C                     	;# 
   245  088D                     	;# 
   246  088E                     	;# 
   247  088F                     	;# 
   248  0890                     	;# 
   249  0891                     	;# 
   250  0892                     	;# 
   251  0893                     	;# 
   252  0895                     	;# 
   253  0896                     	;# 
   254  090C                     	;# 
   255  090E                     	;# 
   256  090F                     	;# 
   257  091F                     	;# 
   258  098F                     	;# 
   259  098F                     	;# 
   260  0990                     	;# 
   261  0991                     	;# 
   262  0992                     	;# 
   263  0993                     	;# 
   264  0994                     	;# 
   265  0995                     	;# 
   266  0996                     	;# 
   267  0997                     	;# 
   268  0A19                     	;# 
   269  0A19                     	;# 
   270  0A1A                     	;# 
   271  0A1A                     	;# 
   272  0A1B                     	;# 
   273  0A1B                     	;# 
   274  0A1B                     	;# 
   275  0A1C                     	;# 
   276  0A1C                     	;# 
   277  0A1D                     	;# 
   278  0A1D                     	;# 
   279  0A1E                     	;# 
   280  0A1E                     	;# 
   281  0A1F                     	;# 
   282  0A1F                     	;# 
   283  0A1F                     	;# 
   284  1E0F                     	;# 
   285  1E10                     	;# 
   286  1E11                     	;# 
   287  1E12                     	;# 
   288  1E13                     	;# 
   289  1E14                     	;# 
   290  1E15                     	;# 
   291  1E16                     	;# 
   292  1E17                     	;# 
   293  1E18                     	;# 
   294  1E19                     	;# 
   295  1E1A                     	;# 
   296  1E1B                     	;# 
   297  1E1C                     	;# 
   298  1E1D                     	;# 
   299  1E1E                     	;# 
   300  1E1F                     	;# 
   301  1E20                     	;# 
   302  1E21                     	;# 
   303  1E22                     	;# 
   304  1E23                     	;# 
   305  1E24                     	;# 
   306  1E25                     	;# 
   307  1E26                     	;# 
   308  1E27                     	;# 
   309  1E28                     	;# 
   310  1E29                     	;# 
   311  1E2A                     	;# 
   312  1E2B                     	;# 
   313  1E2C                     	;# 
   314  1E2D                     	;# 
   315  1E2E                     	;# 
   316  1E2F                     	;# 
   317  1E30                     	;# 
   318  1E31                     	;# 
   319  1E32                     	;# 
   320  1E33                     	;# 
   321  1E34                     	;# 
   322  1E35                     	;# 
   323  1E36                     	;# 
   324  1E37                     	;# 
   325  1E8F                     	;# 
   326  1E90                     	;# 
   327  1E91                     	;# 
   328  1E92                     	;# 
   329  1E93                     	;# 
   330  1E9C                     	;# 
   331  1EA1                     	;# 
   332  1EA2                     	;# 
   333  1EB1                     	;# 
   334  1EBB                     	;# 
   335  1EBC                     	;# 
   336  1EBD                     	;# 
   337  1EBE                     	;# 
   338  1EC3                     	;# 
   339  1EC5                     	;# 
   340  1EC6                     	;# 
   341  1EC7                     	;# 
   342  1ECB                     	;# 
   343  1ECC                     	;# 
   344  1ECD                     	;# 
   345  1ECE                     	;# 
   346  1F10                     	;# 
   347  1F11                     	;# 
   348  1F12                     	;# 
   349  1F13                     	;# 
   350  1F14                     	;# 
   351  1F15                     	;# 
   352  1F1C                     	;# 
   353  1F1D                     	;# 
   354  1F1E                     	;# 
   355  1F1F                     	;# 
   356  1F20                     	;# 
   357  1F21                     	;# 
   358  1F22                     	;# 
   359  1F23                     	;# 
   360  1F24                     	;# 
   361  1F25                     	;# 
   362  1F26                     	;# 
   363  1F27                     	;# 
   364  1F38                     	;# 
   365  1F39                     	;# 
   366  1F3A                     	;# 
   367  1F3B                     	;# 
   368  1F3C                     	;# 
   369  1F3D                     	;# 
   370  1F3E                     	;# 
   371  1F3F                     	;# 
   372  1F43                     	;# 
   373  1F44                     	;# 
   374  1F45                     	;# 
   375  1F46                     	;# 
   376  1F47                     	;# 
   377  1F48                     	;# 
   378  1F49                     	;# 
   379  1F4A                     	;# 
   380  1F4E                     	;# 
   381  1F4F                     	;# 
   382  1F50                     	;# 
   383  1F51                     	;# 
   384  1F52                     	;# 
   385  1F53                     	;# 
   386  1F54                     	;# 
   387  1F55                     	;# 
   388  1FE4                     	;# 
   389  1FE5                     	;# 
   390  1FE6                     	;# 
   391  1FE7                     	;# 
   392  1FE8                     	;# 
   393  1FE8                     	;# 
   394  1FE9                     	;# 
   395  1FEA                     	;# 
   396  1FEA                     	;# 
   397  1FEB                     	;# 
   398  1FED                     	;# 
   399  1FEE                     	;# 
   400  1FEF                     	;# 
   401  0000                     	;# 
   402  0001                     	;# 
   403  0002                     	;# 
   404  0003                     	;# 
   405  0004                     	;# 
   406  0005                     	;# 
   407  0006                     	;# 
   408  0007                     	;# 
   409  0008                     	;# 
   410  0009                     	;# 
   411  000A                     	;# 
   412  000B                     	;# 
   413  000C                     	;# 
   414  000D                     	;# 
   415  000E                     	;# 
   416  0012                     	;# 
   417  0013                     	;# 
   418  0014                     	;# 
   419  0018                     	;# 
   420  0019                     	;# 
   421  001A                     	;# 
   422  009B                     	;# 
   423  009B                     	;# 
   424  009C                     	;# 
   425  009D                     	;# 
   426  009E                     	;# 
   427  009F                     	;# 
   428  0119                     	;# 
   429  0119                     	;# 
   430  0119                     	;# 
   431  011A                     	;# 
   432  011A                     	;# 
   433  011A                     	;# 
   434  011B                     	;# 
   435  011B                     	;# 
   436  011B                     	;# 
   437  011B                     	;# 
   438  011B                     	;# 
   439  011C                     	;# 
   440  011C                     	;# 
   441  011C                     	;# 
   442  011D                     	;# 
   443  011D                     	;# 
   444  011D                     	;# 
   445  011E                     	;# 
   446  011E                     	;# 
   447  011E                     	;# 
   448  011F                     	;# 
   449  011F                     	;# 
   450  011F                     	;# 
   451  011F                     	;# 
   452  011F                     	;# 
   453  018C                     	;# 
   454  018D                     	;# 
   455  018E                     	;# 
   456  018F                     	;# 
   457  0190                     	;# 
   458  0191                     	;# 
   459  0192                     	;# 
   460  020C                     	;# 
   461  020C                     	;# 
   462  020D                     	;# 
   463  020E                     	;# 
   464  020F                     	;# 
   465  020F                     	;# 
   466  0210                     	;# 
   467  0210                     	;# 
   468  0211                     	;# 
   469  0211                     	;# 
   470  028C                     	;# 
   471  028C                     	;# 
   472  028D                     	;# 
   473  028D                     	;# 
   474  028E                     	;# 
   475  028F                     	;# 
   476  0290                     	;# 
   477  0291                     	;# 
   478  030C                     	;# 
   479  030C                     	;# 
   480  030D                     	;# 
   481  030E                     	;# 
   482  030F                     	;# 
   483  0310                     	;# 
   484  0310                     	;# 
   485  0311                     	;# 
   486  0312                     	;# 
   487  0313                     	;# 
   488  0314                     	;# 
   489  0314                     	;# 
   490  0315                     	;# 
   491  0316                     	;# 
   492  0318                     	;# 
   493  0318                     	;# 
   494  0319                     	;# 
   495  031A                     	;# 
   496  031C                     	;# 
   497  031C                     	;# 
   498  031D                     	;# 
   499  031E                     	;# 
   500  038C                     	;# 
   501  038C                     	;# 
   502  038D                     	;# 
   503  038E                     	;# 
   504  058C                     	;# 
   505  058C                     	;# 
   506  058D                     	;# 
   507  058E                     	;# 
   508  058F                     	;# 
   509  058F                     	;# 
   510  0590                     	;# 
   511  0591                     	;# 
   512  0592                     	;# 
   513  0593                     	;# 
   514  059C                     	;# 
   515  059C                     	;# 
   516  059D                     	;# 
   517  059D                     	;# 
   518  059E                     	;# 
   519  059F                     	;# 
   520  060C                     	;# 
   521  060D                     	;# 
   522  060E                     	;# 
   523  060F                     	;# 
   524  0610                     	;# 
   525  0611                     	;# 
   526  0612                     	;# 
   527  0613                     	;# 
   528  0614                     	;# 
   529  070C                     	;# 
   530  070D                     	;# 
   531  070E                     	;# 
   532  070F                     	;# 
   533  0710                     	;# 
   534  0711                     	;# 
   535  0712                     	;# 
   536  0713                     	;# 
   537  0716                     	;# 
   538  0717                     	;# 
   539  0718                     	;# 
   540  0719                     	;# 
   541  071A                     	;# 
   542  071B                     	;# 
   543  071C                     	;# 
   544  071D                     	;# 
   545  0796                     	;# 
   546  0797                     	;# 
   547  0798                     	;# 
   548  0799                     	;# 
   549  079A                     	;# 
   550  079B                     	;# 
   551  080C                     	;# 
   552  080D                     	;# 
   553  080E                     	;# 
   554  080F                     	;# 
   555  0810                     	;# 
   556  0811                     	;# 
   557  0812                     	;# 
   558  0813                     	;# 
   559  0814                     	;# 
   560  081A                     	;# 
   561  081A                     	;# 
   562  081B                     	;# 
   563  081C                     	;# 
   564  081C                     	;# 
   565  081D                     	;# 
   566  081E                     	;# 
   567  081F                     	;# 
   568  088C                     	;# 
   569  088D                     	;# 
   570  088E                     	;# 
   571  088F                     	;# 
   572  0890                     	;# 
   573  0891                     	;# 
   574  0892                     	;# 
   575  0893                     	;# 
   576  0895                     	;# 
   577  0896                     	;# 
   578  090C                     	;# 
   579  090E                     	;# 
   580  090F                     	;# 
   581  091F                     	;# 
   582  098F                     	;# 
   583  098F                     	;# 
   584  0990                     	;# 
   585  0991                     	;# 
   586  0992                     	;# 
   587  0993                     	;# 
   588  0994                     	;# 
   589  0995                     	;# 
   590  0996                     	;# 
   591  0997                     	;# 
   592  0A19                     	;# 
   593  0A19                     	;# 
   594  0A1A                     	;# 
   595  0A1A                     	;# 
   596  0A1B                     	;# 
   597  0A1B                     	;# 
   598  0A1B                     	;# 
   599  0A1C                     	;# 
   600  0A1C                     	;# 
   601  0A1D                     	;# 
   602  0A1D                     	;# 
   603  0A1E                     	;# 
   604  0A1E                     	;# 
   605  0A1F                     	;# 
   606  0A1F                     	;# 
   607  0A1F                     	;# 
   608  1E0F                     	;# 
   609  1E10                     	;# 
   610  1E11                     	;# 
   611  1E12                     	;# 
   612  1E13                     	;# 
   613  1E14                     	;# 
   614  1E15                     	;# 
   615  1E16                     	;# 
   616  1E17                     	;# 
   617  1E18                     	;# 
   618  1E19                     	;# 
   619  1E1A                     	;# 
   620  1E1B                     	;# 
   621  1E1C                     	;# 
   622  1E1D                     	;# 
   623  1E1E                     	;# 
   624  1E1F                     	;# 
   625  1E20                     	;# 
   626  1E21                     	;# 
   627  1E22                     	;# 
   628  1E23                     	;# 
   629  1E24                     	;# 
   630  1E25                     	;# 
   631  1E26                     	;# 
   632  1E27                     	;# 
   633  1E28                     	;# 
   634  1E29                     	;# 
   635  1E2A                     	;# 
   636  1E2B                     	;# 
   637  1E2C                     	;# 
   638  1E2D                     	;# 
   639  1E2E                     	;# 
   640  1E2F                     	;# 
   641  1E30                     	;# 
   642  1E31                     	;# 
   643  1E32                     	;# 
   644  1E33                     	;# 
   645  1E34                     	;# 
   646  1E35                     	;# 
   647  1E36                     	;# 
   648  1E37                     	;# 
   649  1E8F                     	;# 
   650  1E90                     	;# 
   651  1E91                     	;# 
   652  1E92                     	;# 
   653  1E93                     	;# 
   654  1E9C                     	;# 
   655  1EA1                     	;# 
   656  1EA2                     	;# 
   657  1EB1                     	;# 
   658  1EBB                     	;# 
   659  1EBC                     	;# 
   660  1EBD                     	;# 
   661  1EBE                     	;# 
   662  1EC3                     	;# 
   663  1EC5                     	;# 
   664  1EC6                     	;# 
   665  1EC7                     	;# 
   666  1ECB                     	;# 
   667  1ECC                     	;# 
   668  1ECD                     	;# 
   669  1ECE                     	;# 
   670  1F10                     	;# 
   671  1F11                     	;# 
   672  1F12                     	;# 
   673  1F13                     	;# 
   674  1F14                     	;# 
   675  1F15                     	;# 
   676  1F1C                     	;# 
   677  1F1D                     	;# 
   678  1F1E                     	;# 
   679  1F1F                     	;# 
   680  1F20                     	;# 
   681  1F21                     	;# 
   682  1F22                     	;# 
   683  1F23                     	;# 
   684  1F24                     	;# 
   685  1F25                     	;# 
   686  1F26                     	;# 
   687  1F27                     	;# 
   688  1F38                     	;# 
   689  1F39                     	;# 
   690  1F3A                     	;# 
   691  1F3B                     	;# 
   692  1F3C                     	;# 
   693  1F3D                     	;# 
   694  1F3E                     	;# 
   695  1F3F                     	;# 
   696  1F43                     	;# 
   697  1F44                     	;# 
   698  1F45                     	;# 
   699  1F46                     	;# 
   700  1F47                     	;# 
   701  1F48                     	;# 
   702  1F49                     	;# 
   703  1F4A                     	;# 
   704  1F4E                     	;# 
   705  1F4F                     	;# 
   706  1F50                     	;# 
   707  1F51                     	;# 
   708  1F52                     	;# 
   709  1F53                     	;# 
   710  1F54                     	;# 
   711  1F55                     	;# 
   712  1FE4                     	;# 
   713  1FE5                     	;# 
   714  1FE6                     	;# 
   715  1FE7                     	;# 
   716  1FE8                     	;# 
   717  1FE8                     	;# 
   718  1FE9                     	;# 
   719  1FEA                     	;# 
   720  1FEA                     	;# 
   721  1FEB                     	;# 
   722  1FED                     	;# 
   723  1FEE                     	;# 
   724  1FEF                     	;# 
   725  0000                     	;# 
   726  0001                     	;# 
   727  0002                     	;# 
   728  0003                     	;# 
   729  0004                     	;# 
   730  0005                     	;# 
   731  0006                     	;# 
   732  0007                     	;# 
   733  0008                     	;# 
   734  0009                     	;# 
   735  000A                     	;# 
   736  000B                     	;# 
   737  000C                     	;# 
   738  000D                     	;# 
   739  000E                     	;# 
   740  0012                     	;# 
   741  0013                     	;# 
   742  0014                     	;# 
   743  0018                     	;# 
   744  0019                     	;# 
   745  001A                     	;# 
   746  009B                     	;# 
   747  009B                     	;# 
   748  009C                     	;# 
   749  009D                     	;# 
   750  009E                     	;# 
   751  009F                     	;# 
   752  0119                     	;# 
   753  0119                     	;# 
   754  0119                     	;# 
   755  011A                     	;# 
   756  011A                     	;# 
   757  011A                     	;# 
   758  011B                     	;# 
   759  011B                     	;# 
   760  011B                     	;# 
   761  011B                     	;# 
   762  011B                     	;# 
   763  011C                     	;# 
   764  011C                     	;# 
   765  011C                     	;# 
   766  011D                     	;# 
   767  011D                     	;# 
   768  011D                     	;# 
   769  011E                     	;# 
   770  011E                     	;# 
   771  011E                     	;# 
   772  011F                     	;# 
   773  011F                     	;# 
   774  011F                     	;# 
   775  011F                     	;# 
   776  011F                     	;# 
   777  018C                     	;# 
   778  018D                     	;# 
   779  018E                     	;# 
   780  018F                     	;# 
   781  0190                     	;# 
   782  0191                     	;# 
   783  0192                     	;# 
   784  020C                     	;# 
   785  020C                     	;# 
   786  020D                     	;# 
   787  020E                     	;# 
   788  020F                     	;# 
   789  020F                     	;# 
   790  0210                     	;# 
   791  0210                     	;# 
   792  0211                     	;# 
   793  0211                     	;# 
   794  028C                     	;# 
   795  028C                     	;# 
   796  028D                     	;# 
   797  028D                     	;# 
   798  028E                     	;# 
   799  028F                     	;# 
   800  0290                     	;# 
   801  0291                     	;# 
   802  030C                     	;# 
   803  030C                     	;# 
   804  030D                     	;# 
   805  030E                     	;# 
   806  030F                     	;# 
   807  0310                     	;# 
   808  0310                     	;# 
   809  0311                     	;# 
   810  0312                     	;# 
   811  0313                     	;# 
   812  0314                     	;# 
   813  0314                     	;# 
   814  0315                     	;# 
   815  0316                     	;# 
   816  0318                     	;# 
   817  0318                     	;# 
   818  0319                     	;# 
   819  031A                     	;# 
   820  031C                     	;# 
   821  031C                     	;# 
   822  031D                     	;# 
   823  031E                     	;# 
   824  038C                     	;# 
   825  038C                     	;# 
   826  038D                     	;# 
   827  038E                     	;# 
   828  058C                     	;# 
   829  058C                     	;# 
   830  058D                     	;# 
   831  058E                     	;# 
   832  058F                     	;# 
   833  058F                     	;# 
   834  0590                     	;# 
   835  0591                     	;# 
   836  0592                     	;# 
   837  0593                     	;# 
   838  059C                     	;# 
   839  059C                     	;# 
   840  059D                     	;# 
   841  059D                     	;# 
   842  059E                     	;# 
   843  059F                     	;# 
   844  060C                     	;# 
   845  060D                     	;# 
   846  060E                     	;# 
   847  060F                     	;# 
   848  0610                     	;# 
   849  0611                     	;# 
   850  0612                     	;# 
   851  0613                     	;# 
   852  0614                     	;# 
   853  070C                     	;# 
   854  070D                     	;# 
   855  070E                     	;# 
   856  070F                     	;# 
   857  0710                     	;# 
   858  0711                     	;# 
   859  0712                     	;# 
   860  0713                     	;# 
   861  0716                     	;# 
   862  0717                     	;# 
   863  0718                     	;# 
   864  0719                     	;# 
   865  071A                     	;# 
   866  071B                     	;# 
   867  071C                     	;# 
   868  071D                     	;# 
   869  0796                     	;# 
   870  0797                     	;# 
   871  0798                     	;# 
   872  0799                     	;# 
   873  079A                     	;# 
   874  079B                     	;# 
   875  080C                     	;# 
   876  080D                     	;# 
   877  080E                     	;# 
   878  080F                     	;# 
   879  0810                     	;# 
   880  0811                     	;# 
   881  0812                     	;# 
   882  0813                     	;# 
   883  0814                     	;# 
   884  081A                     	;# 
   885  081A                     	;# 
   886  081B                     	;# 
   887  081C                     	;# 
   888  081C                     	;# 
   889  081D                     	;# 
   890  081E                     	;# 
   891  081F                     	;# 
   892  088C                     	;# 
   893  088D                     	;# 
   894  088E                     	;# 
   895  088F                     	;# 
   896  0890                     	;# 
   897  0891                     	;# 
   898  0892                     	;# 
   899  0893                     	;# 
   900  0895                     	;# 
   901  0896                     	;# 
   902  090C                     	;# 
   903  090E                     	;# 
   904  090F                     	;# 
   905  091F                     	;# 
   906  098F                     	;# 
   907  098F                     	;# 
   908  0990                     	;# 
   909  0991                     	;# 
   910  0992                     	;# 
   911  0993                     	;# 
   912  0994                     	;# 
   913  0995                     	;# 
   914  0996                     	;# 
   915  0997                     	;# 
   916  0A19                     	;# 
   917  0A19                     	;# 
   918  0A1A                     	;# 
   919  0A1A                     	;# 
   920  0A1B                     	;# 
   921  0A1B                     	;# 
   922  0A1B                     	;# 
   923  0A1C                     	;# 
   924  0A1C                     	;# 
   925  0A1D                     	;# 
   926  0A1D                     	;# 
   927  0A1E                     	;# 
   928  0A1E                     	;# 
   929  0A1F                     	;# 
   930  0A1F                     	;# 
   931  0A1F                     	;# 
   932  1E0F                     	;# 
   933  1E10                     	;# 
   934  1E11                     	;# 
   935  1E12                     	;# 
   936  1E13                     	;# 
   937  1E14                     	;# 
   938  1E15                     	;# 
   939  1E16                     	;# 
   940  1E17                     	;# 
   941  1E18                     	;# 
   942  1E19                     	;# 
   943  1E1A                     	;# 
   944  1E1B                     	;# 
   945  1E1C                     	;# 
   946  1E1D                     	;# 
   947  1E1E                     	;# 
   948  1E1F                     	;# 
   949  1E20                     	;# 
   950  1E21                     	;# 
   951  1E22                     	;# 
   952  1E23                     	;# 
   953  1E24                     	;# 
   954  1E25                     	;# 
   955  1E26                     	;# 
   956  1E27                     	;# 
   957  1E28                     	;# 
   958  1E29                     	;# 
   959  1E2A                     	;# 
   960  1E2B                     	;# 
   961  1E2C                     	;# 
   962  1E2D                     	;# 
   963  1E2E                     	;# 
   964  1E2F                     	;# 
   965  1E30                     	;# 
   966  1E31                     	;# 
   967  1E32                     	;# 
   968  1E33                     	;# 
   969  1E34                     	;# 
   970  1E35                     	;# 
   971  1E36                     	;# 
   972  1E37                     	;# 
   973  1E8F                     	;# 
   974  1E90                     	;# 
   975  1E91                     	;# 
   976  1E92                     	;# 
   977  1E93                     	;# 
   978  1E9C                     	;# 
   979  1EA1                     	;# 
   980  1EA2                     	;# 
   981  1EB1                     	;# 
   982  1EBB                     	;# 
   983  1EBC                     	;# 
   984  1EBD                     	;# 
   985  1EBE                     	;# 
   986  1EC3                     	;# 
   987  1EC5                     	;# 
   988  1EC6                     	;# 
   989  1EC7                     	;# 
   990  1ECB                     	;# 
   991  1ECC                     	;# 
   992  1ECD                     	;# 
   993  1ECE                     	;# 
   994  1F10                     	;# 
   995  1F11                     	;# 
   996  1F12                     	;# 
   997  1F13                     	;# 
   998  1F14                     	;# 
   999  1F15                     	;# 
  1000  1F1C                     	;# 
  1001  1F1D                     	;# 
  1002  1F1E                     	;# 
  1003  1F1F                     	;# 
  1004  1F20                     	;# 
  1005  1F21                     	;# 
  1006  1F22                     	;# 
  1007  1F23                     	;# 
  1008  1F24                     	;# 
  1009  1F25                     	;# 
  1010  1F26                     	;# 
  1011  1F27                     	;# 
  1012  1F38                     	;# 
  1013  1F39                     	;# 
  1014  1F3A                     	;# 
  1015  1F3B                     	;# 
  1016  1F3C                     	;# 
  1017  1F3D                     	;# 
  1018  1F3E                     	;# 
  1019  1F3F                     	;# 
  1020  1F43                     	;# 
  1021  1F44                     	;# 
  1022  1F45                     	;# 
  1023  1F46                     	;# 
  1024  1F47                     	;# 
  1025  1F48                     	;# 
  1026  1F49                     	;# 
  1027  1F4A                     	;# 
  1028  1F4E                     	;# 
  1029  1F4F                     	;# 
  1030  1F50                     	;# 
  1031  1F51                     	;# 
  1032  1F52                     	;# 
  1033  1F53                     	;# 
  1034  1F54                     	;# 
  1035  1F55                     	;# 
  1036  1FE4                     	;# 
  1037  1FE5                     	;# 
  1038  1FE6                     	;# 
  1039  1FE7                     	;# 
  1040  1FE8                     	;# 
  1041  1FE8                     	;# 
  1042  1FE9                     	;# 
  1043  1FEA                     	;# 
  1044  1FEA                     	;# 
  1045  1FEB                     	;# 
  1046  1FED                     	;# 
  1047  1FEE                     	;# 
  1048  1FEF                     	;# 
  1049  0000                     	;# 
  1050  0001                     	;# 
  1051  0002                     	;# 
  1052  0003                     	;# 
  1053  0004                     	;# 
  1054  0005                     	;# 
  1055  0006                     	;# 
  1056  0007                     	;# 
  1057  0008                     	;# 
  1058  0009                     	;# 
  1059  000A                     	;# 
  1060  000B                     	;# 
  1061  000C                     	;# 
  1062  000D                     	;# 
  1063  000E                     	;# 
  1064  0012                     	;# 
  1065  0013                     	;# 
  1066  0014                     	;# 
  1067  0018                     	;# 
  1068  0019                     	;# 
  1069  001A                     	;# 
  1070  009B                     	;# 
  1071  009B                     	;# 
  1072  009C                     	;# 
  1073  009D                     	;# 
  1074  009E                     	;# 
  1075  009F                     	;# 
  1076  0119                     	;# 
  1077  0119                     	;# 
  1078  0119                     	;# 
  1079  011A                     	;# 
  1080  011A                     	;# 
  1081  011A                     	;# 
  1082  011B                     	;# 
  1083  011B                     	;# 
  1084  011B                     	;# 
  1085  011B                     	;# 
  1086  011B                     	;# 
  1087  011C                     	;# 
  1088  011C                     	;# 
  1089  011C                     	;# 
  1090  011D                     	;# 
  1091  011D                     	;# 
  1092  011D                     	;# 
  1093  011E                     	;# 
  1094  011E                     	;# 
  1095  011E                     	;# 
  1096  011F                     	;# 
  1097  011F                     	;# 
  1098  011F                     	;# 
  1099  011F                     	;# 
  1100  011F                     	;# 
  1101  018C                     	;# 
  1102  018D                     	;# 
  1103  018E                     	;# 
  1104  018F                     	;# 
  1105  0190                     	;# 
  1106  0191                     	;# 
  1107  0192                     	;# 
  1108  020C                     	;# 
  1109  020C                     	;# 
  1110  020D                     	;# 
  1111  020E                     	;# 
  1112  020F                     	;# 
  1113  020F                     	;# 
  1114  0210                     	;# 
  1115  0210                     	;# 
  1116  0211                     	;# 
  1117  0211                     	;# 
  1118  028C                     	;# 
  1119  028C                     	;# 
  1120  028D                     	;# 
  1121  028D                     	;# 
  1122  028E                     	;# 
  1123  028F                     	;# 
  1124  0290                     	;# 
  1125  0291                     	;# 
  1126  030C                     	;# 
  1127  030C                     	;# 
  1128  030D                     	;# 
  1129  030E                     	;# 
  1130  030F                     	;# 
  1131  0310                     	;# 
  1132  0310                     	;# 
  1133  0311                     	;# 
  1134  0312                     	;# 
  1135  0313                     	;# 
  1136  0314                     	;# 
  1137  0314                     	;# 
  1138  0315                     	;# 
  1139  0316                     	;# 
  1140  0318                     	;# 
  1141  0318                     	;# 
  1142  0319                     	;# 
  1143  031A                     	;# 
  1144  031C                     	;# 
  1145  031C                     	;# 
  1146  031D                     	;# 
  1147  031E                     	;# 
  1148  038C                     	;# 
  1149  038C                     	;# 
  1150  038D                     	;# 
  1151  038E                     	;# 
  1152  058C                     	;# 
  1153  058C                     	;# 
  1154  058D                     	;# 
  1155  058E                     	;# 
  1156  058F                     	;# 
  1157  058F                     	;# 
  1158  0590                     	;# 
  1159  0591                     	;# 
  1160  0592                     	;# 
  1161  0593                     	;# 
  1162  059C                     	;# 
  1163  059C                     	;# 
  1164  059D                     	;# 
  1165  059D                     	;# 
  1166  059E                     	;# 
  1167  059F                     	;# 
  1168  060C                     	;# 
  1169  060D                     	;# 
  1170  060E                     	;# 
  1171  060F                     	;# 
  1172  0610                     	;# 
  1173  0611                     	;# 
  1174  0612                     	;# 
  1175  0613                     	;# 
  1176  0614                     	;# 
  1177  070C                     	;# 
  1178  070D                     	;# 
  1179  070E                     	;# 
  1180  070F                     	;# 
  1181  0710                     	;# 
  1182  0711                     	;# 
  1183  0712                     	;# 
  1184  0713                     	;# 
  1185  0716                     	;# 
  1186  0717                     	;# 
  1187  0718                     	;# 
  1188  0719                     	;# 
  1189  071A                     	;# 
  1190  071B                     	;# 
  1191  071C                     	;# 
  1192  071D                     	;# 
  1193  0796                     	;# 
  1194  0797                     	;# 
  1195  0798                     	;# 
  1196  0799                     	;# 
  1197  079A                     	;# 
  1198  079B                     	;# 
  1199  080C                     	;# 
  1200  080D                     	;# 
  1201  080E                     	;# 
  1202  080F                     	;# 
  1203  0810                     	;# 
  1204  0811                     	;# 
  1205  0812                     	;# 
  1206  0813                     	;# 
  1207  0814                     	;# 
  1208  081A                     	;# 
  1209  081A                     	;# 
  1210  081B                     	;# 
  1211  081C                     	;# 
  1212  081C                     	;# 
  1213  081D                     	;# 
  1214  081E                     	;# 
  1215  081F                     	;# 
  1216  088C                     	;# 
  1217  088D                     	;# 
  1218  088E                     	;# 
  1219  088F                     	;# 
  1220  0890                     	;# 
  1221  0891                     	;# 
  1222  0892                     	;# 
  1223  0893                     	;# 
  1224  0895                     	;# 
  1225  0896                     	;# 
  1226  090C                     	;# 
  1227  090E                     	;# 
  1228  090F                     	;# 
  1229  091F                     	;# 
  1230  098F                     	;# 
  1231  098F                     	;# 
  1232  0990                     	;# 
  1233  0991                     	;# 
  1234  0992                     	;# 
  1235  0993                     	;# 
  1236  0994                     	;# 
  1237  0995                     	;# 
  1238  0996                     	;# 
  1239  0997                     	;# 
  1240  0A19                     	;# 
  1241  0A19                     	;# 
  1242  0A1A                     	;# 
  1243  0A1A                     	;# 
  1244  0A1B                     	;# 
  1245  0A1B                     	;# 
  1246  0A1B                     	;# 
  1247  0A1C                     	;# 
  1248  0A1C                     	;# 
  1249  0A1D                     	;# 
  1250  0A1D                     	;# 
  1251  0A1E                     	;# 
  1252  0A1E                     	;# 
  1253  0A1F                     	;# 
  1254  0A1F                     	;# 
  1255  0A1F                     	;# 
  1256  1E0F                     	;# 
  1257  1E10                     	;# 
  1258  1E11                     	;# 
  1259  1E12                     	;# 
  1260  1E13                     	;# 
  1261  1E14                     	;# 
  1262  1E15                     	;# 
  1263  1E16                     	;# 
  1264  1E17                     	;# 
  1265  1E18                     	;# 
  1266  1E19                     	;# 
  1267  1E1A                     	;# 
  1268  1E1B                     	;# 
  1269  1E1C                     	;# 
  1270  1E1D                     	;# 
  1271  1E1E                     	;# 
  1272  1E1F                     	;# 
  1273  1E20                     	;# 
  1274  1E21                     	;# 
  1275  1E22                     	;# 
  1276  1E23                     	;# 
  1277  1E24                     	;# 
  1278  1E25                     	;# 
  1279  1E26                     	;# 
  1280  1E27                     	;# 
  1281  1E28                     	;# 
  1282  1E29                     	;# 
  1283  1E2A                     	;# 
  1284  1E2B                     	;# 
  1285  1E2C                     	;# 
  1286  1E2D                     	;# 
  1287  1E2E                     	;# 
  1288  1E2F                     	;# 
  1289  1E30                     	;# 
  1290  1E31                     	;# 
  1291  1E32                     	;# 
  1292  1E33                     	;# 
  1293  1E34                     	;# 
  1294  1E35                     	;# 
  1295  1E36                     	;# 
  1296  1E37                     	;# 
  1297  1E8F                     	;# 
  1298  1E90                     	;# 
  1299  1E91                     	;# 
  1300  1E92                     	;# 
  1301  1E93                     	;# 
  1302  1E9C                     	;# 
  1303  1EA1                     	;# 
  1304  1EA2                     	;# 
  1305  1EB1                     	;# 
  1306  1EBB                     	;# 
  1307  1EBC                     	;# 
  1308  1EBD                     	;# 
  1309  1EBE                     	;# 
  1310  1EC3                     	;# 
  1311  1EC5                     	;# 
  1312  1EC6                     	;# 
  1313  1EC7                     	;# 
  1314  1ECB                     	;# 
  1315  1ECC                     	;# 
  1316  1ECD                     	;# 
  1317  1ECE                     	;# 
  1318  1F10                     	;# 
  1319  1F11                     	;# 
  1320  1F12                     	;# 
  1321  1F13                     	;# 
  1322  1F14                     	;# 
  1323  1F15                     	;# 
  1324  1F1C                     	;# 
  1325  1F1D                     	;# 
  1326  1F1E                     	;# 
  1327  1F1F                     	;# 
  1328  1F20                     	;# 
  1329  1F21                     	;# 
  1330  1F22                     	;# 
  1331  1F23                     	;# 
  1332  1F24                     	;# 
  1333  1F25                     	;# 
  1334  1F26                     	;# 
  1335  1F27                     	;# 
  1336  1F38                     	;# 
  1337  1F39                     	;# 
  1338  1F3A                     	;# 
  1339  1F3B                     	;# 
  1340  1F3C                     	;# 
  1341  1F3D                     	;# 
  1342  1F3E                     	;# 
  1343  1F3F                     	;# 
  1344  1F43                     	;# 
  1345  1F44                     	;# 
  1346  1F45                     	;# 
  1347  1F46                     	;# 
  1348  1F47                     	;# 
  1349  1F48                     	;# 
  1350  1F49                     	;# 
  1351  1F4A                     	;# 
  1352  1F4E                     	;# 
  1353  1F4F                     	;# 
  1354  1F50                     	;# 
  1355  1F51                     	;# 
  1356  1F52                     	;# 
  1357  1F53                     	;# 
  1358  1F54                     	;# 
  1359  1F55                     	;# 
  1360  1FE4                     	;# 
  1361  1FE5                     	;# 
  1362  1FE6                     	;# 
  1363  1FE7                     	;# 
  1364  1FE8                     	;# 
  1365  1FE8                     	;# 
  1366  1FE9                     	;# 
  1367  1FEA                     	;# 
  1368  1FEA                     	;# 
  1369  1FEB                     	;# 
  1370  1FED                     	;# 
  1371  1FEE                     	;# 
  1372  1FEF                     	;# 
  1373  0000                     	;# 
  1374  0001                     	;# 
  1375  0002                     	;# 
  1376  0003                     	;# 
  1377  0004                     	;# 
  1378  0005                     	;# 
  1379  0006                     	;# 
  1380  0007                     	;# 
  1381  0008                     	;# 
  1382  0009                     	;# 
  1383  000A                     	;# 
  1384  000B                     	;# 
  1385  000C                     	;# 
  1386  000D                     	;# 
  1387  000E                     	;# 
  1388  0012                     	;# 
  1389  0013                     	;# 
  1390  0014                     	;# 
  1391  0018                     	;# 
  1392  0019                     	;# 
  1393  001A                     	;# 
  1394  009B                     	;# 
  1395  009B                     	;# 
  1396  009C                     	;# 
  1397  009D                     	;# 
  1398  009E                     	;# 
  1399  009F                     	;# 
  1400  0119                     	;# 
  1401  0119                     	;# 
  1402  0119                     	;# 
  1403  011A                     	;# 
  1404  011A                     	;# 
  1405  011A                     	;# 
  1406  011B                     	;# 
  1407  011B                     	;# 
  1408  011B                     	;# 
  1409  011B                     	;# 
  1410  011B                     	;# 
  1411  011C                     	;# 
  1412  011C                     	;# 
  1413  011C                     	;# 
  1414  011D                     	;# 
  1415  011D                     	;# 
  1416  011D                     	;# 
  1417  011E                     	;# 
  1418  011E                     	;# 
  1419  011E                     	;# 
  1420  011F                     	;# 
  1421  011F                     	;# 
  1422  011F                     	;# 
  1423  011F                     	;# 
  1424  011F                     	;# 
  1425  018C                     	;# 
  1426  018D                     	;# 
  1427  018E                     	;# 
  1428  018F                     	;# 
  1429  0190                     	;# 
  1430  0191                     	;# 
  1431  0192                     	;# 
  1432  020C                     	;# 
  1433  020C                     	;# 
  1434  020D                     	;# 
  1435  020E                     	;# 
  1436  020F                     	;# 
  1437  020F                     	;# 
  1438  0210                     	;# 
  1439  0210                     	;# 
  1440  0211                     	;# 
  1441  0211                     	;# 
  1442  028C                     	;# 
  1443  028C                     	;# 
  1444  028D                     	;# 
  1445  028D                     	;# 
  1446  028E                     	;# 
  1447  028F                     	;# 
  1448  0290                     	;# 
  1449  0291                     	;# 
  1450  030C                     	;# 
  1451  030C                     	;# 
  1452  030D                     	;# 
  1453  030E                     	;# 
  1454  030F                     	;# 
  1455  0310                     	;# 
  1456  0310                     	;# 
  1457  0311                     	;# 
  1458  0312                     	;# 
  1459  0313                     	;# 
  1460  0314                     	;# 
  1461  0314                     	;# 
  1462  0315                     	;# 
  1463  0316                     	;# 
  1464  0318                     	;# 
  1465  0318                     	;# 
  1466  0319                     	;# 
  1467  031A                     	;# 
  1468  031C                     	;# 
  1469  031C                     	;# 
  1470  031D                     	;# 
  1471  031E                     	;# 
  1472  038C                     	;# 
  1473  038C                     	;# 
  1474  038D                     	;# 
  1475  038E                     	;# 
  1476  058C                     	;# 
  1477  058C                     	;# 
  1478  058D                     	;# 
  1479  058E                     	;# 
  1480  058F                     	;# 
  1481  058F                     	;# 
  1482  0590                     	;# 
  1483  0591                     	;# 
  1484  0592                     	;# 
  1485  0593                     	;# 
  1486  059C                     	;# 
  1487  059C                     	;# 
  1488  059D                     	;# 
  1489  059D                     	;# 
  1490  059E                     	;# 
  1491  059F                     	;# 
  1492  060C                     	;# 
  1493  060D                     	;# 
  1494  060E                     	;# 
  1495  060F                     	;# 
  1496  0610                     	;# 
  1497  0611                     	;# 
  1498  0612                     	;# 
  1499  0613                     	;# 
  1500  0614                     	;# 
  1501  070C                     	;# 
  1502  070D                     	;# 
  1503  070E                     	;# 
  1504  070F                     	;# 
  1505  0710                     	;# 
  1506  0711                     	;# 
  1507  0712                     	;# 
  1508  0713                     	;# 
  1509  0716                     	;# 
  1510  0717                     	;# 
  1511  0718                     	;# 
  1512  0719                     	;# 
  1513  071A                     	;# 
  1514  071B                     	;# 
  1515  071C                     	;# 
  1516  071D                     	;# 
  1517  0796                     	;# 
  1518  0797                     	;# 
  1519  0798                     	;# 
  1520  0799                     	;# 
  1521  079A                     	;# 
  1522  079B                     	;# 
  1523  080C                     	;# 
  1524  080D                     	;# 
  1525  080E                     	;# 
  1526  080F                     	;# 
  1527  0810                     	;# 
  1528  0811                     	;# 
  1529  0812                     	;# 
  1530  0813                     	;# 
  1531  0814                     	;# 
  1532  081A                     	;# 
  1533  081A                     	;# 
  1534  081B                     	;# 
  1535  081C                     	;# 
  1536  081C                     	;# 
  1537  081D                     	;# 
  1538  081E                     	;# 
  1539  081F                     	;# 
  1540  088C                     	;# 
  1541  088D                     	;# 
  1542  088E                     	;# 
  1543  088F                     	;# 
  1544  0890                     	;# 
  1545  0891                     	;# 
  1546  0892                     	;# 
  1547  0893                     	;# 
  1548  0895                     	;# 
  1549  0896                     	;# 
  1550  090C                     	;# 
  1551  090E                     	;# 
  1552  090F                     	;# 
  1553  091F                     	;# 
  1554  098F                     	;# 
  1555  098F                     	;# 
  1556  0990                     	;# 
  1557  0991                     	;# 
  1558  0992                     	;# 
  1559  0993                     	;# 
  1560  0994                     	;# 
  1561  0995                     	;# 
  1562  0996                     	;# 
  1563  0997                     	;# 
  1564  0A19                     	;# 
  1565  0A19                     	;# 
  1566  0A1A                     	;# 
  1567  0A1A                     	;# 
  1568  0A1B                     	;# 
  1569  0A1B                     	;# 
  1570  0A1B                     	;# 
  1571  0A1C                     	;# 
  1572  0A1C                     	;# 
  1573  0A1D                     	;# 
  1574  0A1D                     	;# 
  1575  0A1E                     	;# 
  1576  0A1E                     	;# 
  1577  0A1F                     	;# 
  1578  0A1F                     	;# 
  1579  0A1F                     	;# 
  1580  1E0F                     	;# 
  1581  1E10                     	;# 
  1582  1E11                     	;# 
  1583  1E12                     	;# 
  1584  1E13                     	;# 
  1585  1E14                     	;# 
  1586  1E15                     	;# 
  1587  1E16                     	;# 
  1588  1E17                     	;# 
  1589  1E18                     	;# 
  1590  1E19                     	;# 
  1591  1E1A                     	;# 
  1592  1E1B                     	;# 
  1593  1E1C                     	;# 
  1594  1E1D                     	;# 
  1595  1E1E                     	;# 
  1596  1E1F                     	;# 
  1597  1E20                     	;# 
  1598  1E21                     	;# 
  1599  1E22                     	;# 
  1600  1E23                     	;# 
  1601  1E24                     	;# 
  1602  1E25                     	;# 
  1603  1E26                     	;# 
  1604  1E27                     	;# 
  1605  1E28                     	;# 
  1606  1E29                     	;# 
  1607  1E2A                     	;# 
  1608  1E2B                     	;# 
  1609  1E2C                     	;# 
  1610  1E2D                     	;# 
  1611  1E2E                     	;# 
  1612  1E2F                     	;# 
  1613  1E30                     	;# 
  1614  1E31                     	;# 
  1615  1E32                     	;# 
  1616  1E33                     	;# 
  1617  1E34                     	;# 
  1618  1E35                     	;# 
  1619  1E36                     	;# 
  1620  1E37                     	;# 
  1621  1E8F                     	;# 
  1622  1E90                     	;# 
  1623  1E91                     	;# 
  1624  1E92                     	;# 
  1625  1E93                     	;# 
  1626  1E9C                     	;# 
  1627  1EA1                     	;# 
  1628  1EA2                     	;# 
  1629  1EB1                     	;# 
  1630  1EBB                     	;# 
  1631  1EBC                     	;# 
  1632  1EBD                     	;# 
  1633  1EBE                     	;# 
  1634  1EC3                     	;# 
  1635  1EC5                     	;# 
  1636  1EC6                     	;# 
  1637  1EC7                     	;# 
  1638  1ECB                     	;# 
  1639  1ECC                     	;# 
  1640  1ECD                     	;# 
  1641  1ECE                     	;# 
  1642  1F10                     	;# 
  1643  1F11                     	;# 
  1644  1F12                     	;# 
  1645  1F13                     	;# 
  1646  1F14                     	;# 
  1647  1F15                     	;# 
  1648  1F1C                     	;# 
  1649  1F1D                     	;# 
  1650  1F1E                     	;# 
  1651  1F1F                     	;# 
  1652  1F20                     	;# 
  1653  1F21                     	;# 
  1654  1F22                     	;# 
  1655  1F23                     	;# 
  1656  1F24                     	;# 
  1657  1F25                     	;# 
  1658  1F26                     	;# 
  1659  1F27                     	;# 
  1660  1F38                     	;# 
  1661  1F39                     	;# 
  1662  1F3A                     	;# 
  1663  1F3B                     	;# 
  1664  1F3C                     	;# 
  1665  1F3D                     	;# 
  1666  1F3E                     	;# 
  1667  1F3F                     	;# 
  1668  1F43                     	;# 
  1669  1F44                     	;# 
  1670  1F45                     	;# 
  1671  1F46                     	;# 
  1672  1F47                     	;# 
  1673  1F48                     	;# 
  1674  1F49                     	;# 
  1675  1F4A                     	;# 
  1676  1F4E                     	;# 
  1677  1F4F                     	;# 
  1678  1F50                     	;# 
  1679  1F51                     	;# 
  1680  1F52                     	;# 
  1681  1F53                     	;# 
  1682  1F54                     	;# 
  1683  1F55                     	;# 
  1684  1FE4                     	;# 
  1685  1FE5                     	;# 
  1686  1FE6                     	;# 
  1687  1FE7                     	;# 
  1688  1FE8                     	;# 
  1689  1FE8                     	;# 
  1690  1FE9                     	;# 
  1691  1FEA                     	;# 
  1692  1FEA                     	;# 
  1693  1FEB                     	;# 
  1694  1FED                     	;# 
  1695  1FEE                     	;# 
  1696  1FEF                     	;# 
  1697  0000                     	;# 
  1698  0001                     	;# 
  1699  0002                     	;# 
  1700  0003                     	;# 
  1701  0004                     	;# 
  1702  0005                     	;# 
  1703  0006                     	;# 
  1704  0007                     	;# 
  1705  0008                     	;# 
  1706  0009                     	;# 
  1707  000A                     	;# 
  1708  000B                     	;# 
  1709  000C                     	;# 
  1710  000D                     	;# 
  1711  000E                     	;# 
  1712  0012                     	;# 
  1713  0013                     	;# 
  1714  0014                     	;# 
  1715  0018                     	;# 
  1716  0019                     	;# 
  1717  001A                     	;# 
  1718  009B                     	;# 
  1719  009B                     	;# 
  1720  009C                     	;# 
  1721  009D                     	;# 
  1722  009E                     	;# 
  1723  009F                     	;# 
  1724  0119                     	;# 
  1725  0119                     	;# 
  1726  0119                     	;# 
  1727  011A                     	;# 
  1728  011A                     	;# 
  1729  011A                     	;# 
  1730  011B                     	;# 
  1731  011B                     	;# 
  1732  011B                     	;# 
  1733  011B                     	;# 
  1734  011B                     	;# 
  1735  011C                     	;# 
  1736  011C                     	;# 
  1737  011C                     	;# 
  1738  011D                     	;# 
  1739  011D                     	;# 
  1740  011D                     	;# 
  1741  011E                     	;# 
  1742  011E                     	;# 
  1743  011E                     	;# 
  1744  011F                     	;# 
  1745  011F                     	;# 
  1746  011F                     	;# 
  1747  011F                     	;# 
  1748  011F                     	;# 
  1749  018C                     	;# 
  1750  018D                     	;# 
  1751  018E                     	;# 
  1752  018F                     	;# 
  1753  0190                     	;# 
  1754  0191                     	;# 
  1755  0192                     	;# 
  1756  020C                     	;# 
  1757  020C                     	;# 
  1758  020D                     	;# 
  1759  020E                     	;# 
  1760  020F                     	;# 
  1761  020F                     	;# 
  1762  0210                     	;# 
  1763  0210                     	;# 
  1764  0211                     	;# 
  1765  0211                     	;# 
  1766  028C                     	;# 
  1767  028C                     	;# 
  1768  028D                     	;# 
  1769  028D                     	;# 
  1770  028E                     	;# 
  1771  028F                     	;# 
  1772  0290                     	;# 
  1773  0291                     	;# 
  1774  030C                     	;# 
  1775  030C                     	;# 
  1776  030D                     	;# 
  1777  030E                     	;# 
  1778  030F                     	;# 
  1779  0310                     	;# 
  1780  0310                     	;# 
  1781  0311                     	;# 
  1782  0312                     	;# 
  1783  0313                     	;# 
  1784  0314                     	;# 
  1785  0314                     	;# 
  1786  0315                     	;# 
  1787  0316                     	;# 
  1788  0318                     	;# 
  1789  0318                     	;# 
  1790  0319                     	;# 
  1791  031A                     	;# 
  1792  031C                     	;# 
  1793  031C                     	;# 
  1794  031D                     	;# 
  1795  031E                     	;# 
  1796  038C                     	;# 
  1797  038C                     	;# 
  1798  038D                     	;# 
  1799  038E                     	;# 
  1800  058C                     	;# 
  1801  058C                     	;# 
  1802  058D                     	;# 
  1803  058E                     	;# 
  1804  058F                     	;# 
  1805  058F                     	;# 
  1806  0590                     	;# 
  1807  0591                     	;# 
  1808  0592                     	;# 
  1809  0593                     	;# 
  1810  059C                     	;# 
  1811  059C                     	;# 
  1812  059D                     	;# 
  1813  059D                     	;# 
  1814  059E                     	;# 
  1815  059F                     	;# 
  1816  060C                     	;# 
  1817  060D                     	;# 
  1818  060E                     	;# 
  1819  060F                     	;# 
  1820  0610                     	;# 
  1821  0611                     	;# 
  1822  0612                     	;# 
  1823  0613                     	;# 
  1824  0614                     	;# 
  1825  070C                     	;# 
  1826  070D                     	;# 
  1827  070E                     	;# 
  1828  070F                     	;# 
  1829  0710                     	;# 
  1830  0711                     	;# 
  1831  0712                     	;# 
  1832  0713                     	;# 
  1833  0716                     	;# 
  1834  0717                     	;# 
  1835  0718                     	;# 
  1836  0719                     	;# 
  1837  071A                     	;# 
  1838  071B                     	;# 
  1839  071C                     	;# 
  1840  071D                     	;# 
  1841  0796                     	;# 
  1842  0797                     	;# 
  1843  0798                     	;# 
  1844  0799                     	;# 
  1845  079A                     	;# 
  1846  079B                     	;# 
  1847  080C                     	;# 
  1848  080D                     	;# 
  1849  080E                     	;# 
  1850  080F                     	;# 
  1851  0810                     	;# 
  1852  0811                     	;# 
  1853  0812                     	;# 
  1854  0813                     	;# 
  1855  0814                     	;# 
  1856  081A                     	;# 
  1857  081A                     	;# 
  1858  081B                     	;# 
  1859  081C                     	;# 
  1860  081C                     	;# 
  1861  081D                     	;# 
  1862  081E                     	;# 
  1863  081F                     	;# 
  1864  088C                     	;# 
  1865  088D                     	;# 
  1866  088E                     	;# 
  1867  088F                     	;# 
  1868  0890                     	;# 
  1869  0891                     	;# 
  1870  0892                     	;# 
  1871  0893                     	;# 
  1872  0895                     	;# 
  1873  0896                     	;# 
  1874  090C                     	;# 
  1875  090E                     	;# 
  1876  090F                     	;# 
  1877  091F                     	;# 
  1878  098F                     	;# 
  1879  098F                     	;# 
  1880  0990                     	;# 
  1881  0991                     	;# 
  1882  0992                     	;# 
  1883  0993                     	;# 
  1884  0994                     	;# 
  1885  0995                     	;# 
  1886  0996                     	;# 
  1887  0997                     	;# 
  1888  0A19                     	;# 
  1889  0A19                     	;# 
  1890  0A1A                     	;# 
  1891  0A1A                     	;# 
  1892  0A1B                     	;# 
  1893  0A1B                     	;# 
  1894  0A1B                     	;# 
  1895  0A1C                     	;# 
  1896  0A1C                     	;# 
  1897  0A1D                     	;# 
  1898  0A1D                     	;# 
  1899  0A1E                     	;# 
  1900  0A1E                     	;# 
  1901  0A1F                     	;# 
  1902  0A1F                     	;# 
  1903  0A1F                     	;# 
  1904  1E0F                     	;# 
  1905  1E10                     	;# 
  1906  1E11                     	;# 
  1907  1E12                     	;# 
  1908  1E13                     	;# 
  1909  1E14                     	;# 
  1910  1E15                     	;# 
  1911  1E16                     	;# 
  1912  1E17                     	;# 
  1913  1E18                     	;# 
  1914  1E19                     	;# 
  1915  1E1A                     	;# 
  1916  1E1B                     	;# 
  1917  1E1C                     	;# 
  1918  1E1D                     	;# 
  1919  1E1E                     	;# 
  1920  1E1F                     	;# 
  1921  1E20                     	;# 
  1922  1E21                     	;# 
  1923  1E22                     	;# 
  1924  1E23                     	;# 
  1925  1E24                     	;# 
  1926  1E25                     	;# 
  1927  1E26                     	;# 
  1928  1E27                     	;# 
  1929  1E28                     	;# 
  1930  1E29                     	;# 
  1931  1E2A                     	;# 
  1932  1E2B                     	;# 
  1933  1E2C                     	;# 
  1934  1E2D                     	;# 
  1935  1E2E                     	;# 
  1936  1E2F                     	;# 
  1937  1E30                     	;# 
  1938  1E31                     	;# 
  1939  1E32                     	;# 
  1940  1E33                     	;# 
  1941  1E34                     	;# 
  1942  1E35                     	;# 
  1943  1E36                     	;# 
  1944  1E37                     	;# 
  1945  1E8F                     	;# 
  1946  1E90                     	;# 
  1947  1E91                     	;# 
  1948  1E92                     	;# 
  1949  1E93                     	;# 
  1950  1E9C                     	;# 
  1951  1EA1                     	;# 
  1952  1EA2                     	;# 
  1953  1EB1                     	;# 
  1954  1EBB                     	;# 
  1955  1EBC                     	;# 
  1956  1EBD                     	;# 
  1957  1EBE                     	;# 
  1958  1EC3                     	;# 
  1959  1EC5                     	;# 
  1960  1EC6                     	;# 
  1961  1EC7                     	;# 
  1962  1ECB                     	;# 
  1963  1ECC                     	;# 
  1964  1ECD                     	;# 
  1965  1ECE                     	;# 
  1966  1F10                     	;# 
  1967  1F11                     	;# 
  1968  1F12                     	;# 
  1969  1F13                     	;# 
  1970  1F14                     	;# 
  1971  1F15                     	;# 
  1972  1F1C                     	;# 
  1973  1F1D                     	;# 
  1974  1F1E                     	;# 
  1975  1F1F                     	;# 
  1976  1F20                     	;# 
  1977  1F21                     	;# 
  1978  1F22                     	;# 
  1979  1F23                     	;# 
  1980  1F24                     	;# 
  1981  1F25                     	;# 
  1982  1F26                     	;# 
  1983  1F27                     	;# 
  1984  1F38                     	;# 
  1985  1F39                     	;# 
  1986  1F3A                     	;# 
  1987  1F3B                     	;# 
  1988  1F3C                     	;# 
  1989  1F3D                     	;# 
  1990  1F3E                     	;# 
  1991  1F3F                     	;# 
  1992  1F43                     	;# 
  1993  1F44                     	;# 
  1994  1F45                     	;# 
  1995  1F46                     	;# 
  1996  1F47                     	;# 
  1997  1F48                     	;# 
  1998  1F49                     	;# 
  1999  1F4A                     	;# 
  2000  1F4E                     	;# 
  2001  1F4F                     	;# 
  2002  1F50                     	;# 
  2003  1F51                     	;# 
  2004  1F52                     	;# 
  2005  1F53                     	;# 
  2006  1F54                     	;# 
  2007  1F55                     	;# 
  2008  1FE4                     	;# 
  2009  1FE5                     	;# 
  2010  1FE6                     	;# 
  2011  1FE7                     	;# 
  2012  1FE8                     	;# 
  2013  1FE8                     	;# 
  2014  1FE9                     	;# 
  2015  1FEA                     	;# 
  2016  1FEA                     	;# 
  2017  1FEB                     	;# 
  2018  1FED                     	;# 
  2019  1FEE                     	;# 
  2020  1FEF                     	;# 
  2021                           
  2022                           	psect	stringtext1
  2023  02F3                     __pstringtext1:	
  2024  02F3                     _stateTable:	
  2025  02F3  3469               	retlw	105
  2026  02F4  3441               	retlw	65
  2027  02F5  3463               	retlw	99
  2028  02F6  3443               	retlw	67
  2029  02F7                     __end_of_stateTable:	
  2030                           
  2031                           	psect	nvBANK0
  2032  003A                     __pnvBANK0:	
  2033  003A                     _EUSART1_ErrorHandler:	
  2034  003A                     	ds	2
  2035  003C                     _EUSART1_OverrunErrorHandler:	
  2036  003C                     	ds	2
  2037  003E                     _EUSART1_FramingErrorHandler:	
  2038  003E                     	ds	2
  2039  0040                     _EUSART1_RxDefaultInterruptHandler:	
  2040  0040                     	ds	2
  2041  0042                     _EUSART1_TxDefaultInterruptHandler:	
  2042  0042                     	ds	2
  2043  0044                     _TMR2_InterruptHandler:	
  2044  0044                     	ds	2
  2045  0046                     _eusart1TxBufferRemaining:	
  2046  0046                     	ds	1
  2047  000D                     _PORTBbits	set	13
  2048  000E                     _PORTCbits	set	14
  2049  000C                     _PORTAbits	set	12
  2050  0018                     _LATAbits	set	24
  2051  0014                     _TRISC	set	20
  2052  0013                     _TRISB	set	19
  2053  0012                     _TRISA	set	18
  2054  001A                     _LATC	set	26
  2055  0019                     _LATB	set	25
  2056  0018                     _LATA	set	24
  2057  000B                     _INTCONbits	set	11
  2058  0119                     _RC1REG	set	281
  2059  011D                     _RC1STAbits	set	285
  2060  011A                     _TX1REG	set	282
  2061  011E                     _TX1STAbits	set	286
  2062  011C                     _SP1BRGH	set	284
  2063  011B                     _SP1BRGL	set	283
  2064  011E                     _TX1STA	set	286
  2065  011D                     _RC1STA	set	285
  2066  011F                     _BAUD1CON	set	287
  2067  028D                     _PR2	set	653
  2068  028C                     _TMR2	set	652
  2069  028E                     _T2CONbits	set	654
  2070  0291                     _T2RSTbits	set	657
  2071  028F                     _T2HLTbits	set	655
  2072  028E                     _T2CON	set	654
  2073  028C                     _T2TMR	set	652
  2074  028D                     _T2PR	set	653
  2075  0291                     _T2RST	set	657
  2076  028F                     _T2HLT	set	655
  2077  0290                     _T2CLKCON	set	656
  2078  070F                     _PIR3bits	set	1807
  2079  0719                     _PIE3bits	set	1817
  2080  071A                     _PIE4bits	set	1818
  2081  0710                     _PIR4bits	set	1808
  2082  079B                     _PMD5	set	1947
  2083  079A                     _PMD4	set	1946
  2084  0799                     _PMD3	set	1945
  2085  0798                     _PMD2	set	1944
  2086  0797                     _PMD1	set	1943
  2087  0796                     _PMD0	set	1942
  2088  0892                     _OSCTUNE	set	2194
  2089  0890                     _OSCSTAT	set	2192
  2090  0893                     _OSCFRQ	set	2195
  2091  0891                     _OSCEN	set	2193
  2092  088F                     _OSCCON3	set	2191
  2093  088D                     _OSCCON1	set	2189
  2094  1F12                     _RA2PPS	set	7954
  2095  1F52                     _INLVLC	set	8018
  2096  1F47                     _INLVLB	set	8007
  2097  1F3C                     _INLVLA	set	7996
  2098  1F51                     _SLRCONC	set	8017
  2099  1F46                     _SLRCONB	set	8006
  2100  1F3B                     _SLRCONA	set	7995
  2101  1F50                     _ODCONC	set	8016
  2102  1F45                     _ODCONB	set	8005
  2103  1F3A                     _ODCONA	set	7994
  2104  1F4F                     _WPUC	set	8015
  2105  1F39                     _WPUA	set	7993
  2106  1F44                     _WPUB	set	8004
  2107  1F38                     _ANSELA	set	7992
  2108  1F43                     _ANSELB	set	8003
  2109  1F4E                     _ANSELC	set	8014
  2110                           
  2111                           ; #config settings
  2112  0000                     
  2113                           	psect	cinit
  2114  0026                     start_initialization:	
  2115  0026                     __initialization:	
  2116                           
  2117                           ; Clear objects allocated to COMMON
  2118  0026  01F0               	clrf	__pbssCOMMON& (0+127)
  2119  0027  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  2120  0028  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  2121  0029  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  2122  002A  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  2123  002B  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  2124                           
  2125                           ; Clear objects allocated to BANK0
  2126  002C  3020               	movlw	low __pbssBANK0
  2127  002D  0084               	movwf	4
  2128  002E  3000               	movlw	high __pbssBANK0
  2129  002F  0085               	movwf	5
  2130  0030  301A               	movlw	26
  2131  0031  3182  22C4  3180   	fcall	clear_ram0
  2132                           
  2133                           ; Clear objects allocated to BANK1
  2134  0034  30A0               	movlw	low __pbssBANK1
  2135  0035  0084               	movwf	4
  2136  0036  3000               	movlw	high __pbssBANK1
  2137  0037  0085               	movwf	5
  2138  0038  3040               	movlw	64
  2139  0039  3182  22C4         	fcall	clear_ram0
  2140  003B                     end_of_initialization:	
  2141                           ;End of C runtime variable initialization code
  2142                           
  2143  003B                     __end_of__initialization:	
  2144  003B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2145  003C  0140               	movlb	0
  2146  003D  3180  283F         	ljmp	_main	;jump to C main() function
  2147                           
  2148                           	psect	bssCOMMON
  2149  0070                     __pbssCOMMON:	
  2150  0070                     _eusart1RxLastError:	
  2151  0070                     	ds	1
  2152  0071                     _eusart1RxCount:	
  2153  0071                     	ds	1
  2154  0072                     _eusart1RxTail:	
  2155  0072                     	ds	1
  2156  0073                     _eusart1RxHead:	
  2157  0073                     	ds	1
  2158  0074                     _eusart1TxTail:	
  2159  0074                     	ds	1
  2160  0075                     _eusart1TxHead:	
  2161  0075                     	ds	1
  2162                           
  2163                           	psect	bssBANK0
  2164  0020                     __pbssBANK0:	
  2165  0020                     _eusart1RxStatusBuffer:	
  2166  0020                     	ds	8
  2167  0028                     _eusart1RxBuffer:	
  2168  0028                     	ds	8
  2169  0030                     _target:	
  2170  0030                     	ds	5
  2171  0035                     _scan:	
  2172  0035                     	ds	5
  2173                           
  2174                           	psect	bssBANK1
  2175  00A0                     __pbssBANK1:	
  2176  00A0                     _eusart1TxBuffer:	
  2177  00A0                     	ds	64
  2178                           
  2179                           	psect	clrtext
  2180  02C4                     clear_ram0:	
  2181                           ;	Called with FSR0 containing the base address, and
  2182                           ;	WREG with the size to clear
  2183                           
  2184  02C4  0064               	clrwdt	;clear the watchdog before getting into this loop
  2185  02C5                     clrloop0:	
  2186  02C5  0180               	clrf	0	;clear RAM location pointed to by FSR
  2187  02C6  3101               	addfsr 0,1
  2188  02C7  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2189  02C8  2AC5               	goto	clrloop0	;have we reached the end yet?
  2190  02C9  3400               	retlw	0	;all done for this memory range, return
  2191                           
  2192                           	psect	cstackCOMMON
  2193  0076                     __pcstackCOMMON:	
  2194  0076                     ?_TMR2_DefaultInterruptHandler:	
  2195  0076                     ??_TMR2_DefaultInterruptHandler:	
  2196                           ; 1 bytes @ 0x0
  2197                           
  2198  0076                     ?_TMR2_CallBack:	
  2199                           ; 1 bytes @ 0x0
  2200                           
  2201  0076                     ?_PMD_Initialize:	
  2202                           ; 1 bytes @ 0x0
  2203                           
  2204  0076                     ?_PIN_MANAGER_Initialize:	
  2205                           ; 1 bytes @ 0x0
  2206                           
  2207  0076                     ?_OSCILLATOR_Initialize:	
  2208                           ; 1 bytes @ 0x0
  2209                           
  2210  0076                     ?_EUSART1_Initialize:	
  2211                           ; 1 bytes @ 0x0
  2212                           
  2213  0076                     ?_EUSART1_Receive_ISR:	
  2214                           ; 1 bytes @ 0x0
  2215                           
  2216  0076                     ?_EUSART1_Transmit_ISR:	
  2217                           ; 1 bytes @ 0x0
  2218                           
  2219  0076                     ??_EUSART1_Transmit_ISR:	
  2220                           ; 1 bytes @ 0x0
  2221                           
  2222  0076                     ?_EUSART1_DefaultFramingErrorHandler:	
  2223                           ; 1 bytes @ 0x0
  2224                           
  2225  0076                     ??_EUSART1_DefaultFramingErrorHandler:	
  2226                           ; 1 bytes @ 0x0
  2227                           
  2228  0076                     ?_EUSART1_DefaultOverrunErrorHandler:	
  2229                           ; 1 bytes @ 0x0
  2230                           
  2231  0076                     ??_EUSART1_DefaultOverrunErrorHandler:	
  2232                           ; 1 bytes @ 0x0
  2233                           
  2234  0076                     ?_EUSART1_DefaultErrorHandler:	
  2235                           ; 1 bytes @ 0x0
  2236                           
  2237  0076                     ?_EUSART1_RxDataHandler:	
  2238                           ; 1 bytes @ 0x0
  2239                           
  2240  0076                     ??_EUSART1_RxDataHandler:	
  2241                           ; 1 bytes @ 0x0
  2242                           
  2243  0076                     ?_scanInput:	
  2244                           ; 1 bytes @ 0x0
  2245                           
  2246  0076                     ??_scanInput:	
  2247                           ; 1 bytes @ 0x0
  2248                           
  2249  0076                     ?_setState:	
  2250                           ; 1 bytes @ 0x0
  2251                           
  2252  0076                     ?_countTargets:	
  2253                           ; 1 bytes @ 0x0
  2254                           
  2255  0076                     ?_TMR2_Initialize:	
  2256                           ; 1 bytes @ 0x0
  2257                           
  2258  0076                     ?_TMR2_ISR:	
  2259                           ; 1 bytes @ 0x0
  2260                           
  2261  0076                     ?_INTERRUPT_InterruptManager:	
  2262                           ; 1 bytes @ 0x0
  2263                           
  2264  0076                     ?_SYSTEM_Initialize:	
  2265                           ; 1 bytes @ 0x0
  2266                           
  2267  0076                     ?_EUSART1_Write:	
  2268                           ; 1 bytes @ 0x0
  2269                           
  2270  0076                     ?_isr_1ms:	
  2271                           ; 1 bytes @ 0x0
  2272                           
  2273  0076                     ?_main:	
  2274                           ; 1 bytes @ 0x0
  2275                           
  2276                           
  2277                           ; 1 bytes @ 0x0
  2278  0076                     	ds	1
  2279  0077                     ??_EUSART1_Receive_ISR:	
  2280  0077                     ??_EUSART1_DefaultErrorHandler:	
  2281                           ; 1 bytes @ 0x1
  2282                           
  2283                           
  2284                           ; 1 bytes @ 0x1
  2285  0077                     	ds	1
  2286  0078                     ?_TMR2_SetInterruptHandler:	
  2287  0078                     ??_TMR2_CallBack:	
  2288                           ; 1 bytes @ 0x2
  2289                           
  2290  0078                     ??_PMD_Initialize:	
  2291                           ; 1 bytes @ 0x2
  2292                           
  2293  0078                     ??_PIN_MANAGER_Initialize:	
  2294                           ; 1 bytes @ 0x2
  2295                           
  2296  0078                     ??_OSCILLATOR_Initialize:	
  2297                           ; 1 bytes @ 0x2
  2298                           
  2299  0078                     ?_EUSART1_SetRxInterruptHandler:	
  2300                           ; 1 bytes @ 0x2
  2301                           
  2302  0078                     ?_EUSART1_SetTxInterruptHandler:	
  2303                           ; 1 bytes @ 0x2
  2304                           
  2305  0078                     ?_EUSART1_SetFramingErrorHandler:	
  2306                           ; 1 bytes @ 0x2
  2307                           
  2308  0078                     ?_EUSART1_SetOverrunErrorHandler:	
  2309                           ; 1 bytes @ 0x2
  2310                           
  2311  0078                     ?_EUSART1_SetErrorHandler:	
  2312                           ; 1 bytes @ 0x2
  2313                           
  2314  0078                     ??_countTargets:	
  2315                           ; 1 bytes @ 0x2
  2316                           
  2317  0078                     ??_TMR2_ISR:	
  2318                           ; 1 bytes @ 0x2
  2319                           
  2320  0078                     ??_INTERRUPT_InterruptManager:	
  2321                           ; 1 bytes @ 0x2
  2322                           
  2323  0078                     ??_EUSART1_Write:	
  2324                           ; 1 bytes @ 0x2
  2325                           
  2326  0078                     ??_isr_1ms:	
  2327                           ; 1 bytes @ 0x2
  2328                           
  2329  0078                     TMR2_SetInterruptHandler@InterruptHandler:	
  2330                           ; 1 bytes @ 0x2
  2331                           
  2332  0078                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  2333                           ; 2 bytes @ 0x2
  2334                           
  2335  0078                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  2336                           ; 2 bytes @ 0x2
  2337                           
  2338  0078                     EUSART1_SetErrorHandler@interruptHandler:	
  2339                           ; 2 bytes @ 0x2
  2340                           
  2341  0078                     EUSART1_SetTxInterruptHandler@interruptHandler:	
  2342                           ; 2 bytes @ 0x2
  2343                           
  2344  0078                     EUSART1_SetRxInterruptHandler@interruptHandler:	
  2345                           ; 2 bytes @ 0x2
  2346                           
  2347                           
  2348                           ; 2 bytes @ 0x2
  2349  0078                     	ds	1
  2350  0079                     EUSART1_Write@txData:	
  2351                           
  2352                           ; 1 bytes @ 0x3
  2353  0079                     	ds	1
  2354  007A                     ??_TMR2_SetInterruptHandler:	
  2355  007A                     ??_EUSART1_Initialize:	
  2356                           ; 1 bytes @ 0x4
  2357                           
  2358  007A                     ??_EUSART1_SetRxInterruptHandler:	
  2359                           ; 1 bytes @ 0x4
  2360                           
  2361  007A                     ??_EUSART1_SetTxInterruptHandler:	
  2362                           ; 1 bytes @ 0x4
  2363                           
  2364  007A                     ??_EUSART1_SetFramingErrorHandler:	
  2365                           ; 1 bytes @ 0x4
  2366                           
  2367  007A                     ??_EUSART1_SetOverrunErrorHandler:	
  2368                           ; 1 bytes @ 0x4
  2369                           
  2370  007A                     ??_EUSART1_SetErrorHandler:	
  2371                           ; 1 bytes @ 0x4
  2372                           
  2373  007A                     ??_setState:	
  2374                           ; 1 bytes @ 0x4
  2375                           
  2376  007A                     ??_TMR2_Initialize:	
  2377                           ; 1 bytes @ 0x4
  2378                           
  2379                           
  2380                           ; 1 bytes @ 0x4
  2381  007A                     	ds	1
  2382  007B                     ??_SYSTEM_Initialize:	
  2383  007B                     setState@s:	
  2384                           ; 1 bytes @ 0x5
  2385                           
  2386                           
  2387                           ; 1 bytes @ 0x5
  2388  007B                     	ds	1
  2389                           
  2390                           	psect	cstackBANK0
  2391  0047                     __pcstackBANK0:	
  2392  0047                     ??_main:	
  2393                           
  2394                           ; 1 bytes @ 0x0
  2395  0047                     	ds	2
  2396                           
  2397                           	psect	maintext
  2398  003F                     __pmaintext:	
  2399 ;;
  2400 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2401 ;;
  2402 ;; *************** function _main *****************
  2403 ;; Defined at:
  2404 ;;		line 182 in file "main.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;		None
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;		None
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  1    wreg      void 
  2411 ;; Registers used:
  2412 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2413 ;; Tracked objects:
  2414 ;;		On entry : B3F/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2420 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2421 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2422 ;;Total ram usage:        2 bytes
  2423 ;; Hardware stack levels required when called:    8
  2424 ;; This function calls:
  2425 ;;		_EUSART1_Write
  2426 ;;		_SYSTEM_Initialize
  2427 ;;		_TMR2_SetInterruptHandler
  2428 ;;		_countTargets
  2429 ;;		_setState
  2430 ;; This function is called by:
  2431 ;;		Startup code after reset
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           
  2436                           ;psect for function _main
  2437  003F                     _main:	
  2438                           
  2439                           ;main.c: 185:     SYSTEM_Initialize();
  2440                           
  2441                           ;incstack = 0
  2442                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2443  003F  3182  2298  3180   	fcall	_SYSTEM_Initialize
  2444                           
  2445                           ;main.c: 186:     TMR2_SetInterruptHandler(isr_1ms);
  2446  0042  3071               	movlw	low _isr_1ms
  2447  0043  00F8               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2448  0044  3002               	movlw	high _isr_1ms
  2449  0045  00F9               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2450  0046  3182  22CA  3180   	fcall	_TMR2_SetInterruptHandler
  2451                           
  2452                           ;main.c: 191:     (INTCONbits.GIE = 1);
  2453  0049  178B               	bsf	11,7	;volatile
  2454                           
  2455                           ;main.c: 194:     (INTCONbits.PEIE = 1);
  2456  004A  170B               	bsf	11,6	;volatile
  2457                           
  2458                           ;main.c: 202:     scan.count = 0;
  2459  004B  0140               	movlb	0	; select bank0
  2460  004C  01B5               	clrf	_scan
  2461                           
  2462                           ;main.c: 203:     scan.state = SCAN_INPUT_IDLE;
  2463  004D  01B8               	clrf	_scan+3
  2464                           
  2465                           ;main.c: 204:     scan.timeout = 0;
  2466  004E  01B6               	clrf	_scan+1
  2467  004F  01B7               	clrf	_scan+2
  2468  0050  28A9               	goto	l2049
  2469  0051                     l400:	
  2470                           ;main.c: 235:                     do { LATAbits.LATA4 = 0; } while(0);
  2471                           
  2472                           ;main.c: 232:             switch (target.state)
  2473                           
  2474                           ;main.c: 205:     setState(TARGET_IDLE);
  2475                           
  2476  0051  1218               	bcf	24,4	;volatile
  2477                           
  2478                           ;main.c: 236:                     do { LATAbits.LATA5 = 0; } while(0);
  2479  0052  1298               	bcf	24,5	;volatile
  2480                           
  2481                           ;main.c: 237:                     if (scan.risingEdge)
  2482  0053  1CB9               	btfss	_scan+4,1
  2483  0054  286C               	goto	l2015
  2484                           
  2485                           ;main.c: 238:                     {;main.c: 239:             EUSART1_Write('.');
  2486  0055  302E               	movlw	46
  2487  0056  3181  21E5  3180   	fcall	_EUSART1_Write
  2488                           
  2489                           ;main.c: 240:                         scan.risingEdge = 0;
  2490  0059  0140               	movlb	0	; select bank0
  2491  005A  10B9               	bcf	_scan+4,1
  2492                           
  2493                           ;main.c: 241:                         scan.fallingEdge = 0;
  2494  005B  1139               	bcf	_scan+4,2
  2495                           
  2496                           ;main.c: 242:                         if (target.count > 0)
  2497  005C  0830               	movf	_target,w
  2498  005D  0431               	iorwf	_target+1,w
  2499  005E  1903               	btfsc	3,2
  2500  005F  286A               	goto	l2013
  2501                           
  2502                           ;main.c: 243:                         {;main.c: 244:                             setStat
      +                          e(TARGET_ACTIVE);
  2503  0060  3001               	movlw	1
  2504  0061  3182  2285  3180   	fcall	_setState
  2505                           
  2506                           ;main.c: 245:                             scan.timeout = 30;
  2507  0064  301E               	movlw	30
  2508  0065  0140               	movlb	0	; select bank0
  2509  0066  00B6               	movwf	_scan+1
  2510  0067  3000               	movlw	0
  2511  0068  00B7               	movwf	_scan+2
  2512                           
  2513                           ;main.c: 246:                         }
  2514  0069  28AD               	goto	l1989
  2515  006A                     l2013:	
  2516                           
  2517                           ;main.c: 248:                         {;main.c: 249:                             setStat
      +                          e(TARGET_COMPLETE_1);
  2518  006A  3002               	movlw	2
  2519  006B  28AA               	goto	L1
  2520  006C                     l2015:	
  2521                           
  2522                           ;main.c: 253:                     {;main.c: 254:             EUSART1_Write('-');
  2523  006C  302D               	movlw	45
  2524  006D  3181  21E5  3180   	fcall	_EUSART1_Write
  2525                           
  2526                           ;main.c: 255:                         countTargets();
  2527  0070  3180  20DC  3180   	fcall	_countTargets
  2528  0073  28AD               	goto	l1989
  2529  0074                     l409:	
  2530                           ;main.c: 259:                 case TARGET_ACTIVE:
  2531                           
  2532                           
  2533                           ;main.c: 260:                     if (scan.risingEdge == 1)
  2534  0074  1CB9               	btfss	_scan+4,1
  2535  0075  287E               	goto	l2023
  2536                           
  2537                           ;main.c: 261:                     {;main.c: 262:                         do { LATAbits.L
      +                          ATA5 = 1; } while(0);
  2538  0076  1698               	bsf	24,5	;volatile
  2539                           
  2540                           ;main.c: 263:                         scan.risingEdge = 0;
  2541  0077  10B9               	bcf	_scan+4,1
  2542                           
  2543                           ;main.c: 264:                         --target.count;
  2544  0078  3001               	movlw	1
  2545  0079  02B0               	subwf	_target,f
  2546  007A  3000               	movlw	0
  2547  007B  3BB1               	subwfb	_target+1,f
  2548                           
  2549                           ;main.c: 265:                         target.stuckCount = 0;
  2550  007C  01B2               	clrf	_target+2
  2551  007D  01B3               	clrf	_target+3
  2552  007E                     l2023:	
  2553                           
  2554                           ;main.c: 268:                     if (scan.fallingEdge == 1)
  2555  007E  1D39               	btfss	_scan+4,2
  2556  007F  288C               	goto	l2033
  2557                           
  2558                           ;main.c: 269:                     {;main.c: 270:                         scan.fallingEdg
      +                          e = 0;
  2559  0080  1139               	bcf	_scan+4,2
  2560                           
  2561                           ;main.c: 271:                         target.stuckCount = 0;
  2562  0081  01B2               	clrf	_target+2
  2563  0082  01B3               	clrf	_target+3
  2564                           
  2565                           ;main.c: 272:                         if (target.count == 0)
  2566  0083  0830               	movf	_target,w
  2567  0084  0431               	iorwf	_target+1,w
  2568  0085  1D03               	btfss	3,2
  2569  0086  288C               	goto	l2033
  2570                           
  2571                           ;main.c: 273:                         {;main.c: 274:                             do { LA
      +                          TAbits.LATA5 = 0; } while(0);
  2572  0087  1298               	bcf	24,5	;volatile
  2573                           
  2574                           ;main.c: 275:                             setState(TARGET_COMPLETE_1);
  2575  0088  3002               	movlw	2
  2576  0089  3182  2285  3180   	fcall	_setState
  2577  008C                     l2033:	
  2578                           
  2579                           ;main.c: 279:                     ++target.stuckCount;
  2580  008C  3001               	movlw	1
  2581  008D  0140               	movlb	0	; select bank0
  2582  008E  07B2               	addwf	_target+2,f
  2583  008F  3000               	movlw	0
  2584  0090  3DB3               	addwfc	_target+3,f
  2585                           
  2586                           ;main.c: 280:                     if (target.stuckCount > 200) setState(TARGET_IDLE);
  2587  0091  3000               	movlw	0
  2588  0092  0233               	subwf	_target+3,w
  2589  0093  30C9               	movlw	201
  2590  0094  1903               	skipnz
  2591  0095  0232               	subwf	_target+2,w
  2592  0096  1C03               	skipc
  2593  0097  28AD               	goto	l1989
  2594  0098  28A9               	goto	l2049
  2595  0099                     l418:	
  2596                           ;main.c: 283:                 case TARGET_COMPLETE_1:
  2597                           
  2598                           
  2599                           ;main.c: 284:                     if (scan.risingEdge == 1)
  2600  0099  1CB9               	btfss	_scan+4,1
  2601  009A  28AD               	goto	l1989
  2602                           
  2603                           ;main.c: 285:                     {;main.c: 286:                         scan.risingEdge
      +                           = 0;
  2604  009B  10B9               	bcf	_scan+4,1
  2605                           
  2606                           ;main.c: 287:                         scan.fallingEdge = 0;
  2607  009C  1139               	bcf	_scan+4,2
  2608                           
  2609                           ;main.c: 288:                         do { LATAbits.LATA4 = 1; } while(0);
  2610  009D  1618               	bsf	24,4	;volatile
  2611                           
  2612                           ;main.c: 289:                         target.count = 1000u;
  2613  009E  30E8               	movlw	232
  2614  009F  00B0               	movwf	_target
  2615  00A0  3003               	movlw	3
  2616  00A1  00B1               	movwf	_target+1
  2617                           
  2618                           ;main.c: 290:                         setState(TARGET_COMPLETE_2);
  2619  00A2  3003               	movlw	3
  2620  00A3  28AA               	goto	L1
  2621  00A4                     l2045:	
  2622                           
  2623                           ;main.c: 295:                     if (target.count == 0)
  2624  00A4  0830               	movf	_target,w
  2625  00A5  0431               	iorwf	_target+1,w
  2626  00A6  1D03               	btfss	3,2
  2627  00A7  28AD               	goto	l1989
  2628                           
  2629                           ;main.c: 296:                     {;main.c: 297:                         do { LATAbits.L
      +                          ATA4 = 0; } while(0);
  2630  00A8  1218               	bcf	24,4	;volatile
  2631  00A9                     l2049:	
  2632                           ;main.c: 298:                         setState(TARGET_IDLE);
  2633                           
  2634                           
  2635                           ;main.c: 303:                     setState(TARGET_IDLE);
  2636  00A9  3000               	movlw	0
  2637  00AA                     L1:	
  2638  00AA  3182  2285  3180   	fcall	_setState
  2639  00AD                     l1989:	
  2640                           
  2641                           ;main.c: 218:     {;main.c: 219:         if (scan.tick)
  2642  00AD  0140               	movlb	0	; select bank0
  2643  00AE  1C39               	btfss	_scan+4,0
  2644  00AF  28AD               	goto	l1989
  2645                           
  2646                           ;main.c: 220:         {;main.c: 221:             if (scan.risingEdge) EUSART1_Write('R')
      +                          ;
  2647  00B0  1CB9               	btfss	_scan+4,1
  2648  00B1  28B6               	goto	l1995
  2649  00B2  3052               	movlw	82
  2650  00B3  3181  21E5  3180   	fcall	_EUSART1_Write
  2651  00B6                     l1995:	
  2652                           
  2653                           ;main.c: 222:             if (scan.fallingEdge) EUSART1_Write('F');
  2654  00B6  0140               	movlb	0	; select bank0
  2655  00B7  1D39               	btfss	_scan+4,2
  2656  00B8  28BD               	goto	l1999
  2657  00B9  3046               	movlw	70
  2658  00BA  3181  21E5  3180   	fcall	_EUSART1_Write
  2659  00BD                     l1999:	
  2660                           
  2661                           ;main.c: 223:             scan.tick = 0;
  2662  00BD  0140               	movlb	0	; select bank0
  2663  00BE  1039               	bcf	_scan+4,0
  2664                           
  2665                           ;main.c: 231:             EUSART1_Write(0x30 + target.state);
  2666  00BF  0834               	movf	_target+4,w
  2667  00C0  3E30               	addlw	48
  2668  00C1  3181  21E5  3180   	fcall	_EUSART1_Write
  2669                           
  2670                           ;main.c: 304:                     break;
  2671  00C4  0140               	movlb	0	; select bank0
  2672  00C5  0834               	movf	_target+4,w
  2673  00C6  00C7               	movwf	??_main
  2674  00C7  01C8               	clrf	??_main+1
  2675                           
  2676                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2677                           ; Switch size 1, requested type "simple"
  2678                           ; Number of cases is 1, Range of values is 0 to 0
  2679                           ; switch strategies available:
  2680                           ; Name         Instructions Cycles
  2681                           ; simple_byte            4     3 (average)
  2682                           ; direct_byte            8     6 (fixed)
  2683                           ; jumptable            260     6 (fixed)
  2684                           ;	Chosen strategy is simple_byte
  2685  00C8  0848               	movf	??_main+1,w
  2686  00C9  3A00               	xorlw	0	; case 0
  2687  00CA  1903               	skipnz
  2688  00CB  28CD               	goto	l2099
  2689  00CC  28A9               	goto	l2049
  2690  00CD                     l2099:	
  2691                           
  2692                           ; Switch size 1, requested type "simple"
  2693                           ; Number of cases is 4, Range of values is 0 to 3
  2694                           ; switch strategies available:
  2695                           ; Name         Instructions Cycles
  2696                           ; simple_byte           13     7 (average)
  2697                           ; direct_byte           14     6 (fixed)
  2698                           ; jumptable            260     6 (fixed)
  2699                           ;	Chosen strategy is simple_byte
  2700  00CD  0847               	movf	??_main,w
  2701  00CE  3A00               	xorlw	0	; case 0
  2702  00CF  1903               	skipnz
  2703  00D0  2851               	goto	l400
  2704  00D1  3A01               	xorlw	1	; case 1
  2705  00D2  1903               	skipnz
  2706  00D3  2874               	goto	l409
  2707  00D4  3A03               	xorlw	3	; case 2
  2708  00D5  1903               	skipnz
  2709  00D6  2899               	goto	l418
  2710  00D7  3A01               	xorlw	1	; case 3
  2711  00D8  1903               	skipnz
  2712  00D9  28A4               	goto	l2045
  2713  00DA  28A9               	goto	l2049
  2714                           
  2715                           ;main.c: 306:         }
  2716  00DB  28AD               	goto	l1989
  2717  00DC                     __end_of_main:	
  2718                           
  2719                           	psect	text1
  2720  0285                     __ptext1:	
  2721 ;; *************** function _setState *****************
  2722 ;; Defined at:
  2723 ;;		line 312 in file "main.c"
  2724 ;; Parameters:    Size  Location     Type
  2725 ;;  s               1    wreg     enum E7175
  2726 ;; Auto vars:     Size  Location     Type
  2727 ;;  s               1    5[COMMON] enum E7175
  2728 ;; Return value:  Size  Location     Type
  2729 ;;                  1    wreg      void 
  2730 ;; Registers used:
  2731 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2732 ;; Tracked objects:
  2733 ;;		On entry : 0/0
  2734 ;;		On exit  : 0/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2738 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2739 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2740 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2741 ;;Total ram usage:        2 bytes
  2742 ;; Hardware stack levels used:    1
  2743 ;; Hardware stack levels required when called:    6
  2744 ;; This function calls:
  2745 ;;		_EUSART1_Write
  2746 ;; This function is called by:
  2747 ;;		_main
  2748 ;; This function uses a non-reentrant model
  2749 ;;
  2750                           
  2751                           
  2752                           ;psect for function _setState
  2753  0285                     _setState:	
  2754                           
  2755                           ;incstack = 0
  2756                           ; Regs used in _setState: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2757                           ;setState@s stored from wreg
  2758  0285  00FB               	movwf	setState@s
  2759                           
  2760                           ;main.c: 312: void setState(eTARGET_STATE_t s);main.c: 313: {;main.c: 314:     target.st
      +                          ate = s;
  2761  0286  087B               	movf	setState@s,w
  2762  0287  00FA               	movwf	??_setState
  2763  0288  087A               	movf	??_setState,w
  2764  0289  0140               	movlb	0	; select bank0
  2765  028A  00B4               	movwf	_target+4
  2766                           
  2767                           ;main.c: 315:     scan.risingEdge = 0;
  2768  028B  10B9               	bcf	_scan+4,1
  2769                           
  2770                           ;main.c: 316:     scan.fallingEdge = 0;
  2771  028C  1139               	bcf	_scan+4,2
  2772                           
  2773                           ;main.c: 317:     EUSART1_Write(stateTable[s]);
  2774  028D  087B               	movf	setState@s,w
  2775  028E  3EF3               	addlw	low (_stateTable| (0+32768))
  2776  028F  0084               	movwf	4
  2777  0290  3082               	movlw	high (_stateTable| (0+32768))
  2778  0291  1803               	skipnc
  2779  0292  3E01               	addlw	1
  2780  0293  0085               	movwf	5
  2781  0294  0800               	movf	0,w	;code access
  2782  0295  3181  21E5         	fcall	_EUSART1_Write
  2783  0297  0008               	return
  2784  0298                     __end_of_setState:	
  2785                           
  2786                           	psect	text2
  2787  01E5                     __ptext2:	
  2788 ;; *************** function _EUSART1_Write *****************
  2789 ;; Defined at:
  2790 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;  txData          1    wreg     unsigned char 
  2793 ;; Auto vars:     Size  Location     Type
  2794 ;;  txData          1    3[COMMON] unsigned char 
  2795 ;; Return value:  Size  Location     Type
  2796 ;;                  1    wreg      void 
  2797 ;; Registers used:
  2798 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2799 ;; Tracked objects:
  2800 ;;		On entry : 0/0
  2801 ;;		On exit  : 0/0
  2802 ;;		Unchanged: 0/0
  2803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2805 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2806 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2807 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2808 ;;Total ram usage:        2 bytes
  2809 ;; Hardware stack levels used:    1
  2810 ;; Hardware stack levels required when called:    5
  2811 ;; This function calls:
  2812 ;;		Nothing
  2813 ;; This function is called by:
  2814 ;;		_main
  2815 ;;		_setState
  2816 ;;		_putch
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820                           
  2821                           ;psect for function _EUSART1_Write
  2822  01E5                     _EUSART1_Write:	
  2823                           
  2824                           ;incstack = 0
  2825                           ; Regs used in _EUSART1_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  2826                           ;EUSART1_Write@txData stored from wreg
  2827  01E5  00F9               	movwf	EUSART1_Write@txData
  2828  01E6                     l1671:	
  2829                           ;mcc_generated_files/eusart1.c: 173: void EUSART1_Write(uint8_t txData);mcc_generated_fi
      +                          les/eusart1.c: 174: {;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBuffer
      +                          Remaining)
  2830                           
  2831                           
  2832                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  2833  01E6  0140               	movlb	0	; select bank0
  2834  01E7  0846               	movf	_eusart1TxBufferRemaining,w	;volatile
  2835  01E8  1903               	btfsc	3,2
  2836  01E9  29E6               	goto	l1671
  2837                           
  2838                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
  2839  01EA  014E               	movlb	14	; select bank14
  2840  01EB  1A19               	btfsc	25,4	;volatile
  2841  01EC  29F1               	goto	l308
  2842                           
  2843                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
  2844  01ED  0879               	movf	EUSART1_Write@txData,w
  2845  01EE  0142               	movlb	2	; select bank2
  2846  01EF  009A               	movwf	26	;volatile
  2847                           
  2848                           ;mcc_generated_files/eusart1.c: 182:     }
  2849  01F0  2A05               	goto	l1685
  2850  01F1                     l308:	
  2851                           ;mcc_generated_files/eusart1.c: 183:     else
  2852                           
  2853                           
  2854                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
  2855  01F1  1219               	bcf	25,4	;volatile
  2856                           
  2857                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  2858  01F2  0879               	movf	EUSART1_Write@txData,w
  2859  01F3  00F8               	movwf	??_EUSART1_Write
  2860  01F4  0875               	movf	_eusart1TxHead,w
  2861  01F5  3EA0               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
  2862  01F6  0086               	movwf	6
  2863  01F7  0187               	clrf	7
  2864  01F8  0878               	movf	??_EUSART1_Write,w
  2865  01F9  0081               	movwf	1
  2866  01FA  3001               	movlw	1
  2867  01FB  00F8               	movwf	??_EUSART1_Write
  2868  01FC  0878               	movf	??_EUSART1_Write,w
  2869  01FD  07F5               	addwf	_eusart1TxHead,f	;volatile
  2870                           
  2871                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  2872  01FE  3040               	movlw	64
  2873  01FF  0275               	subwf	_eusart1TxHead,w	;volatile
  2874  0200  1803               	btfsc	3,0
  2875                           
  2876                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  2877  0201  01F5               	clrf	_eusart1TxHead	;volatile
  2878                           
  2879                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  2880  0202  3001               	movlw	1
  2881  0203  0140               	movlb	0	; select bank0
  2882  0204  02C6               	subwf	_eusart1TxBufferRemaining,f	;volatile
  2883  0205                     l1685:	
  2884                           
  2885                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
  2886  0205  014E               	movlb	14	; select bank14
  2887  0206  1619               	bsf	25,4	;volatile
  2888  0207  0008               	return
  2889  0208                     __end_of_EUSART1_Write:	
  2890                           
  2891                           	psect	text3
  2892  00DC                     __ptext3:	
  2893 ;; *************** function _countTargets *****************
  2894 ;; Defined at:
  2895 ;;		line 365 in file "main.c"
  2896 ;; Parameters:    Size  Location     Type
  2897 ;;		None
  2898 ;; Auto vars:     Size  Location     Type
  2899 ;;		None
  2900 ;; Return value:  Size  Location     Type
  2901 ;;                  1    wreg      void 
  2902 ;; Registers used:
  2903 ;;		wreg, status,2
  2904 ;; Tracked objects:
  2905 ;;		On entry : 0/0
  2906 ;;		On exit  : 0/0
  2907 ;;		Unchanged: 0/0
  2908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2913 ;;Total ram usage:        0 bytes
  2914 ;; Hardware stack levels used:    1
  2915 ;; Hardware stack levels required when called:    5
  2916 ;; This function calls:
  2917 ;;		Nothing
  2918 ;; This function is called by:
  2919 ;;		_main
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923                           
  2924                           ;psect for function _countTargets
  2925  00DC                     _countTargets:	
  2926                           
  2927                           ;main.c: 367:     target.count = 0;
  2928                           
  2929                           ;incstack = 0
  2930                           ; Regs used in _countTargets: [wreg+status,2]
  2931  00DC  0140               	movlb	0	; select bank0
  2932  00DD  01B0               	clrf	_target
  2933  00DE  01B1               	clrf	_target+1
  2934                           
  2935                           ;main.c: 368:     if (PORTCbits.RC5 == 0)
  2936  00DF  1A8E               	btfsc	14,5	;volatile
  2937  00E0  28E5               	goto	l1773
  2938                           
  2939                           ;main.c: 369:     {;main.c: 370:        target.count++;
  2940  00E1  3001               	movlw	1
  2941  00E2  07B0               	addwf	_target,f
  2942  00E3  3000               	movlw	0
  2943  00E4  3DB1               	addwfc	_target+1,f
  2944  00E5                     l1773:	
  2945                           
  2946                           ;main.c: 372:     if (PORTCbits.RC4 == 0)
  2947  00E5  1A0E               	btfsc	14,4	;volatile
  2948  00E6  28EB               	goto	l1777
  2949                           
  2950                           ;main.c: 373:     {;main.c: 374:        target.count++;
  2951  00E7  3001               	movlw	1
  2952  00E8  07B0               	addwf	_target,f
  2953  00E9  3000               	movlw	0
  2954  00EA  3DB1               	addwfc	_target+1,f
  2955  00EB                     l1777:	
  2956                           
  2957                           ;main.c: 376:     if (PORTCbits.RC3 == 0)
  2958  00EB  198E               	btfsc	14,3	;volatile
  2959  00EC  28F1               	goto	l1781
  2960                           
  2961                           ;main.c: 377:     {;main.c: 378:        target.count++;
  2962  00ED  3001               	movlw	1
  2963  00EE  07B0               	addwf	_target,f
  2964  00EF  3000               	movlw	0
  2965  00F0  3DB1               	addwfc	_target+1,f
  2966  00F1                     l1781:	
  2967                           
  2968                           ;main.c: 380:     if (PORTCbits.RC6 == 0)
  2969  00F1  1B0E               	btfsc	14,6	;volatile
  2970  00F2  28F7               	goto	l1785
  2971                           
  2972                           ;main.c: 381:     {;main.c: 382:        target.count++;
  2973  00F3  3001               	movlw	1
  2974  00F4  07B0               	addwf	_target,f
  2975  00F5  3000               	movlw	0
  2976  00F6  3DB1               	addwfc	_target+1,f
  2977  00F7                     l1785:	
  2978                           
  2979                           ;main.c: 384:     if (PORTCbits.RC7 == 0)
  2980  00F7  1B8E               	btfsc	14,7	;volatile
  2981  00F8  28FD               	goto	l1789
  2982                           
  2983                           ;main.c: 385:     {;main.c: 386:        target.count++;
  2984  00F9  3001               	movlw	1
  2985  00FA  07B0               	addwf	_target,f
  2986  00FB  3000               	movlw	0
  2987  00FC  3DB1               	addwfc	_target+1,f
  2988  00FD                     l1789:	
  2989                           
  2990                           ;main.c: 388:     if (PORTBbits.RB7 == 0)
  2991  00FD  1B8D               	btfsc	13,7	;volatile
  2992  00FE  2903               	goto	l1793
  2993                           
  2994                           ;main.c: 389:     {;main.c: 390:        target.count++;
  2995  00FF  3001               	movlw	1
  2996  0100  07B0               	addwf	_target,f
  2997  0101  3000               	movlw	0
  2998  0102  3DB1               	addwfc	_target+1,f
  2999  0103                     l1793:	
  3000                           
  3001                           ;main.c: 392:     if (PORTCbits.RC0 == 0)
  3002  0103  180E               	btfsc	14,0	;volatile
  3003  0104  2909               	goto	l1797
  3004                           
  3005                           ;main.c: 393:     {;main.c: 394:        target.count++;
  3006  0105  3001               	movlw	1
  3007  0106  07B0               	addwf	_target,f
  3008  0107  3000               	movlw	0
  3009  0108  3DB1               	addwfc	_target+1,f
  3010  0109                     l1797:	
  3011                           
  3012                           ;main.c: 396:     if (PORTCbits.RC1 == 0)
  3013  0109  188E               	btfsc	14,1	;volatile
  3014  010A  290F               	goto	l1801
  3015                           
  3016                           ;main.c: 397:     {;main.c: 398:        target.count++;
  3017  010B  3001               	movlw	1
  3018  010C  07B0               	addwf	_target,f
  3019  010D  3000               	movlw	0
  3020  010E  3DB1               	addwfc	_target+1,f
  3021  010F                     l1801:	
  3022                           
  3023                           ;main.c: 400:     if (PORTCbits.RC2 == 0)
  3024  010F  190E               	btfsc	14,2	;volatile
  3025  0110  2915               	goto	l1805
  3026                           
  3027                           ;main.c: 401:     {;main.c: 402:        target.count++;
  3028  0111  3001               	movlw	1
  3029  0112  07B0               	addwf	_target,f
  3030  0113  3000               	movlw	0
  3031  0114  3DB1               	addwfc	_target+1,f
  3032  0115                     l1805:	
  3033                           
  3034                           ;main.c: 404:     if (PORTBbits.RB4 == 0)
  3035  0115  1A0D               	btfsc	13,4	;volatile
  3036  0116  291B               	goto	l1809
  3037                           
  3038                           ;main.c: 405:     {;main.c: 406:        target.count++;
  3039  0117  3001               	movlw	1
  3040  0118  07B0               	addwf	_target,f
  3041  0119  3000               	movlw	0
  3042  011A  3DB1               	addwfc	_target+1,f
  3043  011B                     l1809:	
  3044                           
  3045                           ;main.c: 408:     if (PORTBbits.RB5 == 0)
  3046  011B  1A8D               	btfsc	13,5	;volatile
  3047  011C  2921               	goto	l1813
  3048                           
  3049                           ;main.c: 409:     {;main.c: 410:        target.count++;
  3050  011D  3001               	movlw	1
  3051  011E  07B0               	addwf	_target,f
  3052  011F  3000               	movlw	0
  3053  0120  3DB1               	addwfc	_target+1,f
  3054  0121                     l1813:	
  3055                           
  3056                           ;main.c: 412:     if (PORTBbits.RB6 == 0)
  3057  0121  1B0D               	btfsc	13,6	;volatile
  3058  0122  2927               	goto	l1817
  3059                           
  3060                           ;main.c: 413:     {;main.c: 414:        target.count++;
  3061  0123  3001               	movlw	1
  3062  0124  07B0               	addwf	_target,f
  3063  0125  3000               	movlw	0
  3064  0126  3DB1               	addwfc	_target+1,f
  3065  0127                     l1817:	
  3066                           
  3067                           ;main.c: 416:     if (PORTAbits.RA2 == 0)
  3068  0127  190C               	btfsc	12,2	;volatile
  3069  0128  292D               	goto	l1821
  3070                           
  3071                           ;main.c: 417:     {;main.c: 418:        target.count++;
  3072  0129  3001               	movlw	1
  3073  012A  07B0               	addwf	_target,f
  3074  012B  3000               	movlw	0
  3075  012C  3DB1               	addwfc	_target+1,f
  3076  012D                     l1821:	
  3077                           
  3078                           ;main.c: 420:     if (PORTAbits.RA1 == 0)
  3079  012D  188C               	btfsc	12,1	;volatile
  3080  012E  2933               	goto	l1825
  3081                           
  3082                           ;main.c: 421:     {;main.c: 422:        target.count++;
  3083  012F  3001               	movlw	1
  3084  0130  07B0               	addwf	_target,f
  3085  0131  3000               	movlw	0
  3086  0132  3DB1               	addwfc	_target+1,f
  3087  0133                     l1825:	
  3088                           
  3089                           ;main.c: 424:     if (PORTAbits.RA0 == 0)
  3090  0133  180C               	btfsc	12,0	;volatile
  3091  0134  0008               	return
  3092                           
  3093                           ;main.c: 425:     {;main.c: 426:        target.count++;
  3094  0135  3001               	movlw	1
  3095  0136  07B0               	addwf	_target,f
  3096  0137  3000               	movlw	0
  3097  0138  3DB1               	addwfc	_target+1,f
  3098  0139  0008               	return
  3099  013A                     __end_of_countTargets:	
  3100                           
  3101                           	psect	text4
  3102  0298                     __ptext4:	
  3103 ;; *************** function _SYSTEM_Initialize *****************
  3104 ;; Defined at:
  3105 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3106 ;; Parameters:    Size  Location     Type
  3107 ;;		None
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;		None
  3110 ;; Return value:  Size  Location     Type
  3111 ;;                  1    wreg      void 
  3112 ;; Registers used:
  3113 ;;		wreg, status,2, status,0, pclath, cstack
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3123 ;;Total ram usage:        0 bytes
  3124 ;; Hardware stack levels used:    1
  3125 ;; Hardware stack levels required when called:    7
  3126 ;; This function calls:
  3127 ;;		_EUSART1_Initialize
  3128 ;;		_OSCILLATOR_Initialize
  3129 ;;		_PIN_MANAGER_Initialize
  3130 ;;		_PMD_Initialize
  3131 ;;		_TMR2_Initialize
  3132 ;; This function is called by:
  3133 ;;		_main
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137                           
  3138                           ;psect for function _SYSTEM_Initialize
  3139  0298                     _SYSTEM_Initialize:	
  3140                           
  3141                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  3142                           
  3143                           ;incstack = 0
  3144                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3145  0298  3182  22BC  3182   	fcall	_PMD_Initialize
  3146                           
  3147                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  3148  029B  3182  2208  3182   	fcall	_PIN_MANAGER_Initialize
  3149                           
  3150                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  3151  029E  3182  22B2  3182   	fcall	_OSCILLATOR_Initialize
  3152                           
  3153                           ;mcc_generated_files/mcc.c: 55:     TMR2_Initialize();
  3154  02A1  3182  225C  3182   	fcall	_TMR2_Initialize
  3155                           
  3156                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  3157  02A4  3181  213A         	fcall	_EUSART1_Initialize
  3158  02A6  0008               	return
  3159  02A7                     __end_of_SYSTEM_Initialize:	
  3160                           
  3161                           	psect	text5
  3162  025C                     __ptext5:	
  3163 ;; *************** function _TMR2_Initialize *****************
  3164 ;; Defined at:
  3165 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;		None
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;		None
  3170 ;; Return value:  Size  Location     Type
  3171 ;;                  1    wreg      void 
  3172 ;; Registers used:
  3173 ;;		wreg, status,2, status,0, pclath, cstack
  3174 ;; Tracked objects:
  3175 ;;		On entry : 0/0
  3176 ;;		On exit  : 0/0
  3177 ;;		Unchanged: 0/0
  3178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3183 ;;Total ram usage:        0 bytes
  3184 ;; Hardware stack levels used:    1
  3185 ;; Hardware stack levels required when called:    6
  3186 ;; This function calls:
  3187 ;;		_TMR2_SetInterruptHandler
  3188 ;; This function is called by:
  3189 ;;		_SYSTEM_Initialize
  3190 ;; This function uses a non-reentrant model
  3191 ;;
  3192                           
  3193                           
  3194                           ;psect for function _TMR2_Initialize
  3195  025C                     _TMR2_Initialize:	
  3196                           
  3197                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x01;
  3198                           
  3199                           ;incstack = 0
  3200                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3201  025C  3001               	movlw	1
  3202  025D  0145               	movlb	5	; select bank5
  3203  025E  0090               	movwf	16	;volatile
  3204                           
  3205                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x00;
  3206  025F  018F               	clrf	15	;volatile
  3207                           
  3208                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
  3209  0260  0191               	clrf	17	;volatile
  3210                           
  3211                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0x7C;
  3212  0261  307C               	movlw	124
  3213  0262  008D               	movwf	13	;volatile
  3214                           
  3215                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
  3216  0263  018C               	clrf	12	;volatile
  3217                           
  3218                           ;mcc_generated_files/tmr2.c: 84:     PIR4bits.TMR2IF = 0;
  3219  0264  014E               	movlb	14	; select bank14
  3220  0265  1090               	bcf	16,1	;volatile
  3221                           
  3222                           ;mcc_generated_files/tmr2.c: 87:     PIE4bits.TMR2IE = 1;
  3223  0266  149A               	bsf	26,1	;volatile
  3224                           
  3225                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  3226  0267  30FE               	movlw	low _TMR2_DefaultInterruptHandler
  3227  0268  00F8               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  3228  0269  3002               	movlw	high _TMR2_DefaultInterruptHandler
  3229  026A  00F9               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  3230  026B  3182  22CA         	fcall	_TMR2_SetInterruptHandler
  3231                           
  3232                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0xE0;
  3233  026D  30E0               	movlw	224
  3234  026E  0145               	movlb	5	; select bank5
  3235  026F  008E               	movwf	14	;volatile
  3236  0270  0008               	return
  3237  0271                     __end_of_TMR2_Initialize:	
  3238                           
  3239                           	psect	text6
  3240  02CA                     __ptext6:	
  3241 ;; *************** function _TMR2_SetInterruptHandler *****************
  3242 ;; Defined at:
  3243 ;;		line 186 in file "mcc_generated_files/tmr2.c"
  3244 ;; Parameters:    Size  Location     Type
  3245 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  3246 ;;		 -> isr_1ms(1), TMR2_DefaultInterruptHandler(1), 
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;		None
  3249 ;; Return value:  Size  Location     Type
  3250 ;;                  1    wreg      void 
  3251 ;; Registers used:
  3252 ;;		wreg
  3253 ;; Tracked objects:
  3254 ;;		On entry : 0/0
  3255 ;;		On exit  : 0/0
  3256 ;;		Unchanged: 0/0
  3257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3258 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3261 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3262 ;;Total ram usage:        2 bytes
  3263 ;; Hardware stack levels used:    1
  3264 ;; Hardware stack levels required when called:    5
  3265 ;; This function calls:
  3266 ;;		Nothing
  3267 ;; This function is called by:
  3268 ;;		_TMR2_Initialize
  3269 ;;		_main
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273                           
  3274                           ;psect for function _TMR2_SetInterruptHandler
  3275  02CA                     _TMR2_SetInterruptHandler:	
  3276                           
  3277                           ;mcc_generated_files/tmr2.c: 187:     TMR2_InterruptHandler = InterruptHandler;
  3278                           
  3279                           ;incstack = 0
  3280                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  3281  02CA  0879               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  3282  02CB  0140               	movlb	0	; select bank0
  3283  02CC  00C5               	movwf	_TMR2_InterruptHandler+1
  3284  02CD  0878               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  3285  02CE  00C4               	movwf	_TMR2_InterruptHandler
  3286  02CF  0008               	return
  3287  02D0                     __end_of_TMR2_SetInterruptHandler:	
  3288                           
  3289                           	psect	text7
  3290  02BC                     __ptext7:	
  3291 ;; *************** function _PMD_Initialize *****************
  3292 ;; Defined at:
  3293 ;;		line 75 in file "mcc_generated_files/mcc.c"
  3294 ;; Parameters:    Size  Location     Type
  3295 ;;		None
  3296 ;; Auto vars:     Size  Location     Type
  3297 ;;		None
  3298 ;; Return value:  Size  Location     Type
  3299 ;;                  1    wreg      void 
  3300 ;; Registers used:
  3301 ;;		status,2
  3302 ;; Tracked objects:
  3303 ;;		On entry : 0/0
  3304 ;;		On exit  : 0/0
  3305 ;;		Unchanged: 0/0
  3306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3311 ;;Total ram usage:        0 bytes
  3312 ;; Hardware stack levels used:    1
  3313 ;; Hardware stack levels required when called:    5
  3314 ;; This function calls:
  3315 ;;		Nothing
  3316 ;; This function is called by:
  3317 ;;		_SYSTEM_Initialize
  3318 ;; This function uses a non-reentrant model
  3319 ;;
  3320                           
  3321                           
  3322                           ;psect for function _PMD_Initialize
  3323  02BC                     _PMD_Initialize:	
  3324                           
  3325                           ;mcc_generated_files/mcc.c: 78:     PMD0 = 0x00;
  3326                           
  3327                           ;incstack = 0
  3328                           ; Regs used in _PMD_Initialize: [status,2]
  3329  02BC  014F               	movlb	15	; select bank15
  3330  02BD  0196               	clrf	22	;volatile
  3331                           
  3332                           ;mcc_generated_files/mcc.c: 80:     PMD1 = 0x00;
  3333  02BE  0197               	clrf	23	;volatile
  3334                           
  3335                           ;mcc_generated_files/mcc.c: 82:     PMD2 = 0x00;
  3336  02BF  0198               	clrf	24	;volatile
  3337                           
  3338                           ;mcc_generated_files/mcc.c: 84:     PMD3 = 0x00;
  3339  02C0  0199               	clrf	25	;volatile
  3340                           
  3341                           ;mcc_generated_files/mcc.c: 86:     PMD4 = 0x00;
  3342  02C1  019A               	clrf	26	;volatile
  3343                           
  3344                           ;mcc_generated_files/mcc.c: 88:     PMD5 = 0x00;
  3345  02C2  019B               	clrf	27	;volatile
  3346  02C3  0008               	return
  3347  02C4                     __end_of_PMD_Initialize:	
  3348                           
  3349                           	psect	text8
  3350  0208                     __ptext8:	
  3351 ;; *************** function _PIN_MANAGER_Initialize *****************
  3352 ;; Defined at:
  3353 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;		None
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;		None
  3358 ;; Return value:  Size  Location     Type
  3359 ;;                  1    wreg      void 
  3360 ;; Registers used:
  3361 ;;		wreg, status,2
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3371 ;;Total ram usage:        0 bytes
  3372 ;; Hardware stack levels used:    1
  3373 ;; Hardware stack levels required when called:    5
  3374 ;; This function calls:
  3375 ;;		Nothing
  3376 ;; This function is called by:
  3377 ;;		_SYSTEM_Initialize
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           
  3382                           ;psect for function _PIN_MANAGER_Initialize
  3383  0208                     _PIN_MANAGER_Initialize:	
  3384                           
  3385                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3386                           
  3387                           ;incstack = 0
  3388                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3389  0208  0140               	movlb	0	; select bank0
  3390  0209  0198               	clrf	24	;volatile
  3391                           
  3392                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3393  020A  0199               	clrf	25	;volatile
  3394                           
  3395                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  3396  020B  019A               	clrf	26	;volatile
  3397                           
  3398                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x07;
  3399  020C  3007               	movlw	7
  3400  020D  0092               	movwf	18	;volatile
  3401                           
  3402                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
  3403  020E  30F0               	movlw	240
  3404  020F  0093               	movwf	19	;volatile
  3405                           
  3406                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
  3407  0210  30FF               	movlw	255
  3408  0211  0094               	movwf	20	;volatile
  3409                           
  3410                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x00;
  3411  0212  017E               	movlb	62	; select bank62
  3412  0213  01CE               	clrf	78	;volatile
  3413                           
  3414                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
  3415  0214  01C3               	clrf	67	;volatile
  3416                           
  3417                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x00;
  3418  0215  01B8               	clrf	56	;volatile
  3419                           
  3420                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  3421  0216  01C4               	clrf	68	;volatile
  3422                           
  3423                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  3424  0217  01B9               	clrf	57	;volatile
  3425                           
  3426                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  3427  0218  01CF               	clrf	79	;volatile
  3428                           
  3429                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  3430  0219  01BA               	clrf	58	;volatile
  3431                           
  3432                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  3433  021A  01C5               	clrf	69	;volatile
  3434                           
  3435                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  3436  021B  01D0               	clrf	80	;volatile
  3437                           
  3438                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x1F;
  3439  021C  301F               	movlw	31
  3440  021D  00BB               	movwf	59	;volatile
  3441                           
  3442                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0x00;
  3443  021E  01C6               	clrf	70	;volatile
  3444                           
  3445                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0x3F;
  3446  021F  303F               	movlw	63
  3447  0220  00D1               	movwf	81	;volatile
  3448                           
  3449                           ;mcc_generated_files/pin_manager.c: 102:     INLVLA = 0x3F;
  3450  0221  303F               	movlw	63
  3451  0222  00BC               	movwf	60	;volatile
  3452                           
  3453                           ;mcc_generated_files/pin_manager.c: 103:     INLVLB = 0x00;
  3454  0223  01C7               	clrf	71	;volatile
  3455                           
  3456                           ;mcc_generated_files/pin_manager.c: 104:     INLVLC = 0x3F;
  3457  0224  303F               	movlw	63
  3458  0225  00D2               	movwf	82	;volatile
  3459                           
  3460                           ;mcc_generated_files/pin_manager.c: 113:     RA2PPS = 0x0F;
  3461  0226  300F               	movlw	15
  3462  0227  0092               	movwf	18	;volatile
  3463  0228  0008               	return
  3464  0229                     __end_of_PIN_MANAGER_Initialize:	
  3465                           
  3466                           	psect	text9
  3467  02B2                     __ptext9:	
  3468 ;; *************** function _OSCILLATOR_Initialize *****************
  3469 ;; Defined at:
  3470 ;;		line 59 in file "mcc_generated_files/mcc.c"
  3471 ;; Parameters:    Size  Location     Type
  3472 ;;		None
  3473 ;; Auto vars:     Size  Location     Type
  3474 ;;		None
  3475 ;; Return value:  Size  Location     Type
  3476 ;;                  1    wreg      void 
  3477 ;; Registers used:
  3478 ;;		wreg, status,2
  3479 ;; Tracked objects:
  3480 ;;		On entry : 0/0
  3481 ;;		On exit  : 0/0
  3482 ;;		Unchanged: 0/0
  3483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3488 ;;Total ram usage:        0 bytes
  3489 ;; Hardware stack levels used:    1
  3490 ;; Hardware stack levels required when called:    5
  3491 ;; This function calls:
  3492 ;;		Nothing
  3493 ;; This function is called by:
  3494 ;;		_SYSTEM_Initialize
  3495 ;; This function uses a non-reentrant model
  3496 ;;
  3497                           
  3498                           
  3499                           ;psect for function _OSCILLATOR_Initialize
  3500  02B2                     _OSCILLATOR_Initialize:	
  3501                           
  3502                           ;mcc_generated_files/mcc.c: 62:     OSCCON1 = 0x60;
  3503                           
  3504                           ;incstack = 0
  3505                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3506  02B2  3060               	movlw	96
  3507  02B3  0151               	movlb	17	; select bank17
  3508  02B4  008D               	movwf	13	;volatile
  3509                           
  3510                           ;mcc_generated_files/mcc.c: 64:     OSCCON3 = 0x00;
  3511  02B5  018F               	clrf	15	;volatile
  3512                           
  3513                           ;mcc_generated_files/mcc.c: 66:     OSCEN = 0x00;
  3514  02B6  0191               	clrf	17	;volatile
  3515                           
  3516                           ;mcc_generated_files/mcc.c: 68:     OSCFRQ = 0x06;
  3517  02B7  3006               	movlw	6
  3518  02B8  0093               	movwf	19	;volatile
  3519                           
  3520                           ;mcc_generated_files/mcc.c: 70:     OSCSTAT = 0x00;
  3521  02B9  0190               	clrf	16	;volatile
  3522                           
  3523                           ;mcc_generated_files/mcc.c: 72:     OSCTUNE = 0x00;
  3524  02BA  0192               	clrf	18	;volatile
  3525  02BB  0008               	return
  3526  02BC                     __end_of_OSCILLATOR_Initialize:	
  3527                           
  3528                           	psect	text10
  3529  013A                     __ptext10:	
  3530 ;; *************** function _EUSART1_Initialize *****************
  3531 ;; Defined at:
  3532 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  3533 ;; Parameters:    Size  Location     Type
  3534 ;;		None
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;		None
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  1    wreg      void 
  3539 ;; Registers used:
  3540 ;;		wreg, status,2, status,0, pclath, cstack
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3548 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3549 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3550 ;;Total ram usage:        1 bytes
  3551 ;; Hardware stack levels used:    1
  3552 ;; Hardware stack levels required when called:    6
  3553 ;; This function calls:
  3554 ;;		_EUSART1_SetErrorHandler
  3555 ;;		_EUSART1_SetFramingErrorHandler
  3556 ;;		_EUSART1_SetOverrunErrorHandler
  3557 ;;		_EUSART1_SetRxInterruptHandler
  3558 ;;		_EUSART1_SetTxInterruptHandler
  3559 ;; This function is called by:
  3560 ;;		_SYSTEM_Initialize
  3561 ;; This function uses a non-reentrant model
  3562 ;;
  3563                           
  3564                           
  3565                           ;psect for function _EUSART1_Initialize
  3566  013A                     _EUSART1_Initialize:	
  3567                           
  3568                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
  3569                           
  3570                           ;incstack = 0
  3571                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3572  013A  014E               	movlb	14	; select bank14
  3573  013B  1299               	bcf	25,5	;volatile
  3574                           
  3575                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  3576  013C  30B3               	movlw	low _EUSART1_Receive_ISR
  3577  013D  00F8               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler
  3578  013E  3001               	movlw	high _EUSART1_Receive_ISR
  3579  013F  00F9               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1
  3580  0140  3182  22D6  3181   	fcall	_EUSART1_SetRxInterruptHandler
  3581                           
  3582                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
  3583  0143  014E               	movlb	14	; select bank14
  3584  0144  1219               	bcf	25,4	;volatile
  3585                           
  3586                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  3587  0145  3029               	movlw	low _EUSART1_Transmit_ISR
  3588  0146  00F8               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler
  3589  0147  3002               	movlw	high _EUSART1_Transmit_ISR
  3590  0148  00F9               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler+1
  3591  0149  3182  22D0  3181   	fcall	_EUSART1_SetTxInterruptHandler
  3592                           
  3593                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
  3594  014C  3008               	movlw	8
  3595  014D  0142               	movlb	2	; select bank2
  3596  014E  009F               	movwf	31	;volatile
  3597                           
  3598                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x80;
  3599  014F  3080               	movlw	128
  3600  0150  009D               	movwf	29	;volatile
  3601                           
  3602                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
  3603  0151  3024               	movlw	36
  3604  0152  009E               	movwf	30	;volatile
  3605                           
  3606                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x44;
  3607  0153  3044               	movlw	68
  3608  0154  009B               	movwf	27	;volatile
  3609                           
  3610                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x00;
  3611  0155  019C               	clrf	28	;volatile
  3612                           
  3613                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  3614  0156  30FF               	movlw	low _EUSART1_DefaultFramingErrorHandler
  3615  0157  00F8               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
  3616  0158  3002               	movlw	high _EUSART1_DefaultFramingErrorHandler
  3617  0159  00F9               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
  3618  015A  3182  22E2  3181   	fcall	_EUSART1_SetFramingErrorHandler
  3619                           
  3620                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  3621  015D  30F7               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  3622  015E  00F8               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
  3623  015F  3002               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  3624  0160  00F9               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
  3625  0161  3182  22DC  3181   	fcall	_EUSART1_SetOverrunErrorHandler
  3626                           
  3627                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  3628  0164  30FB               	movlw	low _EUSART1_DefaultErrorHandler
  3629  0165  00F8               	movwf	EUSART1_SetErrorHandler@interruptHandler
  3630  0166  3002               	movlw	high _EUSART1_DefaultErrorHandler
  3631  0167  00F9               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
  3632  0168  3182  22E8         	fcall	_EUSART1_SetErrorHandler
  3633                           
  3634                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  3635  016A  01F0               	clrf	_eusart1RxLastError	;volatile
  3636                           
  3637                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  3638  016B  01F5               	clrf	_eusart1TxHead	;volatile
  3639                           
  3640                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  3641  016C  01F4               	clrf	_eusart1TxTail	;volatile
  3642                           
  3643                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  3644  016D  3040               	movlw	64
  3645  016E  00FA               	movwf	??_EUSART1_Initialize
  3646  016F  087A               	movf	??_EUSART1_Initialize,w
  3647  0170  0140               	movlb	0	; select bank0
  3648  0171  00C6               	movwf	_eusart1TxBufferRemaining	;volatile
  3649                           
  3650                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  3651  0172  01F3               	clrf	_eusart1RxHead	;volatile
  3652                           
  3653                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  3654  0173  01F2               	clrf	_eusart1RxTail	;volatile
  3655                           
  3656                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  3657  0174  01F1               	clrf	_eusart1RxCount	;volatile
  3658                           
  3659                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
  3660  0175  014E               	movlb	14	; select bank14
  3661  0176  1699               	bsf	25,5	;volatile
  3662  0177  0008               	return
  3663  0178                     __end_of_EUSART1_Initialize:	
  3664                           
  3665                           	psect	text11
  3666  02D0                     __ptext11:	
  3667 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  3668 ;; Defined at:
  3669 ;;		line 285 in file "mcc_generated_files/eusart1.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  3672 ;;		 -> EUSART1_Transmit_ISR(1), 
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;		None
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  1    wreg      void 
  3677 ;; Registers used:
  3678 ;;		wreg
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3684 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3687 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3688 ;;Total ram usage:        2 bytes
  3689 ;; Hardware stack levels used:    1
  3690 ;; Hardware stack levels required when called:    5
  3691 ;; This function calls:
  3692 ;;		Nothing
  3693 ;; This function is called by:
  3694 ;;		_EUSART1_Initialize
  3695 ;; This function uses a non-reentrant model
  3696 ;;
  3697                           
  3698                           
  3699                           ;psect for function _EUSART1_SetTxInterruptHandler
  3700  02D0                     _EUSART1_SetTxInterruptHandler:	
  3701                           
  3702                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  3703                           
  3704                           ;incstack = 0
  3705                           ; Regs used in _EUSART1_SetTxInterruptHandler: [wreg]
  3706  02D0  0879               	movf	EUSART1_SetTxInterruptHandler@interruptHandler+1,w
  3707  02D1  0140               	movlb	0	; select bank0
  3708  02D2  00C3               	movwf	_EUSART1_TxDefaultInterruptHandler+1
  3709  02D3  0878               	movf	EUSART1_SetTxInterruptHandler@interruptHandler,w
  3710  02D4  00C2               	movwf	_EUSART1_TxDefaultInterruptHandler
  3711  02D5  0008               	return
  3712  02D6                     __end_of_EUSART1_SetTxInterruptHandler:	
  3713                           
  3714                           	psect	text12
  3715  02D6                     __ptext12:	
  3716 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  3717 ;; Defined at:
  3718 ;;		line 289 in file "mcc_generated_files/eusart1.c"
  3719 ;; Parameters:    Size  Location     Type
  3720 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  3721 ;;		 -> EUSART1_Receive_ISR(1), 
  3722 ;; Auto vars:     Size  Location     Type
  3723 ;;		None
  3724 ;; Return value:  Size  Location     Type
  3725 ;;                  1    wreg      void 
  3726 ;; Registers used:
  3727 ;;		wreg
  3728 ;; Tracked objects:
  3729 ;;		On entry : 0/0
  3730 ;;		On exit  : 0/0
  3731 ;;		Unchanged: 0/0
  3732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3733 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3736 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3737 ;;Total ram usage:        2 bytes
  3738 ;; Hardware stack levels used:    1
  3739 ;; Hardware stack levels required when called:    5
  3740 ;; This function calls:
  3741 ;;		Nothing
  3742 ;; This function is called by:
  3743 ;;		_EUSART1_Initialize
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747                           
  3748                           ;psect for function _EUSART1_SetRxInterruptHandler
  3749  02D6                     _EUSART1_SetRxInterruptHandler:	
  3750                           
  3751                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  3752                           
  3753                           ;incstack = 0
  3754                           ; Regs used in _EUSART1_SetRxInterruptHandler: [wreg]
  3755  02D6  0879               	movf	EUSART1_SetRxInterruptHandler@interruptHandler+1,w
  3756  02D7  0140               	movlb	0	; select bank0
  3757  02D8  00C1               	movwf	_EUSART1_RxDefaultInterruptHandler+1
  3758  02D9  0878               	movf	EUSART1_SetRxInterruptHandler@interruptHandler,w
  3759  02DA  00C0               	movwf	_EUSART1_RxDefaultInterruptHandler
  3760  02DB  0008               	return
  3761  02DC                     __end_of_EUSART1_SetRxInterruptHandler:	
  3762                           
  3763                           	psect	text13
  3764  02DC                     __ptext13:	
  3765 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  3766 ;; Defined at:
  3767 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  3768 ;; Parameters:    Size  Location     Type
  3769 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  3770 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;		None
  3773 ;; Return value:  Size  Location     Type
  3774 ;;                  1    wreg      void 
  3775 ;; Registers used:
  3776 ;;		wreg
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3782 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3785 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3786 ;;Total ram usage:        2 bytes
  3787 ;; Hardware stack levels used:    1
  3788 ;; Hardware stack levels required when called:    5
  3789 ;; This function calls:
  3790 ;;		Nothing
  3791 ;; This function is called by:
  3792 ;;		_EUSART1_Initialize
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796                           
  3797                           ;psect for function _EUSART1_SetOverrunErrorHandler
  3798  02DC                     _EUSART1_SetOverrunErrorHandler:	
  3799                           
  3800                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
  3801                           
  3802                           ;incstack = 0
  3803                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
  3804  02DC  0879               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
  3805  02DD  0140               	movlb	0	; select bank0
  3806  02DE  00BD               	movwf	_EUSART1_OverrunErrorHandler+1
  3807  02DF  0878               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
  3808  02E0  00BC               	movwf	_EUSART1_OverrunErrorHandler
  3809  02E1  0008               	return
  3810  02E2                     __end_of_EUSART1_SetOverrunErrorHandler:	
  3811                           
  3812                           	psect	text14
  3813  02E2                     __ptext14:	
  3814 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  3815 ;; Defined at:
  3816 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  3817 ;; Parameters:    Size  Location     Type
  3818 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  3819 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  3820 ;; Auto vars:     Size  Location     Type
  3821 ;;		None
  3822 ;; Return value:  Size  Location     Type
  3823 ;;                  1    wreg      void 
  3824 ;; Registers used:
  3825 ;;		wreg
  3826 ;; Tracked objects:
  3827 ;;		On entry : 0/0
  3828 ;;		On exit  : 0/0
  3829 ;;		Unchanged: 0/0
  3830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3831 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3834 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3835 ;;Total ram usage:        2 bytes
  3836 ;; Hardware stack levels used:    1
  3837 ;; Hardware stack levels required when called:    5
  3838 ;; This function calls:
  3839 ;;		Nothing
  3840 ;; This function is called by:
  3841 ;;		_EUSART1_Initialize
  3842 ;; This function uses a non-reentrant model
  3843 ;;
  3844                           
  3845                           
  3846                           ;psect for function _EUSART1_SetFramingErrorHandler
  3847  02E2                     _EUSART1_SetFramingErrorHandler:	
  3848                           
  3849                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
  3850                           
  3851                           ;incstack = 0
  3852                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
  3853  02E2  0879               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
  3854  02E3  0140               	movlb	0	; select bank0
  3855  02E4  00BF               	movwf	_EUSART1_FramingErrorHandler+1
  3856  02E5  0878               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
  3857  02E6  00BE               	movwf	_EUSART1_FramingErrorHandler
  3858  02E7  0008               	return
  3859  02E8                     __end_of_EUSART1_SetFramingErrorHandler:	
  3860                           
  3861                           	psect	text15
  3862  02E8                     __ptext15:	
  3863 ;; *************** function _EUSART1_SetErrorHandler *****************
  3864 ;; Defined at:
  3865 ;;		line 281 in file "mcc_generated_files/eusart1.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  3868 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  3869 ;; Auto vars:     Size  Location     Type
  3870 ;;		None
  3871 ;; Return value:  Size  Location     Type
  3872 ;;                  1    wreg      void 
  3873 ;; Registers used:
  3874 ;;		wreg
  3875 ;; Tracked objects:
  3876 ;;		On entry : 0/0
  3877 ;;		On exit  : 0/0
  3878 ;;		Unchanged: 0/0
  3879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3880 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3883 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3884 ;;Total ram usage:        2 bytes
  3885 ;; Hardware stack levels used:    1
  3886 ;; Hardware stack levels required when called:    5
  3887 ;; This function calls:
  3888 ;;		Nothing
  3889 ;; This function is called by:
  3890 ;;		_EUSART1_Initialize
  3891 ;; This function uses a non-reentrant model
  3892 ;;
  3893                           
  3894                           
  3895                           ;psect for function _EUSART1_SetErrorHandler
  3896  02E8                     _EUSART1_SetErrorHandler:	
  3897                           
  3898                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
  3899                           
  3900                           ;incstack = 0
  3901                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
  3902  02E8  0879               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
  3903  02E9  0140               	movlb	0	; select bank0
  3904  02EA  00BB               	movwf	_EUSART1_ErrorHandler+1
  3905  02EB  0878               	movf	EUSART1_SetErrorHandler@interruptHandler,w
  3906  02EC  00BA               	movwf	_EUSART1_ErrorHandler
  3907  02ED  0008               	return
  3908  02EE                     __end_of_EUSART1_SetErrorHandler:	
  3909                           
  3910                           	psect	intentry
  3911  0004                     __pintentry:	
  3912 ;; *************** function _INTERRUPT_InterruptManager *****************
  3913 ;; Defined at:
  3914 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;		None
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;		None
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  1    wreg      void 
  3921 ;; Registers used:
  3922 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3932 ;;Total ram usage:        0 bytes
  3933 ;; Hardware stack levels used:    1
  3934 ;; Hardware stack levels required when called:    4
  3935 ;; This function calls:
  3936 ;;		Absolute function
  3937 ;;		_EUSART1_Receive_ISR
  3938 ;;		_EUSART1_Transmit_ISR
  3939 ;;		_TMR2_ISR
  3940 ;; This function is called by:
  3941 ;;		Interrupt level 1
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           
  3945  0004                     _INTERRUPT_InterruptManager:	
  3946                           
  3947                           ;incstack = 0
  3948  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3949                           
  3950                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3951  0005  3180               	pagesel	$
  3952                           
  3953                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  3954  0006  1F0B               	btfss	11,6	;volatile
  3955  0007  2822               	goto	i1l115
  3956                           
  3957                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE3bits.TX1IE == 1 && PIR3bits.TX1IF == 1)
  3958  0008  014E               	movlb	14	; select bank14
  3959  0009  1A19               	btfsc	25,4	;volatile
  3960  000A  1E0F               	btfss	15,4	;volatile
  3961  000B  2813               	goto	i1l108
  3962                           
  3963                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART1_TxDefaultInterruptHandler();
  3964  000C  0140               	movlb	0	; select bank0
  3965  000D  0843               	movf	_EUSART1_TxDefaultInterruptHandler+1,w
  3966  000E  008A               	movwf	10
  3967  000F  0842               	movf	_EUSART1_TxDefaultInterruptHandler,w
  3968  0010  000A               	callw
  3969  0011  3180               	pagesel	$
  3970                           
  3971                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  3972  0012  2822               	goto	i1l115
  3973  0013                     i1l108:	
  3974                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE3bits.RC1IE == 1 && PIR
      +                          3bits.RC1IF == 1)
  3975                           
  3976  0013  1A99               	btfsc	25,5	;volatile
  3977  0014  1E8F               	btfss	15,5	;volatile
  3978  0015  281D               	goto	i1l110
  3979                           
  3980                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART1_RxDefaultInterruptHandler();
  3981  0016  0140               	movlb	0	; select bank0
  3982  0017  0841               	movf	_EUSART1_RxDefaultInterruptHandler+1,w
  3983  0018  008A               	movwf	10
  3984  0019  0840               	movf	_EUSART1_RxDefaultInterruptHandler,w
  3985  001A  000A               	callw
  3986  001B  3180               	pagesel	$
  3987                           
  3988                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  3989  001C  2822               	goto	i1l115
  3990  001D                     i1l110:	
  3991                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE4bits.TMR2IE == 1 && PI
      +                          R4bits.TMR2IF == 1)
  3992                           
  3993  001D  189A               	btfsc	26,1	;volatile
  3994  001E  1C90               	btfss	16,1	;volatile
  3995  001F  2822               	goto	i1l115
  3996                           
  3997                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR2_ISR();
  3998  0020  3182  22EE         	fcall	_TMR2_ISR
  3999  0022                     i1l115:	
  4000                           ;mcc_generated_files/interrupt_manager.c: 73:     }
  4001                           
  4002                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  4003                           
  4004  0022  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4005  0023  0009               	retfie
  4006  0024                     __end_of_INTERRUPT_InterruptManager:	
  4007                           
  4008                           	psect	text17
  4009  02EE                     __ptext17:	
  4010 ;; *************** function _TMR2_ISR *****************
  4011 ;; Defined at:
  4012 ;;		line 165 in file "mcc_generated_files/tmr2.c"
  4013 ;; Parameters:    Size  Location     Type
  4014 ;;		None
  4015 ;; Auto vars:     Size  Location     Type
  4016 ;;		None
  4017 ;; Return value:  Size  Location     Type
  4018 ;;                  1    wreg      void 
  4019 ;; Registers used:
  4020 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 0/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4030 ;;Total ram usage:        0 bytes
  4031 ;; Hardware stack levels used:    1
  4032 ;; Hardware stack levels required when called:    3
  4033 ;; This function calls:
  4034 ;;		_TMR2_CallBack
  4035 ;; This function is called by:
  4036 ;;		_INTERRUPT_InterruptManager
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039                           
  4040                           
  4041                           ;psect for function _TMR2_ISR
  4042  02EE                     _TMR2_ISR:	
  4043                           
  4044                           ;mcc_generated_files/tmr2.c: 169:     PIR4bits.TMR2IF = 0;
  4045                           
  4046                           ;incstack = 0
  4047                           ; Regs used in _TMR2_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4048  02EE  014E               	movlb	14	; select bank14
  4049  02EF  1090               	bcf	16,1	;volatile
  4050                           
  4051                           ;mcc_generated_files/tmr2.c: 173:     TMR2_CallBack();
  4052  02F0  3182  22A7         	fcall	_TMR2_CallBack
  4053  02F2  0008               	return
  4054  02F3                     __end_of_TMR2_ISR:	
  4055                           
  4056                           	psect	text18
  4057  02A7                     __ptext18:	
  4058 ;; *************** function _TMR2_CallBack *****************
  4059 ;; Defined at:
  4060 ;;		line 176 in file "mcc_generated_files/tmr2.c"
  4061 ;; Parameters:    Size  Location     Type
  4062 ;;		None
  4063 ;; Auto vars:     Size  Location     Type
  4064 ;;		None
  4065 ;; Return value:  Size  Location     Type
  4066 ;;                  1    wreg      void 
  4067 ;; Registers used:
  4068 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4069 ;; Tracked objects:
  4070 ;;		On entry : 0/0
  4071 ;;		On exit  : 0/0
  4072 ;;		Unchanged: 0/0
  4073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4078 ;;Total ram usage:        0 bytes
  4079 ;; Hardware stack levels used:    1
  4080 ;; Hardware stack levels required when called:    2
  4081 ;; This function calls:
  4082 ;;		Absolute function
  4083 ;;		_TMR2_DefaultInterruptHandler
  4084 ;;		_isr_1ms
  4085 ;; This function is called by:
  4086 ;;		_TMR2_ISR
  4087 ;; This function uses a non-reentrant model
  4088 ;;
  4089                           
  4090                           
  4091                           ;psect for function _TMR2_CallBack
  4092  02A7                     _TMR2_CallBack:	
  4093                           
  4094                           ;mcc_generated_files/tmr2.c: 180:     if(TMR2_InterruptHandler)
  4095                           
  4096                           ;incstack = 0
  4097                           ; Regs used in _TMR2_CallBack: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4098  02A7  0140               	movlb	0	; select bank0
  4099  02A8  0844               	movf	_TMR2_InterruptHandler,w
  4100  02A9  0445               	iorwf	_TMR2_InterruptHandler+1,w
  4101  02AA  1903               	btfsc	3,2
  4102  02AB  0008               	return
  4103                           
  4104                           ;mcc_generated_files/tmr2.c: 181:     {;mcc_generated_files/tmr2.c: 182:         TMR2_In
      +                          terruptHandler();
  4105  02AC  0845               	movf	_TMR2_InterruptHandler+1,w
  4106  02AD  008A               	movwf	10
  4107  02AE  0844               	movf	_TMR2_InterruptHandler,w
  4108  02AF  000A               	callw
  4109  02B0  3182               	pagesel	$
  4110  02B1  0008               	return
  4111  02B2                     __end_of_TMR2_CallBack:	
  4112                           
  4113                           	psect	text19
  4114  02FE                     __ptext19:	
  4115 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  4116 ;; Defined at:
  4117 ;;		line 190 in file "mcc_generated_files/tmr2.c"
  4118 ;; Parameters:    Size  Location     Type
  4119 ;;		None
  4120 ;; Auto vars:     Size  Location     Type
  4121 ;;		None
  4122 ;; Return value:  Size  Location     Type
  4123 ;;                  1    wreg      void 
  4124 ;; Registers used:
  4125 ;;		None
  4126 ;; Tracked objects:
  4127 ;;		On entry : 0/0
  4128 ;;		On exit  : 0/0
  4129 ;;		Unchanged: 0/0
  4130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4135 ;;Total ram usage:        0 bytes
  4136 ;; Hardware stack levels used:    1
  4137 ;; This function calls:
  4138 ;;		Nothing
  4139 ;; This function is called by:
  4140 ;;		_TMR2_Initialize
  4141 ;;		_TMR2_CallBack
  4142 ;; This function uses a non-reentrant model
  4143 ;;
  4144                           
  4145                           
  4146                           ;psect for function _TMR2_DefaultInterruptHandler
  4147  02FE                     _TMR2_DefaultInterruptHandler:	
  4148                           
  4149                           ;incstack = 0
  4150                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  4151  02FE  0008               	return
  4152  02FF                     __end_of_TMR2_DefaultInterruptHandler:	
  4153                           
  4154                           	psect	text20
  4155  0271                     __ptext20:	
  4156 ;; *************** function _isr_1ms *****************
  4157 ;; Defined at:
  4158 ;;		line 98 in file "main.c"
  4159 ;; Parameters:    Size  Location     Type
  4160 ;;		None
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;		None
  4163 ;; Return value:  Size  Location     Type
  4164 ;;                  1    wreg      void 
  4165 ;; Registers used:
  4166 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4167 ;; Tracked objects:
  4168 ;;		On entry : 0/0
  4169 ;;		On exit  : 0/0
  4170 ;;		Unchanged: 0/0
  4171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4176 ;;Total ram usage:        0 bytes
  4177 ;; Hardware stack levels used:    1
  4178 ;; Hardware stack levels required when called:    1
  4179 ;; This function calls:
  4180 ;;		_scanInput
  4181 ;; This function is called by:
  4182 ;;		_main
  4183 ;;		_TMR2_CallBack
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186                           
  4187                           
  4188                           ;psect for function _isr_1ms
  4189  0271                     _isr_1ms:	
  4190                           
  4191                           ;main.c: 100:     scan.tick = 1;
  4192                           
  4193                           ;incstack = 0
  4194                           ; Regs used in _isr_1ms: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4195  0271  0140               	movlb	0	; select bank0
  4196  0272  1439               	bsf	_scan+4,0
  4197                           
  4198                           ;main.c: 101:     scanInput();
  4199  0273  3181  2178  3182   	fcall	_scanInput
  4200                           
  4201                           ;main.c: 103:     if (scan.timeout > 0)
  4202  0276  0140               	movlb	0	; select bank0
  4203  0277  0836               	movf	_scan+1,w
  4204  0278  0437               	iorwf	_scan+2,w
  4205  0279  1903               	btfsc	3,2
  4206  027A  2A7F               	goto	i1l1567
  4207                           
  4208                           ;main.c: 104:     {;main.c: 105:         scan.timeout--;
  4209  027B  3001               	movlw	1
  4210  027C  02B6               	subwf	_scan+1,f
  4211  027D  3000               	movlw	0
  4212  027E  3BB7               	subwfb	_scan+2,f
  4213  027F                     i1l1567:	
  4214                           
  4215                           ;main.c: 107:     if (scan.count > 0)
  4216  027F  0835               	movf	_scan,w
  4217  0280  1903               	btfsc	3,2
  4218  0281  0008               	return
  4219                           
  4220                           ;main.c: 108:     {;main.c: 109:         scan.count--;
  4221  0282  3001               	movlw	1
  4222  0283  02B5               	subwf	_scan,f
  4223  0284  0008               	return
  4224  0285                     __end_of_isr_1ms:	
  4225                           
  4226                           	psect	text21
  4227  0178                     __ptext21:	
  4228 ;; *************** function _scanInput *****************
  4229 ;; Defined at:
  4230 ;;		line 320 in file "main.c"
  4231 ;; Parameters:    Size  Location     Type
  4232 ;;		None
  4233 ;; Auto vars:     Size  Location     Type
  4234 ;;		None
  4235 ;; Return value:  Size  Location     Type
  4236 ;;                  1    wreg      void 
  4237 ;; Registers used:
  4238 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4239 ;; Tracked objects:
  4240 ;;		On entry : 0/0
  4241 ;;		On exit  : 0/0
  4242 ;;		Unchanged: 0/0
  4243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4246 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4247 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4248 ;;Total ram usage:        2 bytes
  4249 ;; Hardware stack levels used:    1
  4250 ;; This function calls:
  4251 ;;		Nothing
  4252 ;; This function is called by:
  4253 ;;		_isr_1ms
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256                           
  4257                           
  4258                           ;psect for function _scanInput
  4259  0178                     _scanInput:	
  4260                           
  4261                           ;main.c: 322:     switch (scan.state)
  4262                           
  4263                           ;incstack = 0
  4264                           ; Regs used in _scanInput: [wreg-fsr0h+status,2+status,0]
  4265  0178  299E               	goto	i1l1531
  4266  0179                     i1l438:	
  4267                           ;main.c: 323:     {;main.c: 324:     case SCAN_INPUT_IDLE:
  4268                           
  4269                           
  4270                           ;main.c: 325:         if (PORTAbits.RA3 == 1)
  4271  0179  1D8C               	btfss	12,3	;volatile
  4272  017A  0008               	return
  4273                           
  4274                           ;main.c: 326:         {;main.c: 327:             scan.count = 4;
  4275  017B  3004               	movlw	4
  4276  017C  00F6               	movwf	??_scanInput
  4277  017D  0876               	movf	??_scanInput,w
  4278  017E  00B5               	movwf	_scan
  4279                           
  4280                           ;main.c: 328:             scan.state = SCAN_INPUT_DEBOUNCE;
  4281  017F  01B8               	clrf	_scan+3
  4282  0180  0AB8               	incf	_scan+3,f
  4283  0181  0008               	return
  4284  0182                     i1l441:	
  4285                           ;main.c: 332:     case SCAN_INPUT_DEBOUNCE:
  4286                           
  4287                           
  4288                           ;main.c: 333:         if (PORTAbits.RA3 == 1)
  4289  0182  1D8C               	btfss	12,3	;volatile
  4290  0183  2995               	goto	i1l1521
  4291                           
  4292                           ;main.c: 334:         {;main.c: 335:             if (scan.count == 0)
  4293  0184  0835               	movf	_scan,w
  4294  0185  1D03               	btfss	3,2
  4295  0186  0008               	return
  4296                           
  4297                           ;main.c: 336:             {;main.c: 337:                 scan.risingEdge = 1;
  4298  0187  14B9               	bsf	_scan+4,1
  4299                           
  4300                           ;main.c: 338:                 scan.state = SCAN_INPUT_ASSERTED;
  4301  0188  3002               	movlw	2
  4302  0189  00F6               	movwf	??_scanInput
  4303  018A  0876               	movf	??_scanInput,w
  4304  018B  00B8               	movwf	_scan+3
  4305                           
  4306                           ;main.c: 339:                 scan.count = 15;
  4307  018C  300F               	movlw	15
  4308  018D  00F6               	movwf	??_scanInput
  4309  018E  0876               	movf	??_scanInput,w
  4310  018F  00B5               	movwf	_scan
  4311  0190  0008               	return
  4312  0191                     i1l1523:	
  4313                           
  4314                           ;main.c: 350:         {;main.c: 351:             if (scan.count == 0)
  4315  0191  0835               	movf	_scan,w
  4316  0192  1D03               	btfss	3,2
  4317  0193  0008               	return
  4318                           
  4319                           ;main.c: 352:             {;main.c: 353:                 scan.fallingEdge = 1;
  4320  0194  1539               	bsf	_scan+4,2
  4321  0195                     i1l1521:	
  4322                           
  4323                           ;main.c: 343:         {;main.c: 344:             scan.state = SCAN_INPUT_IDLE;
  4324  0195  01B8               	clrf	_scan+3
  4325  0196  0008               	return
  4326  0197                     i1l445:	
  4327                           ;main.c: 348:     case SCAN_INPUT_ASSERTED:
  4328                           
  4329                           
  4330                           ;main.c: 349:         if (PORTAbits.RA3 == 0)
  4331  0197  1D8C               	btfss	12,3	;volatile
  4332  0198  2991               	goto	i1l1523
  4333                           
  4334                           ;main.c: 358:         {;main.c: 359:             scan.count = 15;
  4335  0199  300F               	movlw	15
  4336  019A  00F6               	movwf	??_scanInput
  4337  019B  0876               	movf	??_scanInput,w
  4338  019C  00B5               	movwf	_scan
  4339  019D  0008               	return
  4340  019E                     i1l1531:	
  4341  019E  0140               	movlb	0	; select bank0
  4342  019F  0838               	movf	_scan+3,w
  4343  01A0  00F6               	movwf	??_scanInput
  4344  01A1  01F7               	clrf	??_scanInput+1
  4345                           
  4346                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4347                           ; Switch size 1, requested type "simple"
  4348                           ; Number of cases is 1, Range of values is 0 to 0
  4349                           ; switch strategies available:
  4350                           ; Name         Instructions Cycles
  4351                           ; simple_byte            4     3 (average)
  4352                           ; direct_byte            8     6 (fixed)
  4353                           ; jumptable            260     6 (fixed)
  4354                           ;	Chosen strategy is simple_byte
  4355  01A2  0877               	movf	??_scanInput+1,w
  4356  01A3  3A00               	xorlw	0	; case 0
  4357  01A4  1903               	skipnz
  4358  01A5  29A7               	goto	i1l2101
  4359  01A6  29B2               	goto	i1l449
  4360  01A7                     i1l2101:	
  4361                           
  4362                           ; Switch size 1, requested type "simple"
  4363                           ; Number of cases is 3, Range of values is 0 to 2
  4364                           ; switch strategies available:
  4365                           ; Name         Instructions Cycles
  4366                           ; simple_byte           10     6 (average)
  4367                           ; direct_byte           12     6 (fixed)
  4368                           ; jumptable            260     6 (fixed)
  4369                           ;	Chosen strategy is simple_byte
  4370  01A7  0876               	movf	??_scanInput,w
  4371  01A8  3A00               	xorlw	0	; case 0
  4372  01A9  1903               	skipnz
  4373  01AA  2979               	goto	i1l438
  4374  01AB  3A01               	xorlw	1	; case 1
  4375  01AC  1903               	skipnz
  4376  01AD  2982               	goto	i1l441
  4377  01AE  3A03               	xorlw	3	; case 2
  4378  01AF  1903               	skipnz
  4379  01B0  2997               	goto	i1l445
  4380  01B1  29B2               	goto	i1l449
  4381  01B2                     i1l449:	
  4382  01B2  0008               	return
  4383  01B3                     __end_of_scanInput:	
  4384                           
  4385                           	psect	text22
  4386  0229                     __ptext22:	
  4387 ;; *************** function _EUSART1_Transmit_ISR *****************
  4388 ;; Defined at:
  4389 ;;		line 206 in file "mcc_generated_files/eusart1.c"
  4390 ;; Parameters:    Size  Location     Type
  4391 ;;		None
  4392 ;; Auto vars:     Size  Location     Type
  4393 ;;		None
  4394 ;; Return value:  Size  Location     Type
  4395 ;;                  1    wreg      void 
  4396 ;; Registers used:
  4397 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4398 ;; Tracked objects:
  4399 ;;		On entry : 0/0
  4400 ;;		On exit  : 0/0
  4401 ;;		Unchanged: 0/0
  4402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4405 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4406 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4407 ;;Total ram usage:        1 bytes
  4408 ;; Hardware stack levels used:    1
  4409 ;; This function calls:
  4410 ;;		Nothing
  4411 ;; This function is called by:
  4412 ;;		_EUSART1_Initialize
  4413 ;;		_INTERRUPT_InterruptManager
  4414 ;; This function uses a non-reentrant model
  4415 ;;
  4416                           
  4417                           
  4418                           ;psect for function _EUSART1_Transmit_ISR
  4419  0229                     _EUSART1_Transmit_ISR:	
  4420                           
  4421                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  4422                           
  4423                           ;incstack = 0
  4424                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  4425  0229  3040               	movlw	64
  4426  022A  0140               	movlb	0	; select bank0
  4427  022B  0246               	subwf	_eusart1TxBufferRemaining,w	;volatile
  4428  022C  1803               	skipnc
  4429  022D  2A43               	goto	i1l320
  4430                           
  4431                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
  4432  022E  0874               	movf	_eusart1TxTail,w
  4433  022F  3EA0               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
  4434  0230  0086               	movwf	6
  4435  0231  0187               	clrf	7
  4436  0232  0801               	movf	1,w
  4437  0233  0142               	movlb	2	; select bank2
  4438  0234  009A               	movwf	26	;volatile
  4439  0235  3001               	movlw	1
  4440  0236  00F6               	movwf	??_EUSART1_Transmit_ISR
  4441  0237  0876               	movf	??_EUSART1_Transmit_ISR,w
  4442  0238  07F4               	addwf	_eusart1TxTail,f	;volatile
  4443                           
  4444                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  4445  0239  3040               	movlw	64
  4446  023A  0274               	subwf	_eusart1TxTail,w	;volatile
  4447  023B  1803               	btfsc	3,0
  4448                           
  4449                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
  4450  023C  01F4               	clrf	_eusart1TxTail	;volatile
  4451                           
  4452                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
  4453  023D  3001               	movlw	1
  4454  023E  00F6               	movwf	??_EUSART1_Transmit_ISR
  4455  023F  0876               	movf	??_EUSART1_Transmit_ISR,w
  4456  0240  0140               	movlb	0	; select bank0
  4457  0241  07C6               	addwf	_eusart1TxBufferRemaining,f	;volatile
  4458                           
  4459                           ;mcc_generated_files/eusart1.c: 218:     }
  4460  0242  0008               	return
  4461  0243                     i1l320:	
  4462                           ;mcc_generated_files/eusart1.c: 219:     else
  4463                           
  4464                           
  4465                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE3bits.TX1IE = 0;
  4466  0243  014E               	movlb	14	; select bank14
  4467  0244  1219               	bcf	25,4	;volatile
  4468  0245  0008               	return
  4469  0246                     __end_of_EUSART1_Transmit_ISR:	
  4470                           
  4471                           	psect	text23
  4472  01B3                     __ptext23:	
  4473 ;; *************** function _EUSART1_Receive_ISR *****************
  4474 ;; Defined at:
  4475 ;;		line 225 in file "mcc_generated_files/eusart1.c"
  4476 ;; Parameters:    Size  Location     Type
  4477 ;;		None
  4478 ;; Auto vars:     Size  Location     Type
  4479 ;;		None
  4480 ;; Return value:  Size  Location     Type
  4481 ;;                  1    wreg      void 
  4482 ;; Registers used:
  4483 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4484 ;; Tracked objects:
  4485 ;;		On entry : 0/0
  4486 ;;		On exit  : 0/0
  4487 ;;		Unchanged: 0/0
  4488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4493 ;;Total ram usage:        0 bytes
  4494 ;; Hardware stack levels used:    1
  4495 ;; Hardware stack levels required when called:    2
  4496 ;; This function calls:
  4497 ;;		Absolute function
  4498 ;;		_EUSART1_DefaultErrorHandler
  4499 ;;		_EUSART1_DefaultFramingErrorHandler
  4500 ;;		_EUSART1_DefaultOverrunErrorHandler
  4501 ;;		_EUSART1_RxDataHandler
  4502 ;; This function is called by:
  4503 ;;		_EUSART1_Initialize
  4504 ;;		_INTERRUPT_InterruptManager
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           
  4508                           
  4509                           ;psect for function _EUSART1_Receive_ISR
  4510  01B3                     _EUSART1_Receive_ISR:	
  4511                           
  4512                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  4513                           
  4514                           ;incstack = 0
  4515                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4516  01B3  0873               	movf	_eusart1RxHead,w	;volatile
  4517  01B4  3E20               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
  4518  01B5  0086               	movwf	6
  4519  01B6  0187               	clrf	7
  4520  01B7  0181               	clrf	1
  4521                           
  4522                           ;mcc_generated_files/eusart1.c: 230:     if(RC1STAbits.FERR){
  4523  01B8  0142               	movlb	2	; select bank2
  4524  01B9  1D1D               	btfss	29,2	;volatile
  4525  01BA  29C6               	goto	i1l1747
  4526                           
  4527                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  4528  01BB  0873               	movf	_eusart1RxHead,w	;volatile
  4529  01BC  3E20               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
  4530  01BD  0086               	movwf	6
  4531  01BE  0187               	clrf	7
  4532  01BF  1481               	bsf	1,1
  4533                           
  4534                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
  4535  01C0  0140               	movlb	0	; select bank0
  4536  01C1  083F               	movf	_EUSART1_FramingErrorHandler+1,w
  4537  01C2  008A               	movwf	10
  4538  01C3  083E               	movf	_EUSART1_FramingErrorHandler,w
  4539  01C4  000A               	callw
  4540  01C5  3181               	pagesel	$
  4541  01C6                     i1l1747:	
  4542                           
  4543                           ;mcc_generated_files/eusart1.c: 235:     if(RC1STAbits.OERR){
  4544  01C6  0142               	movlb	2	; select bank2
  4545  01C7  1C9D               	btfss	29,1	;volatile
  4546  01C8  29D4               	goto	i1l1753
  4547                           
  4548                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  4549  01C9  0873               	movf	_eusart1RxHead,w	;volatile
  4550  01CA  3E20               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
  4551  01CB  0086               	movwf	6
  4552  01CC  0187               	clrf	7
  4553  01CD  1501               	bsf	1,2
  4554                           
  4555                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
  4556  01CE  0140               	movlb	0	; select bank0
  4557  01CF  083D               	movf	_EUSART1_OverrunErrorHandler+1,w
  4558  01D0  008A               	movwf	10
  4559  01D1  083C               	movf	_EUSART1_OverrunErrorHandler,w
  4560  01D2  000A               	callw
  4561  01D3  3181               	pagesel	$
  4562  01D4                     i1l1753:	
  4563                           
  4564                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  4565  01D4  0873               	movf	_eusart1RxHead,w	;volatile
  4566  01D5  3E20               	addlw	(low (_eusart1RxStatusBuffer| 0))& (0+255)
  4567  01D6  0086               	movwf	6
  4568  01D7  0187               	clrf	7
  4569  01D8  0801               	movf	1,w
  4570  01D9  1903               	btfsc	3,2
  4571  01DA  29E2               	goto	i1l1757
  4572                           
  4573                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
  4574  01DB  0140               	movlb	0	; select bank0
  4575  01DC  083B               	movf	_EUSART1_ErrorHandler+1,w
  4576  01DD  008A               	movwf	10
  4577  01DE  083A               	movf	_EUSART1_ErrorHandler,w
  4578  01DF  000A               	callw
  4579  01E0  3181               	pagesel	$
  4580                           
  4581                           ;mcc_generated_files/eusart1.c: 242:     } else {
  4582  01E1  0008               	return
  4583  01E2                     i1l1757:	
  4584                           
  4585                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
  4586  01E2  3182  2246         	fcall	_EUSART1_RxDataHandler
  4587  01E4  0008               	return
  4588  01E5                     __end_of_EUSART1_Receive_ISR:	
  4589                           
  4590                           	psect	text24
  4591  02F7                     __ptext24:	
  4592 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  4593 ;; Defined at:
  4594 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  4595 ;; Parameters:    Size  Location     Type
  4596 ;;		None
  4597 ;; Auto vars:     Size  Location     Type
  4598 ;;		None
  4599 ;; Return value:  Size  Location     Type
  4600 ;;                  1    wreg      void 
  4601 ;; Registers used:
  4602 ;;		None
  4603 ;; Tracked objects:
  4604 ;;		On entry : 0/0
  4605 ;;		On exit  : 0/0
  4606 ;;		Unchanged: 0/0
  4607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4612 ;;Total ram usage:        0 bytes
  4613 ;; Hardware stack levels used:    1
  4614 ;; This function calls:
  4615 ;;		Nothing
  4616 ;; This function is called by:
  4617 ;;		_EUSART1_Initialize
  4618 ;;		_EUSART1_Receive_ISR
  4619 ;; This function uses a non-reentrant model
  4620 ;;
  4621                           
  4622                           
  4623                           ;psect for function _EUSART1_DefaultOverrunErrorHandler
  4624  02F7                     _EUSART1_DefaultOverrunErrorHandler:	
  4625                           
  4626                           ;mcc_generated_files/eusart1.c: 264:     RC1STAbits.CREN = 0;
  4627                           
  4628                           ;incstack = 0
  4629                           ; Regs used in _EUSART1_DefaultOverrunErrorHandler: []
  4630  02F7  0142               	movlb	2	; select bank2
  4631  02F8  121D               	bcf	29,4	;volatile
  4632                           
  4633                           ;mcc_generated_files/eusart1.c: 265:     RC1STAbits.CREN = 1;
  4634  02F9  161D               	bsf	29,4	;volatile
  4635  02FA  0008               	return
  4636  02FB                     __end_of_EUSART1_DefaultOverrunErrorHandler:	
  4637                           
  4638                           	psect	text25
  4639  02FF                     __ptext25:	
  4640 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  4641 ;; Defined at:
  4642 ;;		line 259 in file "mcc_generated_files/eusart1.c"
  4643 ;; Parameters:    Size  Location     Type
  4644 ;;		None
  4645 ;; Auto vars:     Size  Location     Type
  4646 ;;		None
  4647 ;; Return value:  Size  Location     Type
  4648 ;;                  1    wreg      void 
  4649 ;; Registers used:
  4650 ;;		None
  4651 ;; Tracked objects:
  4652 ;;		On entry : 0/0
  4653 ;;		On exit  : 0/0
  4654 ;;		Unchanged: 0/0
  4655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4660 ;;Total ram usage:        0 bytes
  4661 ;; Hardware stack levels used:    1
  4662 ;; This function calls:
  4663 ;;		Nothing
  4664 ;; This function is called by:
  4665 ;;		_EUSART1_Initialize
  4666 ;;		_EUSART1_Receive_ISR
  4667 ;; This function uses a non-reentrant model
  4668 ;;
  4669                           
  4670                           
  4671                           ;psect for function _EUSART1_DefaultFramingErrorHandler
  4672  02FF                     _EUSART1_DefaultFramingErrorHandler:	
  4673                           
  4674                           ;incstack = 0
  4675                           ; Regs used in _EUSART1_DefaultFramingErrorHandler: []
  4676  02FF  0008               	return
  4677  0300                     __end_of_EUSART1_DefaultFramingErrorHandler:	
  4678                           
  4679                           	psect	text26
  4680  02FB                     __ptext26:	
  4681 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  4682 ;; Defined at:
  4683 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  4684 ;; Parameters:    Size  Location     Type
  4685 ;;		None
  4686 ;; Auto vars:     Size  Location     Type
  4687 ;;		None
  4688 ;; Return value:  Size  Location     Type
  4689 ;;                  1    wreg      void 
  4690 ;; Registers used:
  4691 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4692 ;; Tracked objects:
  4693 ;;		On entry : 0/0
  4694 ;;		On exit  : 0/0
  4695 ;;		Unchanged: 0/0
  4696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4701 ;;Total ram usage:        0 bytes
  4702 ;; Hardware stack levels used:    1
  4703 ;; Hardware stack levels required when called:    1
  4704 ;; This function calls:
  4705 ;;		_EUSART1_RxDataHandler
  4706 ;; This function is called by:
  4707 ;;		_EUSART1_Initialize
  4708 ;;		_EUSART1_Receive_ISR
  4709 ;; This function uses a non-reentrant model
  4710 ;;
  4711                           
  4712                           
  4713                           ;psect for function _EUSART1_DefaultErrorHandler
  4714  02FB                     _EUSART1_DefaultErrorHandler:	
  4715                           
  4716                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
  4717                           
  4718                           ;incstack = 0
  4719                           ; Regs used in _EUSART1_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  4720  02FB  3182  2246         	fcall	_EUSART1_RxDataHandler
  4721  02FD  0008               	return
  4722  02FE                     __end_of_EUSART1_DefaultErrorHandler:	
  4723                           
  4724                           	psect	text27
  4725  0246                     __ptext27:	
  4726 ;; *************** function _EUSART1_RxDataHandler *****************
  4727 ;; Defined at:
  4728 ;;		line 249 in file "mcc_generated_files/eusart1.c"
  4729 ;; Parameters:    Size  Location     Type
  4730 ;;		None
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;		None
  4733 ;; Return value:  Size  Location     Type
  4734 ;;                  1    wreg      void 
  4735 ;; Registers used:
  4736 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4737 ;; Tracked objects:
  4738 ;;		On entry : 0/0
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4744 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4745 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4746 ;;Total ram usage:        1 bytes
  4747 ;; Hardware stack levels used:    1
  4748 ;; This function calls:
  4749 ;;		Nothing
  4750 ;; This function is called by:
  4751 ;;		_EUSART1_Receive_ISR
  4752 ;;		_EUSART1_DefaultErrorHandler
  4753 ;; This function uses a non-reentrant model
  4754 ;;
  4755                           
  4756                           
  4757                           ;psect for function _EUSART1_RxDataHandler
  4758  0246                     _EUSART1_RxDataHandler:	
  4759                           
  4760                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
  4761                           
  4762                           ;incstack = 0
  4763                           ; Regs used in _EUSART1_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  4764  0246  0142               	movlb	2	; select bank2
  4765  0247  0819               	movf	25,w	;volatile
  4766  0248  00F6               	movwf	??_EUSART1_RxDataHandler
  4767  0249  0873               	movf	_eusart1RxHead,w
  4768  024A  3E28               	addlw	(low (_eusart1RxBuffer| 0))& (0+255)
  4769  024B  0086               	movwf	6
  4770  024C  0187               	clrf	7
  4771  024D  0876               	movf	??_EUSART1_RxDataHandler,w
  4772  024E  0081               	movwf	1
  4773  024F  3001               	movlw	1
  4774  0250  00F6               	movwf	??_EUSART1_RxDataHandler
  4775  0251  0876               	movf	??_EUSART1_RxDataHandler,w
  4776  0252  07F3               	addwf	_eusart1RxHead,f	;volatile
  4777                           
  4778                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  4779  0253  3008               	movlw	8
  4780  0254  0273               	subwf	_eusart1RxHead,w	;volatile
  4781  0255  1803               	btfsc	3,0
  4782                           
  4783                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
  4784  0256  01F3               	clrf	_eusart1RxHead	;volatile
  4785                           
  4786                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
  4787  0257  3001               	movlw	1
  4788  0258  00F6               	movwf	??_EUSART1_RxDataHandler
  4789  0259  0876               	movf	??_EUSART1_RxDataHandler,w
  4790  025A  07F1               	addwf	_eusart1RxCount,f	;volatile
  4791  025B  0008               	return
  4792  025C                     __end_of_EUSART1_RxDataHandler:	
  4793  007E                     btemp	set	126	;btemp
  4794  007E                     int$flags	set	126
  4795  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    4
    Data        0
    BSS         96
    Persistent  45
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80      2      41
    BANK1            80      0      64
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), Absolute function(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> isr_1ms(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> isr_1ms(), Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_setState
    _setState->_EUSART1_Write
    _SYSTEM_Initialize->_EUSART1_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _isr_1ms->_scanInput
    _EUSART1_Receive_ISR->_EUSART1_RxDataHandler
    _EUSART1_DefaultErrorHandler->_EUSART1_RxDataHandler

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     970
                                              0 BANK0      2     2      0
                      _EUSART1_Write
                  _SYSTEM_Initialize
           _TMR2_SetInterruptHandler
                       _countTargets
                           _setState
 ---------------------------------------------------------------------------------
 (1) _setState                                             2     2      0      88
                                              4 COMMON     2     2      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        2     2      0      44
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _countTargets                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     664
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   1     1      0     490
                                              4 COMMON     1     1      0
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0       0
                   Absolute function *
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR2_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                            _isr_1ms *
 ---------------------------------------------------------------------------------
 (7) _isr_1ms                                              0     0      0       0
                          _scanInput
 ---------------------------------------------------------------------------------
 (8) _scanInput                                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultErrorHandler                          0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART1_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Write
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _countTargets
   _setState
     _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *
   _TMR2_ISR *
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
       _isr_1ms *
         _scanInput

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      75       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2      29       6       51.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      40       8       80.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      75      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Jul 17 15:44:03 2019

              __end_of_TMR2_SetInterruptHandler 02D0                        _eusart1TxBufferRemaining 0046  
                                   __CFG_CP$OFF 0000                                             l400 0051  
                                           l308 01F1                                             l409 0074  
                                           l418 0099                                             _PR2 028D  
                       __size_of_PMD_Initialize 0008                                 _TMR2_Initialize 025C  
                                  __CFG_BORV$LO 0000                                             wreg 0009  
                                 __CFG_BBEN$OFF 0000                                    __CFG_LVP$OFF 0000  
                                  __CFG_ZCD$OFF 0000                                            l2013 006A  
                                          l2023 007E                                            l2015 006C  
                                          l2033 008C                                            l2045 00A4  
                                          l2049 00A9                                            l1801 010F  
                                          l2099 00CD                                            l1821 012D  
                                          l1813 0121                                            l1805 0115  
                                          l1671 01E6                                            l1825 0133  
                                          l1817 0127                                            l1809 011B  
                                          l1781 00F1                                            l1773 00E5  
                                          l1685 0205                                            l1793 0103  
                                          l1785 00F7                                            l1777 00EB  
                                          l1797 0109                                            l1789 00FD  
                                          l1995 00B6                                            l1989 00AD  
                                          l1999 00BD                                            _LATA 0018  
                                          _LATB 0019                                            _LATC 001A  
                                          _T2PR 028D                                            _PMD0 0796  
                                          _PMD1 0797                                            _PMD2 0798  
                                          _PMD3 0799                                            _PMD4 079A  
                                          _PMD5 079B                                            _TMR2 028C  
                                          _WPUA 1F39                                            _WPUB 1F44  
                                          _WPUC 1F4F                                   _EUSART1_Write 01E5  
                                 __CFG_FCMEN$ON 0000                                            _main 003F  
                                          _scan 0035                                            fsr0h 0005  
                                          fsr1h 0007                                            indf0 0000  
                                          fsr0l 0004                                            indf1 0001  
                                          fsr1l 0006                                            btemp 007E  
                                 __CFG_BOREN$ON 0000                                            start 0024  
                                 __CFG_CSWEN$ON 0000                  __size_of_OSCILLATOR_Initialize 000A  
                 __end_of_OSCILLATOR_Initialize 02BC                           _eusart1RxStatusBuffer 0020  
                                         ?_main 0076                                   __CFG_WDTE$OFF 0000  
                                         _T2CON 028E                                           _T2HLT 028F  
                                         i1l110 001D                                           i1l115 0022  
                                         i1l108 0013                                           _T2TMR 028C  
                                         i1l320 0243                                           _T2RST 0291  
                                         i1l441 0182                                           i1l445 0197  
                                         i1l438 0179                                           i1l449 01B2  
                                         _OSCEN 0891                                           _TRISA 0012  
                                         _TRISB 0013                                           _TRISC 0014  
                                 ?_countTargets 0076                                   __CFG_PWRTE$ON 0000  
                          _EUSART1_Transmit_ISR 0229                                __end_of_TMR2_ISR 02F3  
                                 __CFG_WRTB$OFF 0000                                   __CFG_WRTC$OFF 0000  
                               __end_of_isr_1ms 0285                                  ?_EUSART1_Write 0076  
                                         pclath 000A                                           status 0003  
                                         wtemp0 007E      __end_of_EUSART1_DefaultFramingErrorHandler 0300  
   __size_of_EUSART1_DefaultFramingErrorHandler 0001            ??_EUSART1_DefaultFramingErrorHandler 0076  
           ?_EUSART1_DefaultFramingErrorHandler 0076              _EUSART1_DefaultFramingErrorHandler 02FF  
                                __CFG_MCLRE$OFF 0000                                 __initialization 0026  
                    __end_of_EUSART1_Initialize 0178                                    __end_of_main 00DC  
                                __CFG_SAFEN$OFF 0000                         __end_of_TMR2_Initialize 0271  
                   ?_INTERRUPT_InterruptManager 0076                        _TMR2_SetInterruptHandler 02CA  
                                        ??_main 0047                                  ??_countTargets 0078  
                         ?_EUSART1_Transmit_ISR 0076                                          _ANSELA 1F38  
                                        _ANSELB 1F43                                          _ANSELC 1F4E  
                            __CFG_RSTOSC$HFINT1 0000                                          _RC1REG 0119  
                                        _RA2PPS 1F12                                          _RC1STA 011D  
                                        i1l2101 01A7                                          i1l1521 0195  
                                        _ODCONA 1F3A                                          _ODCONB 1F45  
                                        i1l1523 0191                                          i1l1531 019E  
                                        _ODCONC 1F50                                          i1l1567 027F  
                                        i1l1753 01D4                                          i1l1747 01C6  
                                        i1l1757 01E2                                  __CFG_WDTCCS$SC 0000  
                                        _INLVLA 1F3C                                          _INLVLB 1F47  
                                        _INLVLC 1F52                                          _OSCFRQ 0893  
                                        _TX1REG 011A                                          _TX1STA 011E  
                                __CFG_STVREN$ON 0000                        ?_EUSART1_SetErrorHandler 0078  
                                        _target 0030                ??_EUSART1_SetOverrunErrorHandler 007A  
               ?_EUSART1_SetOverrunErrorHandler 0078                                __end_of_setState 0298  
                                _PMD_Initialize 02BC                                       ??_isr_1ms 0078  
                               ??_EUSART1_Write 0078        TMR2_SetInterruptHandler@InterruptHandler 0078  
                               _eusart1RxBuffer 0028                                 _eusart1TxBuffer 00A0  
                             _SYSTEM_Initialize 0298                         __end_of__initialization 003B  
                         __end_of_TMR2_CallBack 02B2                              ?_SYSTEM_Initialize 0076  
                __size_of_EUSART1_RxDataHandler 0016                   __end_of_EUSART1_RxDataHandler 025C  
                                __pcstackCOMMON 0076                             ??_SYSTEM_Initialize 007B  
                                     ?_TMR2_ISR 0076                                ?_TMR2_Initialize 0076  
                        __end_of_PMD_Initialize 02C4                          ??_EUSART1_Transmit_ISR 0076  
                   __end_of_EUSART1_Receive_ISR 01E5                       __end_of_SYSTEM_Initialize 02A7  
                                 _eusart1RxHead 0073                                   _eusart1TxHead 0075  
                                 _eusart1RxTail 0072                                      __pbssBANK0 0020  
                                    __pbssBANK1 00A0                                   _eusart1TxTail 0074  
             _EUSART1_TxDefaultInterruptHandler 0042                 ??_EUSART1_SetRxInterruptHandler 007A  
                          __end_of_countTargets 013A                              __size_of_scanInput 003B  
               __end_of_EUSART1_SetErrorHandler 02EE                                      __pmaintext 003F  
                               __CFG_PPS1WAY$ON 0000                                      ??_TMR2_ISR 0078  
                                    __pintentry 0004                                 ?_PMD_Initialize 0076  
        __end_of_EUSART1_SetFramingErrorHandler 02E8         __size_of_EUSART1_SetFramingErrorHandler 0006  
                _EUSART1_SetFramingErrorHandler 02E2                    ?_EUSART1_DefaultErrorHandler 0076  
                                       _SP1BRGH 011C                                         _SP1BRGL 011B  
                                       _OSCCON1 088D                                         _OSCCON3 088F  
                                       _OSCSTAT 0890                                         _OSCTUNE 0892  
                                       _SLRCONA 1F3B                                         _SLRCONB 1F46  
                                       _SLRCONC 1F51                                       ?_setState 0076  
                    ??_TMR2_SetInterruptHandler 007A                                         __ptext1 0285  
                                       __ptext2 01E5                                         __ptext3 00DC  
                                       __ptext4 0298                                         __ptext5 025C  
                                       __ptext6 02CA                                         __ptext7 02BC  
                                       __ptext8 0208                                         __ptext9 02B2  
                               __CFG_WRTAPP$OFF 0000                           _OSCILLATOR_Initialize 02B2  
                                     _T2CONbits 028E                                         _isr_1ms 0271  
                             __end_of_scanInput 01B3                              _EUSART1_Initialize 013A  
                      ??_PIN_MANAGER_Initialize 0078                                       _T2HLTbits 028F  
                               __CFG_WRTSAF$OFF 0000                   ??_EUSART1_DefaultErrorHandler 0077  
                    __size_of_SYSTEM_Initialize 000F                                         clrloop0 02C5  
                          end_of_initialization 003B                                       _T2RSTbits 0291  
                           ?_EUSART1_Initialize 0076                     _EUSART1_OverrunErrorHandler 003C  
         __end_of_EUSART1_SetRxInterruptHandler 02DC          __size_of_EUSART1_SetRxInterruptHandler 0006  
                 _EUSART1_SetRxInterruptHandler 02D6                                      ??_setState 007A  
                          ??_EUSART1_Initialize 007A                           __CFG_WDTCPS$WDTCPS_31 0000  
                                     _PORTAbits 000C                                       _PORTBbits 000D  
                                     _PORTCbits 000E                                      _stateTable 02F3  
              __size_of_EUSART1_SetErrorHandler 0006                             EUSART1_Write@txData 0079  
                              __CFG_FEXTOSC$OFF 0000                           __size_of_countTargets 005E  
          __size_of_EUSART1_DefaultErrorHandler 0003            __end_of_TMR2_DefaultInterruptHandler 02FF  
         __size_of_TMR2_DefaultInterruptHandler 0001                    _TMR2_DefaultInterruptHandler 02FE  
                             __size_of_TMR2_ISR 0005                          ?_OSCILLATOR_Initialize 0076  
                                  _countTargets 00DC                             start_initialization 0026  
               __size_of_PIN_MANAGER_Initialize 0021   EUSART1_SetRxInterruptHandler@interruptHandler 0078  
 EUSART1_SetTxInterruptHandler@interruptHandler 0078                           __end_of_EUSART1_Write 0208  
                              __CFG_LPBOREN$OFF 0000                                ??_PMD_Initialize 0078  
                         _EUSART1_RxDataHandler 0246                  ?_EUSART1_SetRxInterruptHandler 0078  
                 ?_TMR2_DefaultInterruptHandler 0076                                  _eusart1RxCount 0071  
                        __size_of_TMR2_CallBack 000B                                     __pbssCOMMON 0070  
             _EUSART1_RxDefaultInterruptHandler 0040                                       ___latbits 0002  
                 __size_of_EUSART1_Transmit_ISR 001D                                   __pcstackBANK0 0047  
                      __size_of_TMR2_Initialize 0015                 ??_EUSART1_SetTxInterruptHandler 007A  
              ??_EUSART1_SetFramingErrorHandler 007A                 ?_EUSART1_SetFramingErrorHandler 0078  
                  __size_of_EUSART1_Receive_ISR 0032                                       __pnvBANK0 003A  
                        _PIN_MANAGER_Initialize 0208                               __size_of_setState 0013  
                  ??_INTERRUPT_InterruptManager 0078                                        _BAUD1CON 011F  
                                      ?_isr_1ms 0076      __end_of_EUSART1_DefaultOverrunErrorHandler 02FB  
   __size_of_EUSART1_DefaultOverrunErrorHandler 0004            ??_EUSART1_DefaultOverrunErrorHandler 0076  
           ?_EUSART1_DefaultOverrunErrorHandler 0076              _EUSART1_DefaultOverrunErrorHandler 02F7  
                          _EUSART1_ErrorHandler 003A                         _EUSART1_SetErrorHandler 02E8  
                                      _T2CLKCON 0290                                       _scanInput 0178  
                                      _LATAbits 0018         EUSART1_SetErrorHandler@interruptHandler 0078  
                                     clear_ram0 02C4                                   _TMR2_CallBack 02A7  
                                      _PIE3bits 0719                                        _PIE4bits 071A  
           __size_of_INTERRUPT_InterruptManager 0020                                        _PIR3bits 070F  
                                      _PIR4bits 0710                          ?_EUSART1_RxDataHandler 0076  
                             __CFG_BBSIZE$BB512 0000                                        _TMR2_ISR 02EE  
                ??_TMR2_DefaultInterruptHandler 0076               __size_of_TMR2_SetInterruptHandler 0006  
                     ?_TMR2_SetInterruptHandler 0078                                      ?_scanInput 0076  
                             ??_TMR2_Initialize 007A                                  ?_TMR2_CallBack 0076  
         __end_of_EUSART1_SetTxInterruptHandler 02D6          __size_of_EUSART1_SetTxInterruptHandler 0006  
                 _EUSART1_SetTxInterruptHandler 02D0                         ??_OSCILLATOR_Initialize 0078  
                   __size_of_EUSART1_Initialize 003E                       ??_EUSART1_SetErrorHandler 007A  
           __end_of_EUSART1_DefaultErrorHandler 02FE                     _EUSART1_DefaultErrorHandler 02FB  
                              __size_of_isr_1ms 0014                                        __ptext10 013A  
                                      __ptext11 02D0                                        __ptext20 0271  
                                      __ptext12 02D6                                        __ptext21 0178  
                                      __ptext13 02DC                                        __ptext22 0229  
                                      __ptext14 02E2                                        __ptext23 01B3  
                                      __ptext15 02E8                                        __ptext24 02F7  
                                      __ptext25 02FF                                        __ptext17 02EE  
                                      __ptext26 02FB                                        __ptext18 02A7  
                                      __ptext27 0246                                        __ptext19 02FE  
                                     setState@s 007B                                   __size_of_main 009D  
                          __CFG_WDTCWS$WDTCWS_7 0000                                        _setState 0285  
                                    _RC1STAbits 011D  EUSART1_SetOverrunErrorHandler@interruptHandler 0078  
                                      int$flags 007E              __end_of_INTERRUPT_InterruptManager 0024  
                    _INTERRUPT_InterruptManager 0004                     _EUSART1_FramingErrorHandler 003E  
                           _EUSART1_Receive_ISR 01B3                                      _INTCONbits 000B  
                                   ??_scanInput 0076                                        intlevel1 0000  
                               ??_TMR2_CallBack 0078                            ?_EUSART1_Receive_ISR 0076  
                       ?_PIN_MANAGER_Initialize 0076                               __CFG_CLKOUTEN$OFF 0000  
        __end_of_EUSART1_SetOverrunErrorHandler 02E2         __size_of_EUSART1_SetOverrunErrorHandler 0006  
                _EUSART1_SetOverrunErrorHandler 02DC                    __end_of_EUSART1_Transmit_ISR 0246  
EUSART1_SetFramingErrorHandler@interruptHandler 0078                  ?_EUSART1_SetTxInterruptHandler 0078  
                            __end_of_stateTable 02F7                          __size_of_EUSART1_Write 0023  
                            _eusart1RxLastError 0070                                   __pstringtext1 02F3  
                                    _TX1STAbits 011E                           ??_EUSART1_Receive_ISR 0077  
                __end_of_PIN_MANAGER_Initialize 0229                           _TMR2_InterruptHandler 0044  
                       ??_EUSART1_RxDataHandler 0076  
